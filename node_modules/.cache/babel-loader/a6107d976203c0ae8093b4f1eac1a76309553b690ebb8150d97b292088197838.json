{"ast":null,"code":"export default {\n  data: function () {\n    return {\n      series: [{\n        name: \"Q1 Budget\",\n        group: \"budget\",\n        data: [3773870736, 56090919, 37979116, 33355799, 6324241, 114142, 60415, 39864, 20750, 10874, 439]\n      }],\n      chartOptions: {\n        chart: {\n          type: \"bar\",\n          stacked: false,\n          toolbar: {\n            show: false\n          }\n        },\n        dataLabels: {\n          enabled: true,\n          textAnchor: 'middle'\n        },\n        stroke: {\n          show: true,\n          lineCap: \"square\",\n          width: 10,\n          colors: [\"#00796B\"]\n        },\n        plotOptions: {\n          bar: {\n            horizontal: false,\n            // columnWidth: \"15%\",\n\n            distributed: false,\n            dataLabels: {\n              hideOverflowingLabels: true\n            }\n            // colors: {\n            //   // backgroundBarColors: [\"gray\"],\n\n            // },\n          }\n        },\n\n        xaxis: {\n          categories: [\"SAR\", \"JOD\", \"USD\", \"AED\", \"IQD\", \"EGP\", \"EUR\", \"Hyperpay_via_ConnectIn\", \"HyperPay_via_ConnectIn_CLIQ\", \"HyperPay1_via_ConnectIn\", \"HyperPay_via_ConnectIn_CLIQ\"],\n          crosshairs: {\n            show: false\n          },\n          labels: {\n            show: true,\n            // trim: true,\n            formatter: function (value, opts) {\n              if (value.length >= 10) {\n                return value.slice(0, 10) + \"...\";\n              }\n              return value;\n            }\n          }\n        },\n        yaxis: {\n          labels: {\n            formatter: val => {\n              if (val > 1000 && val < 1000000) {\n                return val / 1000 + 'K';\n              }\n              if (val > 1000000 && val < 1000000000) {\n                return val / 1000000 + 'M';\n              }\n              if (val > 1000000000 && val < 1000000000000) {\n                return val / 1000000000 + 'B';\n              }\n              return val;\n            }\n          }\n        },\n        legend: {\n          show: false\n        },\n        fill: {\n          colors: [\"#00796B\"]\n          // opacity: 1,\n        },\n\n        tooltip: {\n          theme: \"dark\",\n          x: {\n            show: true,\n            formatter: function (val) {\n              return val;\n            }\n          },\n          y: {\n            title: {\n              formatter: function () {\n                return \"value\";\n              }\n            }\n          }\n        }\n      }\n    };\n  }\n};","map":{"version":3,"names":["data","series","name","group","chartOptions","chart","type","stacked","toolbar","show","dataLabels","enabled","textAnchor","stroke","lineCap","width","colors","plotOptions","bar","horizontal","distributed","hideOverflowingLabels","xaxis","categories","crosshairs","labels","formatter","value","opts","length","slice","yaxis","val","legend","fill","tooltip","theme","x","y","title"],"sources":["/var/www/html/project/Dash_Vuexy-master/src/views/apexchart/chartjs.vue"],"sourcesContent":["<template>\n  <div class=\"maindiv\">\n    <div id=\"chart\">\n      <div class=\"text-start p-2 pb-0\" style=\"font-size: 5px\">\n        <h6 style=\"color: rgba(255, 255, 255, 0.27)\">chartjs</h6>\n        <h4 class=\" \">6,24k</h4>\n      </div>\n      <apexchart\n        type=\"bar\"\n        height=\"350\"\n        :options=\"chartOptions\"\n        :series=\"series\"\n      ></apexchart>\n    </div>\n  </div>\n</template>\n    \n    <script>\nexport default {\n  data: function () {\n    return {\n      series: [\n        {\n          name: \"Q1 Budget\",\n          group: \"budget\",\n          data: [\n            3773870736, 56090919, 37979116, 33355799, 6324241, 114142, 60415,\n            39864, 20750, 10874, 439\n          ],\n        },\n      ],\n      chartOptions: {\n        chart: {\n          type: \"bar\",\n          stacked: false,\n          toolbar: {\n            show: false,\n          },\n        },\n        dataLabels: {\n          enabled: true,\n          textAnchor:'middle',\n        },\n\n        stroke: {\n          show: true,\n          lineCap: \"square\",\n          width: 10,\n          colors: [\"#00796B\"],\n        },\n\n        plotOptions: {\n          bar: {\n            horizontal: false,\n            // columnWidth: \"15%\",\n\n            distributed: false,\n            dataLabels: {\n              hideOverflowingLabels: true,\n            },\n            // colors: {\n            //   // backgroundBarColors: [\"gray\"],\n\n            // },\n          },\n        },\n        xaxis: {\n          categories: [\n            \"SAR\",\n            \"JOD\",\n            \"USD\",\n            \"AED\",\n            \"IQD\",\n            \"EGP\",\n            \"EUR\",\n            \"Hyperpay_via_ConnectIn\",\n            \"HyperPay_via_ConnectIn_CLIQ\",\n            \"HyperPay1_via_ConnectIn\",\n            \"HyperPay_via_ConnectIn_CLIQ\",\n          ],\n          crosshairs: {\n            show: false,\n          },\n          labels: {\n            show: true,\n            // trim: true,\n            formatter: function (value, opts) {\n              if (value.length >= 10) {\n                return value.slice(0, 10) + \"...\";\n              }\n              return value;\n            },\n          },\n        },\n\n        yaxis: {\n          \n          labels: {\n            formatter: (val) => {\n                  if(val > 1000 && val<1000000){\n                    return val / 1000 + 'K'\n                  }\n                  if(val > 1000000 && val<1000000000){\n                    return val / 1000000 + 'M'\n                  }\n                  if(val > 1000000000 && val<1000000000000){\n                    return val / 1000000000 + 'B'\n                  }\n                  return val\n                }\n          },\n        },\n        legend: {\n          show: false,\n        },\n        fill: {\n          colors: [\"#00796B\"],\n          // opacity: 1,\n        },\n        tooltip: {\n          theme: \"dark\",\n          x: {\n            show: true,\n            formatter: function (val) {\n              return val\n            },\n          },\n          y: {\n            title: {\n              formatter: function () {\n                return \"value\";\n              },\n            },\n          },\n        },\n      },\n    };\n  },\n};\n</script>\n    \n    <style lang=\"scss\" scoped>\n@import \"../../assets/style_scss/Partials/variables\";\n@import \"../../assets/style_scss/Partials/mixin\";\n\n.chart {\n  @include card;\n  @include font;\n}\n.maindiv {\n  position: relative;\n  border-radius: 5px;\n  background: rgb(154, 155, 157);\n  color: black;\n  height: 100%;\n}\n.apexcharts-tooltip {\n  background: #f3f3f3;\n  color: orange;\n}\n</style>\n    "],"mappings":"AAkBA,eAAe;EACbA,IAAI,EAAE,SAAAA,CAAA,EAAY;IAChB,OAAO;MACLC,MAAM,EAAE,CACN;QACEC,IAAI,EAAE,WAAW;QACjBC,KAAK,EAAE,QAAQ;QACfH,IAAI,EAAE,CACJ,UAAU,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,OAAO,EAAE,MAAM,EAAE,KAAK,EAChE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,GAAE;MAE3B,CAAC,CACF;MACDI,YAAY,EAAE;QACZC,KAAK,EAAE;UACLC,IAAI,EAAE,KAAK;UACXC,OAAO,EAAE,KAAK;UACdC,OAAO,EAAE;YACPC,IAAI,EAAE;UACR;QACF,CAAC;QACDC,UAAU,EAAE;UACVC,OAAO,EAAE,IAAI;UACbC,UAAU,EAAC;QACb,CAAC;QAEDC,MAAM,EAAE;UACNJ,IAAI,EAAE,IAAI;UACVK,OAAO,EAAE,QAAQ;UACjBC,KAAK,EAAE,EAAE;UACTC,MAAM,EAAE,CAAC,SAAS;QACpB,CAAC;QAEDC,WAAW,EAAE;UACXC,GAAG,EAAE;YACHC,UAAU,EAAE,KAAK;YACjB;;YAEAC,WAAW,EAAE,KAAK;YAClBV,UAAU,EAAE;cACVW,qBAAqB,EAAE;YACzB;YACA;YACA;;YAEA;UACF;QACF,CAAC;;QACDC,KAAK,EAAE;UACLC,UAAU,EAAE,CACV,KAAK,EACL,KAAK,EACL,KAAK,EACL,KAAK,EACL,KAAK,EACL,KAAK,EACL,KAAK,EACL,wBAAwB,EACxB,6BAA6B,EAC7B,yBAAyB,EACzB,6BAA6B,CAC9B;UACDC,UAAU,EAAE;YACVf,IAAI,EAAE;UACR,CAAC;UACDgB,MAAM,EAAE;YACNhB,IAAI,EAAE,IAAI;YACV;YACAiB,SAAS,EAAE,SAAAA,CAAUC,KAAK,EAAEC,IAAI,EAAE;cAChC,IAAID,KAAK,CAACE,MAAK,IAAK,EAAE,EAAE;gBACtB,OAAOF,KAAK,CAACG,KAAK,CAAC,CAAC,EAAE,EAAE,IAAI,KAAK;cACnC;cACA,OAAOH,KAAK;YACd;UACF;QACF,CAAC;QAEDI,KAAK,EAAE;UAELN,MAAM,EAAE;YACNC,SAAS,EAAGM,GAAG,IAAK;cACd,IAAGA,GAAE,GAAI,IAAG,IAAKA,GAAG,GAAC,OAAO,EAAC;gBAC3B,OAAOA,GAAE,GAAI,IAAG,GAAI,GAAE;cACxB;cACA,IAAGA,GAAE,GAAI,OAAM,IAAKA,GAAG,GAAC,UAAU,EAAC;gBACjC,OAAOA,GAAE,GAAI,OAAM,GAAI,GAAE;cAC3B;cACA,IAAGA,GAAE,GAAI,UAAS,IAAKA,GAAG,GAAC,aAAa,EAAC;gBACvC,OAAOA,GAAE,GAAI,UAAS,GAAI,GAAE;cAC9B;cACA,OAAOA,GAAE;YACX;UACN;QACF,CAAC;QACDC,MAAM,EAAE;UACNxB,IAAI,EAAE;QACR,CAAC;QACDyB,IAAI,EAAE;UACJlB,MAAM,EAAE,CAAC,SAAS;UAClB;QACF,CAAC;;QACDmB,OAAO,EAAE;UACPC,KAAK,EAAE,MAAM;UACbC,CAAC,EAAE;YACD5B,IAAI,EAAE,IAAI;YACViB,SAAS,EAAE,SAAAA,CAAUM,GAAG,EAAE;cACxB,OAAOA,GAAE;YACX;UACF,CAAC;UACDM,CAAC,EAAE;YACDC,KAAK,EAAE;cACLb,SAAS,EAAE,SAAAA,CAAA,EAAY;gBACrB,OAAO,OAAO;cAChB;YACF;UACF;QACF;MACF;IACF,CAAC;EACH;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}