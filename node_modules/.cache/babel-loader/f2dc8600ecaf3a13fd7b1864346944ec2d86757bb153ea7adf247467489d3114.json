{"ast":null,"code":"import { Field, useField } from 'vee-validate';\nimport * as yup from \"yup\";\nimport { toRef } from 'vue';\nexport default {\n  props: [\"name\", \"type\"],\n  data() {\n    // const { value, errorMessage } = useField(this.name,yup.string().min(3).required());\n    return {\n      //  schema: yup.object({\n      //         email: yup.string().email().required(),\n      //         password: yup.string().min(3).required(),\n      //       }),\n    };\n  },\n  components: {\n    Field\n  }\n};","map":{"version":3,"names":["Field","useField","yup","toRef","props","data","components"],"sources":["/var/www/html/dashbord_vue_master/src/components/input/inputVal.vue"],"sourcesContent":["<!-- <script setup>\n// MyInputComponent.vue\nimport { useField } from 'vee-validate';\n\nconst props = defineProps({\n  name: String\n})\n// Validator function\nconst isRequired = value => (value ? true : 'This field is required');\n\nconst { value, errorMessage } = useField(props.name, isRequired);\n\n</script> -->\n<script>\nimport { Field, useField } from 'vee-validate';\nimport * as yup from \"yup\";\nimport { toRef } from 'vue';\nexport default {\n    props: [\"name\", \"type\"],\n    data() {\n        // const { value, errorMessage } = useField(this.name,yup.string().min(3).required());\n        return {\n            //  schema: yup.object({\n            //         email: yup.string().email().required(),\n            //         password: yup.string().min(3).required(),\n            //       }),\n          \n        };\n    },\n    components: { Field }\n}\n</script>\n<template>\n  <Field  class=\"form-control\" :type=\"this.type\"/>\n  <span class=\"text-danger\">{{ errorMessage }}</span>\n</template>"],"mappings":"AAcA,SAASA,KAAK,EAAEC,QAAO,QAAS,cAAc;AAC9C,OAAO,KAAKC,GAAE,MAAO,KAAK;AAC1B,SAASC,KAAI,QAAS,KAAK;AAC3B,eAAe;EACXC,KAAK,EAAE,CAAC,MAAM,EAAE,MAAM,CAAC;EACvBC,IAAIA,CAAA,EAAG;IACH;IACA,OAAO;MACH;MACA;MACA;MACA;IAAA,CAEH;EACL,CAAC;EACDC,UAAU,EAAE;IAAEN;EAAM;AACxB"},"metadata":{},"sourceType":"module","externalDependencies":[]}