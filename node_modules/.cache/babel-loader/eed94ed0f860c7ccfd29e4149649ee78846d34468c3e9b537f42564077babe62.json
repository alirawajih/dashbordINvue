{"ast":null,"code":"\"use strict\";\n\n// Copyright 2018, Google, LLC.\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//    http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function step(result) {\n      result.done ? resolve(result.value) : new P(function (resolve) {\n        resolve(result.value);\n      }).then(fulfilled, rejected);\n    }\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nconst extend = require(\"extend\");\nconst node_fetch_1 = require(\"node-fetch\");\nconst qs = require(\"querystring\");\nconst stream = require(\"stream\");\nconst url = require(\"url\");\nconst common_1 = require(\"./common\");\nconst isbrowser_1 = require(\"./isbrowser\");\nconst retry_1 = require(\"./retry\");\nconst URL = isbrowser_1.isBrowser() ? window.URL : url.URL;\nconst fetch = isbrowser_1.isBrowser() ? window.fetch : node_fetch_1.default;\n// tslint:disable-next-line variable-name no-any\nlet HttpsProxyAgent;\n// Figure out if we should be using a proxy. Only if it's required, load\n// the https-proxy-agent module as it adds startup cost.\nfunction loadProxy() {\n  const proxy = process.env.HTTPS_PROXY || process.env.https_proxy || process.env.HTTP_PROXY || process.env.http_proxy;\n  if (proxy) {\n    HttpsProxyAgent = require('https-proxy-agent');\n  }\n  return proxy;\n}\nloadProxy();\nclass Gaxios {\n  /**\n   * The Gaxios class is responsible for making HTTP requests.\n   * @param defaults The default set of options to be used for this instance.\n   */\n  constructor(defaults) {\n    this.agentCache = new Map();\n    this.defaults = defaults || {};\n  }\n  /**\n   * Perform an HTTP request with the given options.\n   * @param opts Set of HTTP options that will be used for this HTTP request.\n   */\n  request(opts = {}) {\n    return __awaiter(this, void 0, void 0, function* () {\n      opts = this.validateOpts(opts);\n      try {\n        let translatedResponse;\n        if (opts.adapter) {\n          translatedResponse = yield opts.adapter(opts);\n        } else {\n          const res = yield fetch(opts.url, opts);\n          const data = yield this.getResponseData(opts, res);\n          translatedResponse = this.translateResponse(opts, res, data);\n        }\n        if (!opts.validateStatus(translatedResponse.status)) {\n          throw new common_1.GaxiosError(`Request failed with status code ${translatedResponse.status}`, opts, translatedResponse);\n        }\n        return translatedResponse;\n      } catch (e) {\n        const err = e;\n        err.config = opts;\n        const {\n          shouldRetry,\n          config\n        } = yield retry_1.getRetryConfig(e);\n        if (shouldRetry && config) {\n          err.config.retryConfig.currentRetryAttempt = config.retryConfig.currentRetryAttempt;\n          return this.request(err.config);\n        }\n        throw err;\n      }\n    });\n  }\n  getResponseData(opts, res) {\n    return __awaiter(this, void 0, void 0, function* () {\n      switch (opts.responseType) {\n        case 'stream':\n          return res.body;\n        case 'json':\n          let data = yield res.text();\n          try {\n            data = JSON.parse(data);\n          } catch (e) {}\n          return data;\n        case 'arraybuffer':\n          return res.arrayBuffer();\n        case 'blob':\n          return res.blob();\n        default:\n          return res.text();\n      }\n    });\n  }\n  /**\n   * Validates the options, and merges them with defaults.\n   * @param opts The original options passed from the client.\n   */\n  validateOpts(options) {\n    const opts = extend(true, {}, this.defaults, options);\n    if (!opts.url) {\n      throw new Error('URL is required.');\n    }\n    // baseUrl has been deprecated, remove in 2.0\n    const baseUrl = opts.baseUrl || opts.baseURL;\n    if (baseUrl) {\n      opts.url = baseUrl + opts.url;\n    }\n    const parsedUrl = new URL(opts.url);\n    opts.url = `${parsedUrl.origin}${parsedUrl.pathname}`;\n    opts.params = extend(qs.parse(parsedUrl.search.substr(1)),\n    // removes leading ?\n    opts.params);\n    opts.paramsSerializer = opts.paramsSerializer || this.paramsSerializer;\n    if (opts.params) {\n      parsedUrl.search = opts.paramsSerializer(opts.params);\n    }\n    opts.url = parsedUrl.href;\n    if (typeof options.maxContentLength === 'number') {\n      opts.size = options.maxContentLength;\n    }\n    if (typeof options.maxRedirects === 'number') {\n      opts.follow = options.maxRedirects;\n    }\n    opts.headers = opts.headers || {};\n    if (opts.data) {\n      if (this.isReadableStream(opts.data)) {\n        opts.body = opts.data;\n      } else if (typeof opts.data === 'object') {\n        opts.body = JSON.stringify(opts.data);\n        opts.headers['Content-Type'] = 'application/json';\n      } else {\n        opts.body = opts.data;\n      }\n    }\n    opts.validateStatus = opts.validateStatus || this.validateStatus;\n    opts.responseType = opts.responseType || 'json';\n    if (!opts.headers['Accept'] && opts.responseType === 'json') {\n      opts.headers['Accept'] = 'application/json';\n    }\n    opts.method = opts.method || 'GET';\n    const proxy = loadProxy();\n    if (proxy) {\n      if (this.agentCache.has(proxy)) {\n        opts.agent = this.agentCache.get(proxy);\n      } else {\n        opts.agent = new HttpsProxyAgent(proxy);\n        this.agentCache.set(proxy, opts.agent);\n      }\n    }\n    return opts;\n  }\n  /**\n   * By default, throw for any non-2xx status code\n   * @param status status code from the HTTP response\n   */\n  validateStatus(status) {\n    return status >= 200 && status < 300;\n  }\n  /**\n   * Encode a set of key/value pars into a querystring format (?foo=bar&baz=boo)\n   * @param params key value pars to encode\n   */\n  paramsSerializer(params) {\n    return qs.stringify(params);\n  }\n  isReadableStream(obj) {\n    return obj instanceof stream.Readable && typeof obj._read === 'function';\n  }\n  translateResponse(opts, res, data) {\n    // headers need to be converted from a map to an obj\n    const headers = {};\n    res.headers.forEach((value, key) => {\n      headers[key] = value;\n    });\n    return {\n      config: opts,\n      data: data,\n      headers,\n      status: res.status,\n      statusText: res.statusText\n    };\n  }\n}\nexports.Gaxios = Gaxios;","map":{"version":3,"names":["extend","require","node_fetch_1","qs","stream","url","common_1","isbrowser_1","retry_1","URL","isBrowser","window","fetch","default","HttpsProxyAgent","loadProxy","proxy","process","env","HTTPS_PROXY","https_proxy","HTTP_PROXY","http_proxy","Gaxios","constructor","defaults","agentCache","Map","request","opts","validateOpts","translatedResponse","adapter","res","data","getResponseData","translateResponse","validateStatus","status","GaxiosError","e","err","config","shouldRetry","getRetryConfig","retryConfig","currentRetryAttempt","responseType","body","text","JSON","parse","arrayBuffer","blob","options","Error","baseUrl","baseURL","parsedUrl","origin","pathname","params","search","substr","paramsSerializer","href","maxContentLength","size","maxRedirects","follow","headers","isReadableStream","stringify","method","has","agent","get","set","obj","Readable","_read","forEach","value","key","statusText","exports"],"sources":["../../src/gaxios.ts"],"sourcesContent":[null],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}