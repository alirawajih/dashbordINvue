{"ast":null,"code":"export default {\n  props: [\"data\"],\n  data() {\n    return {\n      dataAna: [],\n      chartData: {}\n    };\n  },\n  created() {\n    this.chartData = this.data;\n  },\n  computed: {\n    chartOptions() {\n      const normalizedValues = this.chartData.values.map(value => Math.log(value + 1));\n      const maxLogValue = Math.max(...normalizedValues);\n      return {\n        chart: {\n          type: \"bar\",\n          show: false,\n          height: 5,\n          type: \"line\",\n          zoom: {\n            enabled: false\n          },\n          toolbar: {\n            show: false\n          }\n        },\n        dataLabels: {\n          enabled: false\n        },\n        plotOptions: {\n          bar: {\n            horizontal: false,\n            columnWidth: '20%',\n            distributed: true,\n            dataLabels: {\n              hideOverflowingLabels: false\n            },\n            colors: {\n              backgroundBarColors: ['#808080']\n            }\n          }\n        },\n        xaxis: {\n          categories: this.chartData.keys\n        },\n        yaxis: {\n          min: 1,\n          // logarithmic: true,\n          // tickAmount: 4,\n          // forceNiceScale: true,\n          labels: {\n            formatter: value => {\n              return value;\n            }\n          }\n        }\n      };\n    },\n    chartSeries() {\n      return [{\n        name: \"Data\",\n        data: this.chartData.values\n      }];\n    }\n  }\n};","map":{"version":3,"names":["props","data","dataAna","chartData","created","computed","chartOptions","normalizedValues","values","map","value","Math","log","maxLogValue","max","chart","type","show","height","zoom","enabled","toolbar","dataLabels","plotOptions","bar","horizontal","columnWidth","distributed","hideOverflowingLabels","colors","backgroundBarColors","xaxis","categories","keys","yaxis","min","labels","formatter","chartSeries","name"],"sources":["/var/www/html/project/Dash_Vuexy-master/src/views/ecommerce/apexchart.vue"],"sourcesContent":["<template>\n  <div class=\"maindiv\">\n    <div class=\"chart\">\n      <div class=\"text-start p-2 pb-0\" style=\"font-size: 5px\">\n        <h6 style=\"color: rgba(255, 255, 255, 0.27)\">Orders</h6>\n        <h4 class=\" \">6,24k</h4>\n      </div>\n      <div id=\"chart\">\n        <apexchart\n          :options=\"chartOptions\"\n          :series=\"chartSeries\"\n          type=\"bar\"\n          height=\"350\"\n        />\n      </div>\n    </div>\n  </div>\n</template>\n  \n<script>\nexport default {\n  props: [\"data\"],\n  data() {\n    return {\n      dataAna: [],\n      chartData: {},\n    };\n  },\n  created() {\n    this.chartData = this.data;\n  },\n  computed: {\n    chartOptions() {\n      const normalizedValues = this.chartData.values.map((value) =>\n        Math.log(value + 1)\n      );\n      const maxLogValue = Math.max(...normalizedValues);\n\n      return {\n        chart: {\n          type: \"bar\",\n\n          show: false,\n          height: 5,\n          type: \"line\",\n\n          zoom: {\n            enabled: false,\n          },\n          toolbar: {\n            show: false,\n          },\n        },\n        dataLabels: {\n          enabled: false,\n        },\n        plotOptions: {\n          bar: {\n           horizontal: false,\n        columnWidth: '20%',\n        distributed: true,\n          dataLabels: {\n            hideOverflowingLabels: false\n          },        colors: {\n          backgroundBarColors: ['#808080']\n        },\n           \n          },\n          \n        },\n        xaxis: {\n          categories: this.chartData.keys,\n          \n        },\n        yaxis: {\n          \n          min: 1,\n          // logarithmic: true,\n          // tickAmount: 4,\n          // forceNiceScale: true,\n          labels: {\n            formatter: (value) => {\n              return value;\n            },\n          },\n        },\n      };\n    },\n    chartSeries() {\n      return [\n        {\n          name: \"Data\",\n          data: this.chartData.values,\n        },\n      ];\n    },\n  },\n};\n</script>\n<style lang=\"scss\" scoped>\n.maindiv {\n  position: relative;\n  border-radius: 5px;\n  background: rgb(154, 155, 157);\n  color: black;\n  height: 100%;\n}\n</style>"],"mappings":"AAoBA,eAAe;EACbA,KAAK,EAAE,CAAC,MAAM,CAAC;EACfC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,OAAO,EAAE,EAAE;MACXC,SAAS,EAAE,CAAC;IACd,CAAC;EACH,CAAC;EACDC,OAAOA,CAAA,EAAG;IACR,IAAI,CAACD,SAAQ,GAAI,IAAI,CAACF,IAAI;EAC5B,CAAC;EACDI,QAAQ,EAAE;IACRC,YAAYA,CAAA,EAAG;MACb,MAAMC,gBAAe,GAAI,IAAI,CAACJ,SAAS,CAACK,MAAM,CAACC,GAAG,CAAEC,KAAK,IACvDC,IAAI,CAACC,GAAG,CAACF,KAAI,GAAI,CAAC,EACnB;MACD,MAAMG,WAAU,GAAIF,IAAI,CAACG,GAAG,CAAC,GAAGP,gBAAgB,CAAC;MAEjD,OAAO;QACLQ,KAAK,EAAE;UACLC,IAAI,EAAE,KAAK;UAEXC,IAAI,EAAE,KAAK;UACXC,MAAM,EAAE,CAAC;UACTF,IAAI,EAAE,MAAM;UAEZG,IAAI,EAAE;YACJC,OAAO,EAAE;UACX,CAAC;UACDC,OAAO,EAAE;YACPJ,IAAI,EAAE;UACR;QACF,CAAC;QACDK,UAAU,EAAE;UACVF,OAAO,EAAE;QACX,CAAC;QACDG,WAAW,EAAE;UACXC,GAAG,EAAE;YACJC,UAAU,EAAE,KAAK;YACpBC,WAAW,EAAE,KAAK;YAClBC,WAAW,EAAE,IAAI;YACfL,UAAU,EAAE;cACVM,qBAAqB,EAAE;YACzB,CAAC;YAASC,MAAM,EAAE;cAClBC,mBAAmB,EAAE,CAAC,SAAS;YACjC;UAEE;QAEF,CAAC;QACDC,KAAK,EAAE;UACLC,UAAU,EAAE,IAAI,CAAC7B,SAAS,CAAC8B;QAE7B,CAAC;QACDC,KAAK,EAAE;UAELC,GAAG,EAAE,CAAC;UACN;UACA;UACA;UACAC,MAAM,EAAE;YACNC,SAAS,EAAG3B,KAAK,IAAK;cACpB,OAAOA,KAAK;YACd;UACF;QACF;MACF,CAAC;IACH,CAAC;IACD4B,WAAWA,CAAA,EAAG;MACZ,OAAO,CACL;QACEC,IAAI,EAAE,MAAM;QACZtC,IAAI,EAAE,IAAI,CAACE,SAAS,CAACK;MACvB,CAAC,CACF;IACH;EACF;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}