{"ast":null,"code":"import store from \"../store\";\nexport default {\n  data() {\n    return {\n      user: [],\n      image: null\n    };\n  },\n  components: {},\n  created() {\n    this.user = JSON.parse(localStorage.getItem(\"user\"));\n  },\n  methods: {\n    onImage(event) {\n      let file = event.target.files[0];\n      const reader = new FileReader();\n      reader.onload = () => {\n        this.image = reader.result;\n        store.state.userIN.image = reader.result;\n      };\n      reader.readAsDataURL(file);\n    }\n  }\n};","map":{"version":3,"names":["store","data","user","image","components","created","JSON","parse","localStorage","getItem","methods","onImage","event","file","target","files","reader","FileReader","onload","result","state","userIN","readAsDataURL"],"sources":["/var/www/html/project/Dash_Vuexy-master/src/components/user.vue"],"sourcesContent":["<template>\n  <div class=\"contant pt-5\">\n    <div class=\"row\">\n      <div class=\"col-lg-4\">\n        <div class=\"imguser\">\n          <img\n            class=\"img-fluid\"\n            :src=\"image || $store.state.userIN.image\"\n          />\n        </div>\n      </div>\n\n      <div class=\"col-lg-6\">\n        <table class=\"table\">\n          <tbody>\n            <tr>\n              <td>\n                <strong>\n                  <span\n                    class=\"glyphicon glyphicon-asterisk text-primary\"\n                  ></span>\n                  First name\n                </strong>\n              </td>\n              <td>\n                {{ user.Firstname }}\n                <a class=\"float-left\" href=\"#\">\n                  <i class=\"bx bx-edit editicons\" style=\"float: right\"></i\n                ></a>\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <strong>\n                  <span class=\"glyphicon glyphicon-user text-primary\"></span>\n                  Last name\n                </strong>\n              </td>\n              <td>{{ user.lastname }}</td>\n            </tr>\n            <tr>\n              <td>\n                <strong>\n                  <span class=\"glyphicon glyphicon-cloud text-primary\"></span>\n                  Email\n                </strong>\n              </td>\n              <td>{{ user.email }}</td>\n            </tr>\n\n            <tr>\n              <td>\n                <strong>\n                  <span\n                    class=\"glyphicon glyphicon-bookmark text-primary\"\n                  ></span>\n                  Phone number\n                </strong>\n              </td>\n              <td>+9620......</td>\n            </tr>\n\n            <tr>\n              <td>\n                <strong>\n                  <span\n                    class=\"glyphicon glyphicon-eye-open text-primary\"\n                  ></span>\n                  Position\n                </strong>\n              </td>\n              <td>{{ user.position }}</td>\n            </tr>\n            <tr>\n              <td>\n                <strong>\n                  <span\n                    class=\"glyphicon glyphicon-eye-open text-primary\"\n                  ></span>\n                  ability\n                </strong>\n              </td>\n              <td>{{ user.ability.length + 1 }}</td>\n            </tr>\n            <tr>\n              <input @change=\"onImage\" type=\"file\" />\n            </tr>\n          </tbody>\n        </table>\n      </div>\n    </div>\n  </div>\n</template>\n  <script>\nimport store from \"../store\";\nexport default {\n  data() {\n    return {\n      user: [],\n      image: null,\n    };\n  },\n  components: {},\n  created() {\n    this.user = JSON.parse(localStorage.getItem(\"user\"));\n  },\n  methods: {\n    onImage(event) {\n      let file = event.target.files[0];\n      const reader = new FileReader();\n      reader.onload = () => {\n        this.image = reader.result;\n        store.state.userIN.image = reader.result;\n      };\n\n      reader.readAsDataURL(file);\n    },\n  },\n};\n</script>\n  <style scoped>\n.contant {\n  background: white;\n\n  border-radius: 5px;\n  margin: 12px;\n}\n</style>\n  "],"mappings":"AA8FA,OAAOA,KAAI,MAAO,UAAU;AAC5B,eAAe;EACbC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,IAAI,EAAE,EAAE;MACRC,KAAK,EAAE;IACT,CAAC;EACH,CAAC;EACDC,UAAU,EAAE,CAAC,CAAC;EACdC,OAAOA,CAAA,EAAG;IACR,IAAI,CAACH,IAAG,GAAII,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC,CAAC;EACtD,CAAC;EACDC,OAAO,EAAE;IACPC,OAAOA,CAACC,KAAK,EAAE;MACb,IAAIC,IAAG,GAAID,KAAK,CAACE,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC;MAChC,MAAMC,MAAK,GAAI,IAAIC,UAAU,EAAE;MAC/BD,MAAM,CAACE,MAAK,GAAI,MAAM;QACpB,IAAI,CAACf,KAAI,GAAIa,MAAM,CAACG,MAAM;QAC1BnB,KAAK,CAACoB,KAAK,CAACC,MAAM,CAAClB,KAAI,GAAIa,MAAM,CAACG,MAAM;MAC1C,CAAC;MAEDH,MAAM,CAACM,aAAa,CAACT,IAAI,CAAC;IAC5B;EACF;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}