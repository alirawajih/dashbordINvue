{"ast":null,"code":"\"use strict\";\n\n/**\n * Copyright 2015 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function step(result) {\n      result.done ? resolve(result.value) : new P(function (resolve) {\n        resolve(result.value);\n      }).then(fulfilled, rejected);\n    }\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nconst oauth2client_1 = require(\"./oauth2client\");\nclass UserRefreshClient extends oauth2client_1.OAuth2Client {\n  constructor(optionsOrClientId, clientSecret, refreshToken, eagerRefreshThresholdMillis) {\n    const opts = optionsOrClientId && typeof optionsOrClientId === 'object' ? optionsOrClientId : {\n      clientId: optionsOrClientId,\n      clientSecret,\n      refreshToken,\n      eagerRefreshThresholdMillis\n    };\n    super({\n      clientId: opts.clientId,\n      clientSecret: opts.clientSecret,\n      eagerRefreshThresholdMillis: opts.eagerRefreshThresholdMillis\n    });\n    this._refreshToken = opts.refreshToken;\n  }\n  /**\n   * Refreshes the access token.\n   * @param refreshToken An ignored refreshToken..\n   * @param callback Optional callback.\n   */\n  refreshTokenNoCache(refreshToken) {\n    const _super = Object.create(null, {\n      refreshTokenNoCache: {\n        get: () => super.refreshTokenNoCache\n      }\n    });\n    return __awaiter(this, void 0, void 0, function* () {\n      return _super.refreshTokenNoCache.call(this, this._refreshToken);\n    });\n  }\n  /**\n   * Create a UserRefreshClient credentials instance using the given input\n   * options.\n   * @param json The input object.\n   */\n  fromJSON(json) {\n    if (!json) {\n      throw new Error('Must pass in a JSON object containing the user refresh token');\n    }\n    if (json.type !== 'authorized_user') {\n      throw new Error('The incoming JSON object does not have the \"authorized_user\" type');\n    }\n    if (!json.client_id) {\n      throw new Error('The incoming JSON object does not contain a client_id field');\n    }\n    if (!json.client_secret) {\n      throw new Error('The incoming JSON object does not contain a client_secret field');\n    }\n    if (!json.refresh_token) {\n      throw new Error('The incoming JSON object does not contain a refresh_token field');\n    }\n    this._clientId = json.client_id;\n    this._clientSecret = json.client_secret;\n    this._refreshToken = json.refresh_token;\n    this.credentials.refresh_token = json.refresh_token;\n  }\n  fromStream(inputStream, callback) {\n    if (callback) {\n      this.fromStreamAsync(inputStream).then(r => callback(), callback);\n    } else {\n      return this.fromStreamAsync(inputStream);\n    }\n  }\n  fromStreamAsync(inputStream) {\n    return __awaiter(this, void 0, void 0, function* () {\n      return new Promise((resolve, reject) => {\n        if (!inputStream) {\n          return reject(new Error('Must pass in a stream containing the user refresh token.'));\n        }\n        let s = '';\n        inputStream.setEncoding('utf8').on('error', reject).on('data', chunk => s += chunk).on('end', () => {\n          try {\n            const data = JSON.parse(s);\n            this.fromJSON(data);\n            return resolve();\n          } catch (err) {\n            return reject(err);\n          }\n        });\n      });\n    });\n  }\n}\nexports.UserRefreshClient = UserRefreshClient;","map":{"version":3,"names":["__awaiter","thisArg","_arguments","P","generator","Promise","resolve","reject","fulfilled","value","step","next","e","rejected","result","done","then","apply","Object","defineProperty","exports","oauth2client_1","require","UserRefreshClient","OAuth2Client","constructor","optionsOrClientId","clientSecret","refreshToken","eagerRefreshThresholdMillis","opts","clientId","_refreshToken","refreshTokenNoCache","_super","create","get","call","fromJSON","json","Error","type","client_id","client_secret","refresh_token","_clientId","_clientSecret","credentials","fromStream","inputStream","callback","fromStreamAsync","r","s","setEncoding","on","chunk","data","JSON","parse","err"],"sources":["/var/www/html/project/Dash_Vuexy-master/node_modules/google-auth-library/build/src/auth/refreshclient.js"],"sourcesContent":["\"use strict\";\n/**\n * Copyright 2015 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst oauth2client_1 = require(\"./oauth2client\");\nclass UserRefreshClient extends oauth2client_1.OAuth2Client {\n    constructor(optionsOrClientId, clientSecret, refreshToken, eagerRefreshThresholdMillis) {\n        const opts = (optionsOrClientId && typeof optionsOrClientId === 'object') ?\n            optionsOrClientId :\n            {\n                clientId: optionsOrClientId,\n                clientSecret,\n                refreshToken,\n                eagerRefreshThresholdMillis\n            };\n        super({\n            clientId: opts.clientId,\n            clientSecret: opts.clientSecret,\n            eagerRefreshThresholdMillis: opts.eagerRefreshThresholdMillis\n        });\n        this._refreshToken = opts.refreshToken;\n    }\n    /**\n     * Refreshes the access token.\n     * @param refreshToken An ignored refreshToken..\n     * @param callback Optional callback.\n     */\n    refreshTokenNoCache(refreshToken) {\n        const _super = Object.create(null, {\n            refreshTokenNoCache: { get: () => super.refreshTokenNoCache }\n        });\n        return __awaiter(this, void 0, void 0, function* () {\n            return _super.refreshTokenNoCache.call(this, this._refreshToken);\n        });\n    }\n    /**\n     * Create a UserRefreshClient credentials instance using the given input\n     * options.\n     * @param json The input object.\n     */\n    fromJSON(json) {\n        if (!json) {\n            throw new Error('Must pass in a JSON object containing the user refresh token');\n        }\n        if (json.type !== 'authorized_user') {\n            throw new Error('The incoming JSON object does not have the \"authorized_user\" type');\n        }\n        if (!json.client_id) {\n            throw new Error('The incoming JSON object does not contain a client_id field');\n        }\n        if (!json.client_secret) {\n            throw new Error('The incoming JSON object does not contain a client_secret field');\n        }\n        if (!json.refresh_token) {\n            throw new Error('The incoming JSON object does not contain a refresh_token field');\n        }\n        this._clientId = json.client_id;\n        this._clientSecret = json.client_secret;\n        this._refreshToken = json.refresh_token;\n        this.credentials.refresh_token = json.refresh_token;\n    }\n    fromStream(inputStream, callback) {\n        if (callback) {\n            this.fromStreamAsync(inputStream).then(r => callback(), callback);\n        }\n        else {\n            return this.fromStreamAsync(inputStream);\n        }\n    }\n    fromStreamAsync(inputStream) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return new Promise((resolve, reject) => {\n                if (!inputStream) {\n                    return reject(new Error('Must pass in a stream containing the user refresh token.'));\n                }\n                let s = '';\n                inputStream.setEncoding('utf8')\n                    .on('error', reject)\n                    .on('data', (chunk) => s += chunk)\n                    .on('end', () => {\n                    try {\n                        const data = JSON.parse(s);\n                        this.fromJSON(data);\n                        return resolve();\n                    }\n                    catch (err) {\n                        return reject(err);\n                    }\n                });\n            });\n        });\n    }\n}\nexports.UserRefreshClient = UserRefreshClient;\n//# sourceMappingURL=refreshclient.js.map"],"mappings":"AAAA,YAAY;;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAIA,SAAS,GAAI,IAAI,IAAI,IAAI,CAACA,SAAS,IAAK,UAAUC,OAAO,EAAEC,UAAU,EAAEC,CAAC,EAAEC,SAAS,EAAE;EACrF,OAAO,KAAKD,CAAC,KAAKA,CAAC,GAAGE,OAAO,CAAC,EAAE,UAAUC,OAAO,EAAEC,MAAM,EAAE;IACvD,SAASC,SAASA,CAACC,KAAK,EAAE;MAAE,IAAI;QAAEC,IAAI,CAACN,SAAS,CAACO,IAAI,CAACF,KAAK,CAAC,CAAC;MAAE,CAAC,CAAC,OAAOG,CAAC,EAAE;QAAEL,MAAM,CAACK,CAAC,CAAC;MAAE;IAAE;IAC1F,SAASC,QAAQA,CAACJ,KAAK,EAAE;MAAE,IAAI;QAAEC,IAAI,CAACN,SAAS,CAAC,OAAO,CAAC,CAACK,KAAK,CAAC,CAAC;MAAE,CAAC,CAAC,OAAOG,CAAC,EAAE;QAAEL,MAAM,CAACK,CAAC,CAAC;MAAE;IAAE;IAC7F,SAASF,IAAIA,CAACI,MAAM,EAAE;MAAEA,MAAM,CAACC,IAAI,GAAGT,OAAO,CAACQ,MAAM,CAACL,KAAK,CAAC,GAAG,IAAIN,CAAC,CAAC,UAAUG,OAAO,EAAE;QAAEA,OAAO,CAACQ,MAAM,CAACL,KAAK,CAAC;MAAE,CAAC,CAAC,CAACO,IAAI,CAACR,SAAS,EAAEK,QAAQ,CAAC;IAAE;IAC9IH,IAAI,CAAC,CAACN,SAAS,GAAGA,SAAS,CAACa,KAAK,CAAChB,OAAO,EAAEC,UAAU,IAAI,EAAE,CAAC,EAAES,IAAI,EAAE,CAAC;EACzE,CAAC,CAAC;AACN,CAAC;AACDO,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAAEX,KAAK,EAAE;AAAK,CAAC,CAAC;AAC7D,MAAMY,cAAc,GAAGC,OAAO,CAAC,gBAAgB,CAAC;AAChD,MAAMC,iBAAiB,SAASF,cAAc,CAACG,YAAY,CAAC;EACxDC,WAAWA,CAACC,iBAAiB,EAAEC,YAAY,EAAEC,YAAY,EAAEC,2BAA2B,EAAE;IACpF,MAAMC,IAAI,GAAIJ,iBAAiB,IAAI,OAAOA,iBAAiB,KAAK,QAAQ,GACpEA,iBAAiB,GACjB;MACIK,QAAQ,EAAEL,iBAAiB;MAC3BC,YAAY;MACZC,YAAY;MACZC;IACJ,CAAC;IACL,KAAK,CAAC;MACFE,QAAQ,EAAED,IAAI,CAACC,QAAQ;MACvBJ,YAAY,EAAEG,IAAI,CAACH,YAAY;MAC/BE,2BAA2B,EAAEC,IAAI,CAACD;IACtC,CAAC,CAAC;IACF,IAAI,CAACG,aAAa,GAAGF,IAAI,CAACF,YAAY;EAC1C;EACA;AACJ;AACA;AACA;AACA;EACIK,mBAAmBA,CAACL,YAAY,EAAE;IAC9B,MAAMM,MAAM,GAAGhB,MAAM,CAACiB,MAAM,CAAC,IAAI,EAAE;MAC/BF,mBAAmB,EAAE;QAAEG,GAAG,EAAEA,CAAA,KAAM,KAAK,CAACH;MAAoB;IAChE,CAAC,CAAC;IACF,OAAOjC,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;MAChD,OAAOkC,MAAM,CAACD,mBAAmB,CAACI,IAAI,CAAC,IAAI,EAAE,IAAI,CAACL,aAAa,CAAC;IACpE,CAAC,CAAC;EACN;EACA;AACJ;AACA;AACA;AACA;EACIM,QAAQA,CAACC,IAAI,EAAE;IACX,IAAI,CAACA,IAAI,EAAE;MACP,MAAM,IAAIC,KAAK,CAAC,8DAA8D,CAAC;IACnF;IACA,IAAID,IAAI,CAACE,IAAI,KAAK,iBAAiB,EAAE;MACjC,MAAM,IAAID,KAAK,CAAC,mEAAmE,CAAC;IACxF;IACA,IAAI,CAACD,IAAI,CAACG,SAAS,EAAE;MACjB,MAAM,IAAIF,KAAK,CAAC,6DAA6D,CAAC;IAClF;IACA,IAAI,CAACD,IAAI,CAACI,aAAa,EAAE;MACrB,MAAM,IAAIH,KAAK,CAAC,iEAAiE,CAAC;IACtF;IACA,IAAI,CAACD,IAAI,CAACK,aAAa,EAAE;MACrB,MAAM,IAAIJ,KAAK,CAAC,iEAAiE,CAAC;IACtF;IACA,IAAI,CAACK,SAAS,GAAGN,IAAI,CAACG,SAAS;IAC/B,IAAI,CAACI,aAAa,GAAGP,IAAI,CAACI,aAAa;IACvC,IAAI,CAACX,aAAa,GAAGO,IAAI,CAACK,aAAa;IACvC,IAAI,CAACG,WAAW,CAACH,aAAa,GAAGL,IAAI,CAACK,aAAa;EACvD;EACAI,UAAUA,CAACC,WAAW,EAAEC,QAAQ,EAAE;IAC9B,IAAIA,QAAQ,EAAE;MACV,IAAI,CAACC,eAAe,CAACF,WAAW,CAAC,CAACjC,IAAI,CAACoC,CAAC,IAAIF,QAAQ,EAAE,EAAEA,QAAQ,CAAC;IACrE,CAAC,MACI;MACD,OAAO,IAAI,CAACC,eAAe,CAACF,WAAW,CAAC;IAC5C;EACJ;EACAE,eAAeA,CAACF,WAAW,EAAE;IACzB,OAAOjD,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;MAChD,OAAO,IAAIK,OAAO,CAAC,CAACC,OAAO,EAAEC,MAAM,KAAK;QACpC,IAAI,CAAC0C,WAAW,EAAE;UACd,OAAO1C,MAAM,CAAC,IAAIiC,KAAK,CAAC,0DAA0D,CAAC,CAAC;QACxF;QACA,IAAIa,CAAC,GAAG,EAAE;QACVJ,WAAW,CAACK,WAAW,CAAC,MAAM,CAAC,CAC1BC,EAAE,CAAC,OAAO,EAAEhD,MAAM,CAAC,CACnBgD,EAAE,CAAC,MAAM,EAAGC,KAAK,IAAKH,CAAC,IAAIG,KAAK,CAAC,CACjCD,EAAE,CAAC,KAAK,EAAE,MAAM;UACjB,IAAI;YACA,MAAME,IAAI,GAAGC,IAAI,CAACC,KAAK,CAACN,CAAC,CAAC;YAC1B,IAAI,CAACf,QAAQ,CAACmB,IAAI,CAAC;YACnB,OAAOnD,OAAO,EAAE;UACpB,CAAC,CACD,OAAOsD,GAAG,EAAE;YACR,OAAOrD,MAAM,CAACqD,GAAG,CAAC;UACtB;QACJ,CAAC,CAAC;MACN,CAAC,CAAC;IACN,CAAC,CAAC;EACN;AACJ;AACAxC,OAAO,CAACG,iBAAiB,GAAGA,iBAAiB"},"metadata":{},"sourceType":"script","externalDependencies":[]}