{"ast":null,"code":"import { ability } from \"@/ability/defineApilty\";\nimport router from \"@/router\";\nimport { login } from \"@/jsc/loginuser\";\n// import {timeout} from \"@/jsc/timeout\";\nimport * as yup from \"yup\";\nimport { Form, Field, ErrorMessage, useField, useForm } from \"vee-validate\";\nimport inputVal from \"@/components/input/inputVal.vue\";\nimport { ValidationProvider } from 'vee-validate';\nexport default {\n  name: \"login\",\n  components: {\n    Field,\n    Form,\n    ErrorMessage,\n    inputVal,\n    ValidationProvider\n  },\n  data() {\n    const {\n      email,\n      emailerror\n    } = useField(this.name, yup.string().email().required());\n    const {\n      value,\n      errorMessage\n    } = useField(this.name, yup.string().email().required());\n    const {\n      handleSubmit\n    } = useForm();\n    const onSubmit = handleSubmit(values => {\n      // Submit to API\n      console.log(values); // { email: 'email@gmail.com' }\n    });\n\n    return {\n      schema: {\n        email: yup.string().email().required(),\n        password: yup.string().min(3).required()\n      },\n      email,\n      emailerror,\n      message: \"\",\n      handleSubmit,\n      onSubmit\n    };\n  },\n  created() {},\n  methods: {\n    async submit() {\n      // console.log(handleSubmit)\n      // login(this.email, this.password)\n      //   .then((user) => {\n      //     localStorage.setItem(\"user\", JSON.stringify(user));\n      //     // updateability(user.position)\n      //     ability.update(user.ability);\n      //     router.replace({ path: \"/\" });\n      //     // timeout()\n      //   })\n      //   .catch((e) => (this.message = \"email or password is incorrect\"));\n      ///////////////////\n      // this.$store\n      //   .dispatch(\"login\", this.user)\n      //   .then((user) => {\n      //     localStorage.setItem(\"user\", JSON.stringify(user));\n      //     // updateability(user.position)\n      //     ability.update(user.ability);\n      //     router.replace({ path: \"/\" });\n      //     // timeout()\n      //   })\n      //   .catch((e) => (this.message = \"email or password is incorrect\"));\n      /////////////////////\n      // this.$store.dispatch(\"login\", this.user)\n      // if(this.$store.state.auth){\n      //   localStorage.setItem('user' ,JSON.stringify(this.$store.state.auth))\n      //   router.replace({name:\"ecommerce\"})\n      // }else{\n      //   this.message = \"email or password is incorrect\"\n      // }\n    },\n    login() {\n      console.log(\"value\");\n    },\n    validateEmail(value) {\n      if (!value) {\n        return \"This field is required\";\n      }\n      const regex = /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i;\n      if (!regex.test(value)) {\n        return \"This field must be a valid email\";\n      }\n      return true;\n    }\n  }\n};","map":{"version":3,"names":["ability","router","login","yup","Form","Field","ErrorMessage","useField","useForm","inputVal","ValidationProvider","name","components","data","email","emailerror","string","required","value","errorMessage","handleSubmit","onSubmit","values","console","log","schema","password","min","message","created","methods","submit","validateEmail","regex","test"],"sources":["/var/www/html/dashbord_vue_master/src/views/login/login.vue"],"sourcesContent":["<template>\n  <template class=\"template\">\n    <main class=\"form-signin w-100 m-auto\">\n      <form @submit.prevent=\"onSubmit\"  >\n        <div class=\"alert alert-danger\" role=\"alert\" v-if=\"message\">\n          {{ message }}\n        </div>\n\n        <h1 class=\"h3 mb-3 fw-normal text-dark\">Please sign in</h1>\n\n        <div class=\"form-floating\">\n          <!-- <ErrorMessage name=\"email\" class=\"text-danger\" /> -->\n\n          <!-- <Field\n            name=\"email\"\n            type=\"email\"\n            class=\"form-control\"\n            mode=\"eager\"\n            id=\"floatingInput\"\n            v-model=\"email\"\n          /> -->\n          <input v-model=\"email\"  class=\"form-control\" type=\"email\"/>\n  <span class=\"text-danger\">{{ errorMessage }}</span>\n          <!-- <span class=\"p-error text-danger\"> {{ emailerr }}</span> -->\n          <!-- <label for=\"floatingInput\">Email address</label> -->\n        </div>\n        <div class=\"form-floating\">\n          <!-- <ErrorMessage name=\"password\" class=\"text-danger\" /> -->\n          <input v-model=\"value\"  class=\"form-control\" type=\"password\"/>\n  <span class=\"text-danger\">{{ errorMessage }}</span>\n          <!-- <Field\n            name=\"password\"\n            type=\"password\"\n            class=\"form-control\"\n            id=\"floatingPassword\"\n            mode=\"eager\"\n            v-model=\"password\"\n          /> -->\n          <!-- <span class=\"p-error text-danger\">{{ passerr }}</span> -->\n        </div>\n\n        <div class=\"checkbox mb-3 text-dark\">\n          <label>\n            <input type=\"checkbox\" name=\"checkbox\" value=\"remember-me\" />\n            Remember me\n          </label>\n        </div>\n        <button class=\"w-100 btn btn-lg btn-primary\" type=\"submit\">\n          Sign in\n        </button>\n      </form>\n    </main>\n    <div> \n    \n    </div>\n  </template>\n</template>\n<script>\nimport { ability } from \"@/ability/defineApilty\";\nimport router from \"@/router\";\nimport { login } from \"@/jsc/loginuser\";\n// import {timeout} from \"@/jsc/timeout\";\nimport * as yup from \"yup\";\nimport { Form, Field, ErrorMessage, useField, useForm } from \"vee-validate\";\nimport inputVal from \"@/components/input/inputVal.vue\";\nimport { ValidationProvider } from 'vee-validate';\nexport default {\n  name: \"login\",\n\n  components: {\n    Field,\n    Form,\n    ErrorMessage,\n    inputVal,\n    ValidationProvider\n  },\n  data() {\n    const { email, emailerror} = useField(this.name, yup.string().email().required() );\n    const { value, errorMessage } = useField(this.name, yup.string().email().required() );\n\n    const { handleSubmit } = useForm();\n\nconst onSubmit = handleSubmit(values => {\n  // Submit to API\n  console.log(values); // { email: 'email@gmail.com' }\n});\n    return {\n      schema:{\n        email: yup.string().email().required(),\n        password: yup.string().min(3).required(),\n      },\n      email,\n      emailerror,\n      message: \"\",\n      handleSubmit,\n      onSubmit\n    };\n  },\n  created() {},\n  methods: {\n    async submit() {\n      // console.log(handleSubmit)\n      // login(this.email, this.password)\n      //   .then((user) => {\n      //     localStorage.setItem(\"user\", JSON.stringify(user));\n      //     // updateability(user.position)\n      //     ability.update(user.ability);\n      //     router.replace({ path: \"/\" });\n      //     // timeout()\n      //   })\n      //   .catch((e) => (this.message = \"email or password is incorrect\"));\n      ///////////////////\n      // this.$store\n      //   .dispatch(\"login\", this.user)\n      //   .then((user) => {\n      //     localStorage.setItem(\"user\", JSON.stringify(user));\n      //     // updateability(user.position)\n      //     ability.update(user.ability);\n      //     router.replace({ path: \"/\" });\n      //     // timeout()\n      //   })\n      //   .catch((e) => (this.message = \"email or password is incorrect\"));\n      /////////////////////\n      // this.$store.dispatch(\"login\", this.user)\n      // if(this.$store.state.auth){\n      //   localStorage.setItem('user' ,JSON.stringify(this.$store.state.auth))\n      //   router.replace({name:\"ecommerce\"})\n      // }else{\n      //   this.message = \"email or password is incorrect\"\n      // }\n    },\n    login() {\n      console.log(\"value\");\n    },\n    validateEmail(value) {\n      if (!value) {\n        return \"This field is required\";\n      }\n      const regex = /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i;\n      if (!regex.test(value)) {\n        return \"This field must be a valid email\";\n      }\n\n      return true;\n    },\n  },\n};\n</script>\n<style scoped>\n.template {\n  height: 997px;\n}\n\n.template {\n  display: flex;\n  align-items: center;\n  padding-top: 0px;\n  background-color: #f5f5f5;\n}\n\n.form-signin {\n  max-width: 330px;\n  padding: 15px;\n}\n\n.form-signin .form-floating:focus-within {\n  z-index: 2;\n}\n\n.form-signin input[type=\"email\"] {\n  margin-bottom: -1px;\n  border-bottom-right-radius: 0;\n  border-bottom-left-radius: 0;\n}\n\n.form-signin input[type=\"password\"] {\n  margin-bottom: 10px;\n  border-top-left-radius: 0;\n  border-top-right-radius: 0;\n}\n</style>"],"mappings":"AA0DA,SAASA,OAAM,QAAS,wBAAwB;AAChD,OAAOC,MAAK,MAAO,UAAU;AAC7B,SAASC,KAAI,QAAS,iBAAiB;AACvC;AACA,OAAO,KAAKC,GAAE,MAAO,KAAK;AAC1B,SAASC,IAAI,EAAEC,KAAK,EAAEC,YAAY,EAAEC,QAAQ,EAAEC,OAAM,QAAS,cAAc;AAC3E,OAAOC,QAAO,MAAO,iCAAiC;AACtD,SAASC,kBAAiB,QAAS,cAAc;AACjD,eAAe;EACbC,IAAI,EAAE,OAAO;EAEbC,UAAU,EAAE;IACVP,KAAK;IACLD,IAAI;IACJE,YAAY;IACZG,QAAQ;IACRC;EACF,CAAC;EACDG,IAAIA,CAAA,EAAG;IACL,MAAM;MAAEC,KAAK;MAAEC;IAAU,IAAIR,QAAQ,CAAC,IAAI,CAACI,IAAI,EAAER,GAAG,CAACa,MAAM,EAAE,CAACF,KAAK,EAAE,CAACG,QAAQ,EAAC,CAAG;IAClF,MAAM;MAAEC,KAAK;MAAEC;IAAa,IAAIZ,QAAQ,CAAC,IAAI,CAACI,IAAI,EAAER,GAAG,CAACa,MAAM,EAAE,CAACF,KAAK,EAAE,CAACG,QAAQ,EAAC,CAAG;IAErF,MAAM;MAAEG;IAAa,IAAIZ,OAAO,EAAE;IAEtC,MAAMa,QAAO,GAAID,YAAY,CAACE,MAAK,IAAK;MACtC;MACAC,OAAO,CAACC,GAAG,CAACF,MAAM,CAAC,EAAE;IACvB,CAAC,CAAC;;IACE,OAAO;MACLG,MAAM,EAAC;QACLX,KAAK,EAAEX,GAAG,CAACa,MAAM,EAAE,CAACF,KAAK,EAAE,CAACG,QAAQ,EAAE;QACtCS,QAAQ,EAAEvB,GAAG,CAACa,MAAM,EAAE,CAACW,GAAG,CAAC,CAAC,CAAC,CAACV,QAAQ;MACxC,CAAC;MACDH,KAAK;MACLC,UAAU;MACVa,OAAO,EAAE,EAAE;MACXR,YAAY;MACZC;IACF,CAAC;EACH,CAAC;EACDQ,OAAOA,CAAA,EAAG,CAAC,CAAC;EACZC,OAAO,EAAE;IACP,MAAMC,MAAMA,CAAA,EAAG;MACb;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;IAAA,CACD;IACD7B,KAAKA,CAAA,EAAG;MACNqB,OAAO,CAACC,GAAG,CAAC,OAAO,CAAC;IACtB,CAAC;IACDQ,aAAaA,CAACd,KAAK,EAAE;MACnB,IAAI,CAACA,KAAK,EAAE;QACV,OAAO,wBAAwB;MACjC;MACA,MAAMe,KAAI,GAAI,2CAA2C;MACzD,IAAI,CAACA,KAAK,CAACC,IAAI,CAAChB,KAAK,CAAC,EAAE;QACtB,OAAO,kCAAkC;MAC3C;MAEA,OAAO,IAAI;IACb;EACF;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}