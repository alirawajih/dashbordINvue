{"ast":null,"code":"import { createElementVNode as _createElementVNode, createCommentVNode as _createCommentVNode, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-a49090ce\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"\",\n  style: {\n    \"background\": \"rgb(149, 146, 146)\",\n    \"border\": \"1px solid  rgb(113, 110, 110)\",\n    \"height\": \"100vh\",\n    \"margin\": \"50px\",\n    \"border-radius\": \"8px\"\n  }\n}, [/*#__PURE__*/_createElementVNode(\"p\", null, \" s\")], -1 /* HOISTED */));\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(_Fragment, null, [_hoisted_1, _createCommentVNode(\" <main class=\\\" LoginForm  \\\">\\n      <form @submit.prevent=\\\"onSubmit\\\">\\n        <div class=\\\"alert alert-danger\\\" role=\\\"alert\\\" v-if=\\\"message\\\">\\n          {{ message }}\\n        </div>\\n\\n        <h1 class=\\\"h3 mb-3 fw-normal text-dark\\\">Please sign in</h1>\\n        <label for=\\\"email\\\">Email address</label>\\n        <div class=\\\"\\\">\\n          <input\\n            v-model=\\\"email\\\"\\n            name=\\\"email\\\"\\n            id=\\\"email\\\"\\n            class=\\\"form-control\\\"\\n            type=\\\"email\\\"\\n          />\\n          <span class=\\\"p-error text-danger\\\"> {{ erroremail }}</span>\\n        </div>\\n        <label for=\\\"Password\\\">Password</label>\\n        <div class=\\\"\\\">\\n          <input\\n            v-model=\\\"password\\\"\\n            name=\\\"password\\\"\\n            id=\\\"password\\\"\\n            class=\\\"form-control\\\"\\n            type=\\\"password\\\"\\n          />\\n          <span class=\\\"p-error text-danger\\\"> {{ errorpassword }}</span>\\n        </div>\\n\\n        <div class=\\\"checkbox mb-3 text-dark\\\">\\n          <label>\\n            <input type=\\\"checkbox\\\" name=\\\"checkbox\\\" value=\\\"remember-me\\\" />\\n            Remember me\\n          </label>\\n        </div>\\n        <button class=\\\"w-100 btn btn-lg btn-primary\\\" type=\\\"submit\\\">\\n          Sign in\\n        </button>\\n      </form>\\n    </main> \")], 2112 /* STABLE_FRAGMENT, DEV_ROOT_FRAGMENT */);\n}","map":{"version":3,"names":["_createElementVNode","class","style","_hoisted_1","_createCommentVNode"],"sources":["/var/www/html/project/Dash_Vuexy-master/src/views/login/login.vue"],"sourcesContent":["<template>\n  <div class=\"\" style=\"background: rgb(149, 146, 146);border:1px solid  rgb(113, 110, 110); height: 100vh;margin: 50px;\n  border-radius: 8px;\">\n    <p> s</p>\n\n</div>\n    <!-- <main class=\" LoginForm  \">\n      <form @submit.prevent=\"onSubmit\">\n        <div class=\"alert alert-danger\" role=\"alert\" v-if=\"message\">\n          {{ message }}\n        </div>\n\n        <h1 class=\"h3 mb-3 fw-normal text-dark\">Please sign in</h1>\n        <label for=\"email\">Email address</label>\n        <div class=\"\">\n          <input\n            v-model=\"email\"\n            name=\"email\"\n            id=\"email\"\n            class=\"form-control\"\n            type=\"email\"\n          />\n          <span class=\"p-error text-danger\"> {{ erroremail }}</span>\n        </div>\n        <label for=\"Password\">Password</label>\n        <div class=\"\">\n          <input\n            v-model=\"password\"\n            name=\"password\"\n            id=\"password\"\n            class=\"form-control\"\n            type=\"password\"\n          />\n          <span class=\"p-error text-danger\"> {{ errorpassword }}</span>\n        </div>\n\n        <div class=\"checkbox mb-3 text-dark\">\n          <label>\n            <input type=\"checkbox\" name=\"checkbox\" value=\"remember-me\" />\n            Remember me\n          </label>\n        </div>\n        <button class=\"w-100 btn btn-lg btn-primary\" type=\"submit\">\n          Sign in\n        </button>\n      </form>\n    </main> -->\n  \n</template>\n<script>\nimport { ability } from \"@/ability/defineApilty\";\nimport router from \"@/router\";\nimport { login } from \"@/jsc/loginuser\";\nimport { Store } from \"vuex\";\nimport * as yup from \"yup\";\nimport { Form, Field, ErrorMessage, useField, useForm } from \"vee-validate\";\nexport default {\n  name: \"login\",\n\n  components: {\n    Field,\n    Form,\n    ErrorMessage,\n  },\n  data() {\n    const { handleSubmit } = useForm();\n\n    const onSubmit = handleSubmit((values) => {\n      login(values.email, values.password)\n        .then((user) => {\n          localStorage.setItem(\"user\", JSON.stringify(user));\n          ability.update(user.ability);\n          router.replace({ path: \"/\" });\n        })\n        .catch((e) => (this.message = \"email or password is incorrect\"));\n    });\n    const { value: email, errorMessage: erroremail } = useField(\n      \"email\",\n\n      yup.string().email().required()\n    );\n    const { value: password, errorMessage: errorpassword } = useField(\n      \"password\",\n\n      yup.string().min(3).required()\n    );\n\n    return {\n      message: \"\",\n      email,\n      password,\n      errorpassword,\n      erroremail,\n      handleSubmit,\n      onSubmit,\n    };\n  },\n  created() {},\n  methods: {\n    async submit() {\n      // console.log(handleSubmit)\n      // login(this.email, this.password)\n      //   .then((user) => {\n      //     localStorage.setItem(\"user\", JSON.stringify(user));\n      //     // updateability(user.position)\n      //     ability.update(user.ability);\n      //     router.replace({ path: \"/\" });\n      //     // timeout()\n      //   })\n      //   .catch((e) => (this.message = \"email or password is incorrect\"));\n      ///////////////////\n      // this.$store\n      //   .dispatch(\"login\", this.user)\n      //   .then((user) => {\n      //     localStorage.setItem(\"user\", JSON.stringify(user));\n      //     // updateability(user.position)\n      //     ability.update(user.ability);\n      //     router.replace({ path: \"/\" });\n      //     // timeout()\n      //   })\n      //   .catch((e) => (this.message = \"email or password is incorrect\"));\n      /////////////////////\n      // this.$store.dispatch(\"login\", this.user)\n      // if(this.$store.state.auth){\n      //   localStorage.setItem('user' ,JSON.stringify(this.$store.state.auth))\n      //   router.replace({name:\"ecommerce\"})\n      // }else{\n      //   this.message = \"email or password is incorrect\"\n      // }\n    },\n    login() {},\n    // validateEmail(value) {\n    //   if (!value) {\n    //     return \"This field is required\";\n    //   }\n    //   const regex = /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i;\n    //   if (!regex.test(value)) {\n    //     return \"This field must be a valid email\";\n    //   }\n\n    //   return true;\n    // },\n  },\n};\n</script>\n<style scoped>\n\n.LoginForm{\n  position: absolute;\n  left: 25%;\n}\n\n\n</style>"],"mappings":";;gEACEA,mBAAA,CAII;EAJCC,KAAK,EAAC,EAAE;EAACC,KACM,EADN;IAAA;IAAA;IAAA;IAAA;IAAA;EAAA;iBAEZF,mBAAA,CAAS,WAAN,IAAE,E;;;6DAFPG,UAII,EACFC,mBAAA,8yCAwCW,C"},"metadata":{},"sourceType":"module","externalDependencies":[]}