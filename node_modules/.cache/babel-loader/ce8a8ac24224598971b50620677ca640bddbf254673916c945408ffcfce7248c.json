{"ast":null,"code":"import { defineComponent, ref, watch, onMounted, onBeforeUnmount, h, createApp } from 'vue';\nconst chartsScriptUrl = 'https://www.gstatic.com/charts/loader.js';\nlet chartsLoaderPromise = null;\nconst loadedPackages = new Map();\nfunction getChartsLoader() {\n  // If already included in the page:\n  if (window.google !== undefined) {\n    return Promise.resolve(window.google.charts);\n  }\n  if (chartsLoaderPromise === null) {\n    chartsLoaderPromise = new Promise(resolve => {\n      // Find script tag with same src in DOM.\n      const foundScript = document.querySelector(\"script[src=\\\"\".concat(chartsScriptUrl, \"\\\"]\"));\n      // Create or get existed tag.\n      const script = foundScript || document.createElement('script');\n      // Set src if no script was found.\n      if (!foundScript) {\n        script.src = chartsScriptUrl;\n        script.type = 'text/javascript';\n        document.head.append(script);\n      }\n      script.onload = () => {\n        if (window.google !== undefined) {\n          resolve(window.google.charts);\n        }\n      };\n    });\n  }\n  return chartsLoaderPromise;\n}\n/**\n * Function to load Google Charts JS API.\n * @param version - Chart version to load.\n * @param packages - Packages to load.\n * @param language - Languages to load.\n * @param mapsApiKey - Google Maps api key.\n * @returns\n */\nasync function loadGoogleCharts() {\n  let version = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : 'current',\n    {\n      packages = ['corechart', 'controls'],\n      language = 'en',\n      mapsApiKey\n    } = arguments.length > 1 ? arguments[1] : void 0;\n  const loader = await getChartsLoader();\n  const settingsKey = \"\".concat(version, \"_\").concat(packages.join('_'), \"_\").concat(language);\n  if (loadedPackages.has(settingsKey)) return loadedPackages.get(settingsKey);\n  const loaderPromise = new Promise(resolve => {\n    loader.load(version, {\n      packages,\n      language,\n      mapsApiKey\n    });\n    loader.setOnLoadCallback(() => resolve(window.google));\n  });\n  loadedPackages.set(settingsKey, loaderPromise);\n  return loaderPromise;\n}\nfunction getValidChartData(chartsLib, data, isFirstRowLabels) {\n  if (chartsLib !== null && data instanceof chartsLib.visualization.DataTable) {\n    return data;\n  }\n  if (chartsLib !== null && data instanceof chartsLib.visualization.DataView) {\n    return data;\n  }\n  if (chartsLib !== null && Array.isArray(data)) {\n    return chartsLib.visualization.arrayToDataTable(data, isFirstRowLabels);\n  }\n  if (chartsLib !== null && data !== null && typeof data === 'object') {\n    return new chartsLib.visualization.DataTable(data);\n  }\n  return null;\n}\nfunction createChartObject(chartsLib, chartObject, chartEl, chartType, chartEvents, createChartFunction) {\n  const createChart = (el, google, type) => {\n    if (type === undefined) {\n      throw new Error('please, provide chart type property');\n    }\n    return new google.visualization[type](el);\n  };\n  if (chartsLib === null) {\n    throw new Error('please, provide charts lib property');\n  }\n  if (chartEl === null) {\n    throw new Error('please, provide chart element property');\n  }\n  const fn = createChartFunction || createChart;\n  chartObject = fn(chartEl, chartsLib, chartType);\n  attachListeners(chartsLib, chartObject, chartEvents);\n  return chartObject;\n}\nfunction attachListeners(chartsLib, chartObject, chartEvents) {\n  if (chartEvents === null) {\n    return;\n  }\n  for (const [event, listener] of Object.entries(chartEvents)) {\n    if (chartsLib !== null && chartObject !== null) {\n      chartsLib.visualization.events.addListener(chartObject, event, listener);\n    }\n  }\n}\nfunction debounce(func) {\n  let waitMilliseconds = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : 50;\n  let timeoutId;\n  function nextInvokeTimeout() {\n    return waitMilliseconds;\n  }\n  const debouncedFunction = function () {\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n    const context = this;\n    const invokeFunction = function () {\n      timeoutId = undefined;\n      func.apply(context, args);\n    };\n    if (timeoutId !== undefined) {\n      clearTimeout(timeoutId);\n    }\n    timeoutId = setTimeout(invokeFunction, nextInvokeTimeout());\n  };\n  return debouncedFunction;\n}\nlet chartsLib = null;\nconst GChart = defineComponent({\n  name: 'GChart',\n  props: {\n    type: {\n      type: String,\n      required: true\n    },\n    data: {\n      type: [Array, Object, null],\n      default: () => []\n    },\n    isFirstRowLabels: {\n      type: Boolean,\n      default: false\n    },\n    options: {\n      type: Object,\n      default: () => ({})\n    },\n    version: {\n      type: String,\n      default: 'current'\n    },\n    settings: {\n      type: Object,\n      default: () => ({\n        packages: ['corechart', 'table']\n      })\n    },\n    events: {\n      type: Object,\n      default: null\n    },\n    createChart: {\n      type: Function,\n      default: undefined\n    },\n    resizeDebounce: {\n      type: Number,\n      default: 200\n    }\n  },\n  setup(props, param) {\n    let {\n      emit\n    } = param;\n    const chartObject = ref(null);\n    const chartEl = ref(null);\n    function drawChart() {\n      if (chartsLib === null || chartObject.value === null) {\n        return;\n      }\n      const data = getValidChartData(chartsLib, props.data, props.isFirstRowLabels);\n      if (data !== null) {\n        var ref1;\n        (ref1 = chartObject.value) === null || ref1 === void 0 ? void 0 : ref1.draw(data, props.options);\n      }\n    }\n    watch(() => props.data, () => drawChart(), {\n      deep: true\n    });\n    watch(() => props.options, () => drawChart(), {\n      deep: true\n    });\n    watch(() => props.type, () => {\n      chartObject.value = createChartObject(chartsLib, chartObject.value, chartEl.value, props.type, props.events, props.createChart);\n      drawChart();\n    });\n    onMounted(() => {\n      loadGoogleCharts(props.version, props.settings).then(api => {\n        if (api !== undefined) {\n          chartsLib = api;\n          chartObject.value = createChartObject(chartsLib, chartObject.value, chartEl.value, props.type, props.events, props.createChart);\n          emit('ready', chartObject.value, api);\n          drawChart();\n        }\n      });\n      if (props.resizeDebounce > 0) {\n        window.addEventListener('resize', debounce(drawChart, props.resizeDebounce));\n      }\n    });\n    onBeforeUnmount(() => {\n      if (chartObject.value !== null && typeof chartObject.value.clearChart === 'function') {\n        chartObject.value.clearChart();\n      }\n      if (props.resizeDebounce > 0) {\n        window.removeEventListener('resize', debounce(drawChart, props.resizeDebounce));\n      }\n    });\n    return () => h('div', {\n      ref: chartEl\n    }, []);\n  }\n});\nconst app = createApp({});\n// Install the components\nfunction install() {\n  app.component('GChart', GChart);\n}\n/* -- Plugin definition & Auto-install -- */ /* You shouldn't have to modify the code below */ // Plugin\nconst plugin = {\n  version: \"1.1.0\",\n  install\n};\n// Auto-install\nlet GlobalVue = null;\nif (typeof window !== 'undefined') {\n  GlobalVue = window.Vue;\n}\nif (GlobalVue !== null && GlobalVue !== undefined) {\n  app.use(plugin);\n}\nexport { GChart, plugin as default, install, loadGoogleCharts };","map":{"version":3,"names":["chartsScriptUrl","chartsLoaderPromise","loadedPackages","Map","getChartsLoader","window","google","undefined","Promise","resolve","charts","foundScript","document","querySelector","concat","script","createElement","src","type","head","append","onload","loadGoogleCharts","version","arguments","length","packages","language","mapsApiKey","loader","settingsKey","join","has","get","loaderPromise","load","setOnLoadCallback","set","getValidChartData","chartsLib","data","isFirstRowLabels","visualization","DataTable","DataView","Array","isArray","arrayToDataTable","createChartObject","chartObject","chartEl","chartType","chartEvents","createChartFunction","createChart","el","Error","fn","attachListeners","event","listener","Object","entries","events","addListener","debounce","func","waitMilliseconds","timeoutId","nextInvokeTimeout","debouncedFunction","_len","args","_key","context","invokeFunction","apply","clearTimeout","setTimeout","GChart","defineComponent","name","props","String","required","default","Boolean","options","settings","Function","resizeDebounce","Number","setup","param","emit","ref","drawChart","value","ref1","draw","watch","deep","onMounted","then","api","addEventListener","onBeforeUnmount","clearChart","removeEventListener","h","app","createApp","install","component","plugin","GlobalVue","Vue","use"],"sources":["../src/lib/google-charts-loader.ts","../src/utils.ts","../src/lib/debounce.ts","../src/components/GChart.ts","../src/index.ts"],"sourcesContent":["/**\n * Usage:\n * import { loadGoogleCharts } from 'vue-google-charts'\n *\n * loadGoogleCharts('current', { packages: ['corechart', 'map'] })\n *  .then(google => {\n *    const chart = new google.visualization.Map ...\n *  })\n */\n\nimport type {\n  GoogleViz,\n  GoogleChartLoader,\n  GoogleChartVersion,\n  GoogleChartLoaderOptions,\n} from '../types';\n\nconst chartsScriptUrl = 'https://www.gstatic.com/charts/loader.js';\n\nlet chartsLoaderPromise: null | Promise<GoogleChartLoader> = null;\n\nconst loadedPackages = new Map();\n\nexport function getChartsLoader(): Promise<GoogleChartLoader> {\n  // If already included in the page:\n  if (window.google !== undefined) {\n    return Promise.resolve(window.google.charts);\n  }\n\n  if (chartsLoaderPromise === null) {\n    chartsLoaderPromise = new Promise(resolve => {\n      // Find script tag with same src in DOM.\n      const foundScript = document.querySelector<HTMLScriptElement>(\n        `script[src=\"${chartsScriptUrl}\"]`\n      );\n\n      // Create or get existed tag.\n      const script = foundScript || document.createElement('script');\n\n      // Set src if no script was found.\n      if (!foundScript) {\n        script.src = chartsScriptUrl;\n        script.type = 'text/javascript';\n\n        document.head.append(script);\n      }\n\n      script.onload = () => {\n        if (window.google !== undefined) {\n          resolve(window.google.charts);\n        }\n      };\n    });\n  }\n\n  return chartsLoaderPromise;\n}\n\n/**\n * Function to load Google Charts JS API.\n * @param version - Chart version to load.\n * @param packages - Packages to load.\n * @param language - Languages to load.\n * @param mapsApiKey - Google Maps api key.\n * @returns\n */\nexport async function loadGoogleCharts(\n  version: GoogleChartVersion = 'current',\n  {\n    packages = ['corechart', 'controls'],\n    language = 'en',\n    mapsApiKey,\n  }: GoogleChartLoaderOptions\n): Promise<GoogleViz | undefined> {\n  const loader = await getChartsLoader();\n\n  const settingsKey = `${version}_${packages.join('_')}_${language}`;\n\n  if (loadedPackages.has(settingsKey)) return loadedPackages.get(settingsKey);\n\n  const loaderPromise: Promise<GoogleViz | undefined> = new Promise(resolve => {\n    loader.load(version, {\n      packages,\n      language,\n      mapsApiKey,\n    });\n\n    loader.setOnLoadCallback(() => resolve(window.google));\n  });\n\n  loadedPackages.set(settingsKey, loaderPromise);\n\n  return loaderPromise;\n}\n","import {\n  GoogleChartWrapper,\n  GoogleChartWrapperChartType,\n  GoogleDataTable,\n  GoogleDataView,\n  GoogleViz,\n  GoogleVizEventName,\n  GoogleVizEvents,\n} from './types';\n\nexport interface ICreateChartFunction {\n  (\n    el: HTMLElement,\n    google: GoogleViz,\n    type: GoogleChartWrapperChartType\n  ): GoogleChartWrapper;\n}\n\nexport function getValidChartData(\n  chartsLib: null | GoogleViz,\n  data: unknown[][] | GoogleDataTable | Record<string, any> | null,\n  isFirstRowLabels?: boolean\n): GoogleDataTable | GoogleDataView | null {\n  if (chartsLib !== null && data instanceof chartsLib.visualization.DataTable) {\n    return data;\n  }\n\n  if (chartsLib !== null && data instanceof chartsLib.visualization.DataView) {\n    return data;\n  }\n\n  if (chartsLib !== null && Array.isArray(data)) {\n    return chartsLib.visualization.arrayToDataTable(data, isFirstRowLabels);\n  }\n\n  if (chartsLib !== null && data !== null && typeof data === 'object') {\n    return new chartsLib.visualization.DataTable(data);\n  }\n\n  return null;\n}\n\nexport function createChartObject(\n  chartsLib: GoogleViz | null,\n  chartObject: GoogleChartWrapper | null,\n  chartEl: HTMLElement | null,\n  chartType: GoogleChartWrapperChartType,\n  chartEvents: GoogleVizEvents | null,\n  createChartFunction?: ICreateChartFunction\n): GoogleChartWrapper | null {\n  const createChart: ICreateChartFunction = (\n    el: HTMLElement,\n    google: GoogleViz,\n    type: GoogleChartWrapperChartType\n  ): GoogleChartWrapper => {\n    if (type === undefined) {\n      throw new Error('please, provide chart type property');\n    }\n\n    return new google.visualization[type](el);\n  };\n\n  if (chartsLib === null) {\n    throw new Error('please, provide charts lib property');\n  }\n\n  if (chartEl === null) {\n    throw new Error('please, provide chart element property');\n  }\n\n  const fn = createChartFunction || createChart;\n\n  chartObject = fn(chartEl, chartsLib, chartType);\n\n  attachListeners(chartsLib, chartObject, chartEvents);\n\n  return chartObject;\n}\n\nfunction attachListeners(\n  chartsLib: null | GoogleViz,\n  chartObject: GoogleChartWrapper | null,\n  chartEvents: GoogleVizEvents | null\n): void {\n  if (chartEvents === null) {\n    return;\n  }\n\n  for (const [event, listener] of Object.entries(chartEvents)) {\n    if (chartsLib !== null && chartObject !== null) {\n      chartsLib.visualization.events.addListener(\n        chartObject,\n        event as GoogleVizEventName,\n        listener as (chartWrapper: GoogleChartWrapper) => any\n      );\n    }\n  }\n}\n","export interface DebouncedFunction<\n  Args extends any[],\n  F extends (...args: Args) => any\n> {\n  (this: ThisParameterType<F>, ...args: Args & Parameters<F>): void;\n}\n\nexport function debounce<Args extends any[], F extends (...args: Args) => any>(\n  func: F,\n  waitMilliseconds = 50\n): DebouncedFunction<Args, F> {\n  let timeoutId: ReturnType<typeof setTimeout> | undefined;\n  function nextInvokeTimeout() {\n    return waitMilliseconds;\n  }\n\n  const debouncedFunction = function (\n    this: ThisParameterType<F>,\n    ...args: Parameters<F>\n  ) {\n    const context = this;\n\n    const invokeFunction = function () {\n      timeoutId = undefined;\n\n      func.apply(context, args);\n    };\n\n    if (timeoutId !== undefined) {\n      clearTimeout(timeoutId);\n    }\n\n    timeoutId = setTimeout(invokeFunction, nextInvokeTimeout());\n  };\n\n  return debouncedFunction;\n}\n","import {\n  defineComponent,\n  ref,\n  h,\n  onMounted,\n  onBeforeUnmount,\n  watch,\n  PropType,\n} from 'vue';\n\nimport {\n  GoogleViz,\n  GoogleChartWrapper,\n  GoogleChartWrapperChartType,\n  GoogleChartOptions,\n  GoogleChartVersion,\n  GoogleChartLoaderOptions,\n  GoogleVizEvents,\n  GoogleDataTable,\n} from '../types';\n\nimport {\n  createChartObject,\n  getValidChartData,\n  ICreateChartFunction,\n} from '../utils';\n\nimport { loadGoogleCharts } from '../lib/google-charts-loader';\nimport { debounce } from '../lib/debounce';\n\nlet chartsLib: null | GoogleViz = null;\n\nexport const GChart = defineComponent({\n  name: 'GChart',\n  props: {\n    type: {\n      type: String as PropType<GoogleChartWrapperChartType>,\n      required: true,\n    },\n    data: {\n      type: [Array, Object, null] as PropType<\n        unknown[][] | GoogleDataTable | Record<string, any> | null\n      >,\n      default: () => [],\n    },\n    isFirstRowLabels: {\n      type: Boolean,\n      default: false,\n    },\n    options: {\n      type: Object as PropType<GoogleChartOptions>,\n      default: () => ({}),\n    },\n    version: {\n      type: String as PropType<GoogleChartVersion>,\n      default: 'current',\n    },\n    settings: {\n      type: Object as PropType<GoogleChartLoaderOptions>,\n      default: () => ({\n        packages: ['corechart', 'table'],\n      }),\n    },\n    events: {\n      type: Object as PropType<GoogleVizEvents | null>,\n      default: null,\n    },\n    createChart: {\n      type: Function as PropType<ICreateChartFunction>,\n      default: undefined,\n    },\n    resizeDebounce: {\n      type: Number,\n      default: 200,\n    },\n  },\n  setup(props, { emit }) {\n    const chartObject = ref<GoogleChartWrapper | null>(null);\n    const chartEl = ref<HTMLElement | null>(null);\n\n    function drawChart(): void {\n      if (chartsLib === null || chartObject.value === null) {\n        return;\n      }\n\n      const data = getValidChartData(\n        chartsLib,\n        props.data,\n        props.isFirstRowLabels\n      );\n      if (data !== null) {\n        chartObject.value?.draw(data, props.options);\n      }\n    }\n\n    watch(\n      () => props.data,\n      () => drawChart(),\n      { deep: true }\n    );\n\n    watch(\n      () => props.options,\n      () => drawChart(),\n      { deep: true }\n    );\n\n    watch(\n      () => props.type,\n      () => {\n        chartObject.value = createChartObject(\n          chartsLib,\n          chartObject.value,\n          chartEl.value,\n          props.type,\n          props.events,\n          props.createChart\n        );\n\n        drawChart();\n      }\n    );\n\n    onMounted(() => {\n      loadGoogleCharts(props.version, props.settings).then(api => {\n        if (api !== undefined) {\n          chartsLib = api;\n\n          chartObject.value = createChartObject(\n            chartsLib,\n            chartObject.value,\n            chartEl.value,\n            props.type,\n            props.events,\n            props.createChart\n          );\n\n          emit('ready', chartObject.value, api);\n\n          drawChart();\n        }\n      });\n\n      if (props.resizeDebounce > 0) {\n        window.addEventListener(\n          'resize',\n          debounce(drawChart, props.resizeDebounce) as EventListener\n        );\n      }\n    });\n\n    onBeforeUnmount(() => {\n      if (\n        chartObject.value !== null &&\n        typeof chartObject.value.clearChart === 'function'\n      ) {\n        chartObject.value.clearChart();\n      }\n\n      if (props.resizeDebounce > 0) {\n        window.removeEventListener(\n          'resize',\n          debounce(drawChart, props.resizeDebounce) as EventListener\n        );\n      }\n    });\n\n    return () => h('div', { ref: chartEl }, []);\n  },\n});\n","import { createApp } from 'vue';\n\nimport { loadGoogleCharts } from './lib/google-charts-loader';\nimport { GChart } from './components/GChart';\n\nconst app = createApp({});\n\n// Install the components\nexport function install() {\n  app.component('GChart', GChart);\n}\n\n// Expose the components\nexport { loadGoogleCharts, GChart };\n\n/* -- Plugin definition & Auto-install -- */\n/* You shouldn't have to modify the code below */\n\n// Plugin\nconst plugin = {\n  version: process.env.VERSION,\n  install,\n};\n\nexport default plugin;\n\n// Auto-install\nlet GlobalVue = null;\nif (typeof window !== 'undefined') {\n  GlobalVue = window.Vue;\n}\n\nif (GlobalVue !== null && GlobalVue !== undefined) {\n  app.use(plugin);\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}