{"ast":null,"code":"import { createElementVNode as _createElementVNode, toDisplayString as _toDisplayString, resolveComponent as _resolveComponent, createVNode as _createVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-d3c5b202\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"maindiv\"\n};\nconst _hoisted_2 = {\n  class: \"chart\"\n};\nconst _hoisted_3 = {\n  class: \"text-start p-2 pb-0\",\n  style: {\n    \"font-size\": \"5px\"\n  }\n};\nconst _hoisted_4 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"h6\", {\n  style: {\n    \"color\": \"rgba(255, 255, 255, 0.27)\"\n  }\n}, \"apexchart\", -1 /* HOISTED */));\nconst _hoisted_5 = {\n  id: \"chart\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_apexchart = _resolveComponent(\"apexchart\", true);\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_createElementVNode(\"div\", _hoisted_3, [_hoisted_4, _createElementVNode(\"p\", null, _toDisplayString(), 1 /* TEXT */)]), _createElementVNode(\"div\", _hoisted_5, [_createVNode(_component_apexchart, {\n    options: $options.chartOptions,\n    series: $options.chartSeries,\n    type: \"bar\",\n    height: \"350\"\n  }, null, 8 /* PROPS */, [\"options\", \"series\"])])])]);\n}","map":{"version":3,"names":["class","style","_createElementVNode","id","_createElementBlock","_hoisted_1","_hoisted_2","_hoisted_3","_hoisted_4","_toDisplayString","_hoisted_5","_createVNode","_component_apexchart","options","$options","chartOptions","series","chartSeries","type","height"],"sources":["/var/www/html/project/Dash_Vuexy-master/src/views/apexchart/apexchart.vue"],"sourcesContent":["<template>\n  <div class=\"maindiv\">\n    <div class=\"chart\">\n      <div class=\"text-start p-2 pb-0\" style=\"font-size: 5px\">\n        <h6 style=\"color: rgba(255, 255, 255, 0.27)\">apexchart</h6>\n        <p>{{  }}</p>\n      </div>\n      <div id=\"chart\">\n        <apexchart\n          :options=\"chartOptions\"\n          :series=\"chartSeries\"\n          type=\"bar\"\n          height=\"350\"\n        />\n      </div>\n    </div>\n  </div>\n</template>\n  \n<script>\nexport default {\n  props: [\"data\"],\n  data() {\n    return {\n      dataAna: [],\n      chartData: {},\n    };\n  },\n  created() {\n    this.chartData = this.data;\n    \n    \n  },\n  computed: {\n    \n    chartOptions() {\n      const normalizedValues = this.chartData.values.map((value) =>\n        Math.log(value + 1)\n      );\n      const maxLogValue = Math.max(...normalizedValues);\n\n      return {\n        chart: {\n          type: \"bar\",\n\n          toolbar: {\n            show: false,\n          },\n        },\n        dataLabels: {\n          enabled: false,\n        },\n        plotOptions: {\n          bar: {\n            horizontal: false,\n            columnWidth: \"15%\",\n            distributed: false,\n            colors: {\n              backgroundBarColors: [\"#808080\"],\n            },\n          },\n        },\n        xaxis: {\n          categories: this.chartData.keys,\n          labels: {\n            show: true,\n            // trim: true,\n            formatter: function (value, opts) {\n              if (value.length > 11) {\n                return value.slice(0, 10) + \"...\";\n              }\n              return value;\n            },\n          },\n        },\n        yaxis: {\n          min: 1,\n          logarithmic: true,\n          // tickAmount: 9,\n          // forceNiceScale: true,\n          labels: {\n            formatter: (value) => {\n              return value.toFixed(0);\n            },\n          },\n        },\n        legend: {\n          show: false,\n        },\n        tooltip: {\n          theme: \"dark\",\n          x: {\n            show: true,\n            formatter: function (val) {\n              return val;\n            },\n          },\n          y: {\n            title: {\n              formatter: function (val) {\n                return \"value\";\n              },\n            },\n          },\n        },\n        fill: {\n          colors: \"#aaa\",\n        },\n      };\n    },\n    chartSeries() {\n      return [\n        {\n          name: \"Data\",\n          data: this.chartData.values,\n        },\n      ];\n    },\n    \n  },\n};\n</script>\n<style lang=\"scss\" scoped>\n.maindiv {\n  position: relative;\n  border-radius: 5px;\n  background: rgb(154, 155, 157);\n  color: black;\n  height: 100%;\n}\n</style>"],"mappings":";;;EACOA,KAAK,EAAC;AAAS;;EACbA,KAAK,EAAC;AAAO;;EACXA,KAAK,EAAC,qBAAqB;EAACC,KAAsB,EAAtB;IAAA;EAAA;;gEAC/BC,mBAAA,CAA2D;EAAvDD,KAAwC,EAAxC;IAAA;EAAA;AAAwC,GAAC,WAAS;;EAGnDE,EAAE,EAAC;AAAO;;;uBANnBC,mBAAA,CAeM,OAfNC,UAeM,GAdJH,mBAAA,CAaM,OAbNI,UAaM,GAZJJ,mBAAA,CAGM,OAHNK,UAGM,GAFJC,UAA2D,EAC3DN,mBAAA,CAAa,WAAAO,gBAAA,EAAR,gB,GAEPP,mBAAA,CAOM,OAPNQ,UAOM,GANJC,YAAA,CAKEC,oBAAA;IAJCC,OAAO,EAAEC,QAAA,CAAAC,YAAY;IACrBC,MAAM,EAAEF,QAAA,CAAAG,WAAW;IACpBC,IAAI,EAAC,KAAK;IACVC,MAAM,EAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}