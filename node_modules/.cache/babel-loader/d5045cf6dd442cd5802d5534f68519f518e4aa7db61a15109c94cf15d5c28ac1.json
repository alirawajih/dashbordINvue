{"ast":null,"code":"import { createElementVNode as _createElementVNode, createVNode as _createVNode, withCtx as _withCtx, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = /*#__PURE__*/_createElementVNode(\"h1\", null, \"vee-validate Dynamic validation Triggers\", -1 /* HOISTED */);\nconst _hoisted_2 = /*#__PURE__*/_createElementVNode(\"p\", null, \" This input can customize the validation triggers using \\\"interaction modes\\\". Try passing either `passive`, `aggressive`, `lazy` or `eager` and see how it changes the validation behavior. \", -1 /* HOISTED */);\nconst _hoisted_3 = /*#__PURE__*/_createElementVNode(\"label\", {\n  for: \"email\"\n}, \"Email\", -1 /* HOISTED */);\nconst _hoisted_4 = /*#__PURE__*/_createElementVNode(\"button\", {\n  type: \"submit\"\n}, \"Submit\", -1 /* HOISTED */);\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", null, [_hoisted_1, _hoisted_2, _createVNode($setup[\"Form\"], {\n    onSubmit: $setup.onSubmit,\n    \"validation-schema\": $setup.schema\n  }, {\n    default: _withCtx(() => [_hoisted_3, _createVNode($setup[\"CustomField\"], {\n      name: \"email\",\n      type: \"email\",\n      mode: \"aggressive\"\n    }), _hoisted_4]),\n    _: 1 /* STABLE */\n  }, 8 /* PROPS */, [\"validation-schema\"])]);\n}","map":{"version":3,"names":["_createElementVNode","for","type","_createElementBlock","_hoisted_1","_hoisted_2","_createVNode","$setup","onSubmit","schema","_hoisted_3","name","mode","_hoisted_4"],"sources":["/var/www/html/dashbord_vue_master/src/views/login/tsetLogin.vue"],"sourcesContent":["<script setup >\nimport { Form } from 'vee-validate';\nimport * as yup from 'yup';\nimport CustomField from '@/components/input/CustomField.vue';\n\nfunction onSubmit(values) {\n  alert(JSON.stringify(values, null, 2));\n}\n\nconst schema = yup.object({\n  email: yup.string().email().required(),\n});\n</script>\n\n<template>\n  <div>\n    <h1>vee-validate Dynamic validation Triggers</h1>\n    <p>\n      This input can customize the validation triggers using \"interaction\n      modes\". Try passing either `passive`, `aggressive`, `lazy` or `eager` and\n      see how it changes the validation behavior.\n    </p>\n\n    <Form @submit=\"onSubmit\" :validation-schema=\"schema\">\n      <label for=\"email\">Email</label>\n      <CustomField name=\"email\" type=\"email\" mode=\"aggressive\" />\n\n      <button type=\"submit\">Submit</button>\n    </Form>\n  </div>\n</template>\n\n<style>\n#app {\n  font-family: Arial, Helvetica, sans-serif;\n  max-width: 500px;\n}\n\ninput {\n  display: block;\n  margin-bottom: 20px;\n}\n\nbutton {\n  display: block;\n}\n\nform {\n  padding: 20px;\n  border: 1px solid black;\n}\n</style>\n"],"mappings":";gCAgBIA,mBAAA,CAAiD,YAA7C,0CAAwC;gCAC5CA,mBAAA,CAII,WAJD,+LAIH;gCAGEA,mBAAA,CAAgC;EAAzBC,GAAG,EAAC;AAAO,GAAC,OAAK;gCAGxBD,mBAAA,CAAqC;EAA7BE,IAAI,EAAC;AAAQ,GAAC,QAAM;;;uBAZhCC,mBAAA,CAcM,cAbJC,UAAiD,EACjDC,UAII,EAEJC,YAAA,CAKOC,MAAA;IALAC,QAAM,EAAED,MAAA,CAAAC,QAAQ;IAAG,mBAAiB,EAAED,MAAA,CAAAE;;sBAC3C,MAAgC,CAAhCC,UAAgC,EAChCJ,YAAA,CAA2DC,MAAA;MAA9CI,IAAI,EAAC,OAAO;MAACT,IAAI,EAAC,OAAO;MAACU,IAAI,EAAC;QAE5CC,UAAqC,C"},"metadata":{},"sourceType":"module","externalDependencies":[]}