{"ast":null,"code":"\"use strict\";\n\n/*!\n * Copyright 2015 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nrequire(\"core-js/modules/es.array.push.js\");\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function step(result) {\n      result.done ? resolve(result.value) : new P(function (resolve) {\n        resolve(result.value);\n      }).then(fulfilled, rejected);\n    }\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n/*!\n * @module common/service\n */\nconst arrify = require(\"arrify\");\nconst extend = require(\"extend\");\nconst util_1 = require(\"./util\");\nconst PROJECT_ID_TOKEN = '{{projectId}}';\nclass Service {\n  /**\n   * Service is a base class, meant to be inherited from by a \"service,\" like\n   * BigQuery or Storage.\n   *\n   * This handles making authenticated requests by exposing a `makeReq_`\n   * function.\n   *\n   * @constructor\n   * @alias module:common/service\n   *\n   * @param {object} config - Configuration object.\n   * @param {string} config.baseUrl - The base URL to make API requests to.\n   * @param {string[]} config.scopes - The scopes required for the request.\n   * @param {object=} options - [Configuration object](#/docs).\n   */\n  constructor(config, options) {\n    options = options || {};\n    this.baseUrl = config.baseUrl;\n    this.globalInterceptors = arrify(options.interceptors_);\n    this.interceptors = [];\n    this.packageJson = config.packageJson;\n    this.projectId = options.projectId || PROJECT_ID_TOKEN;\n    this.projectIdRequired = config.projectIdRequired !== false;\n    this.Promise = options.promise || Promise;\n    this.requestModule = config.requestModule;\n    const reqCfg = extend({}, config, {\n      projectIdRequired: this.projectIdRequired,\n      projectId: this.projectId,\n      credentials: options.credentials,\n      keyFile: options.keyFilename,\n      email: options.email,\n      token: options.token,\n      request: this.requestModule\n    });\n    this.makeAuthenticatedRequest = util_1.util.makeAuthenticatedRequestFactory(reqCfg);\n    this.authClient = this.makeAuthenticatedRequest.authClient;\n    this.getCredentials = this.makeAuthenticatedRequest.getCredentials;\n    const isCloudFunctionEnv = !!process.env.FUNCTION_NAME;\n    if (isCloudFunctionEnv) {\n      this.interceptors.push({\n        request(reqOpts) {\n          reqOpts.forever = false;\n          return reqOpts;\n        }\n      });\n    }\n  }\n  getProjectId(callback) {\n    if (!callback) {\n      return this.getProjectIdAsync();\n    }\n    this.getProjectIdAsync().then(p => callback(null, p), callback);\n  }\n  getProjectIdAsync() {\n    return __awaiter(this, void 0, void 0, function* () {\n      const projectId = yield this.authClient.getProjectId();\n      if (this.projectId === PROJECT_ID_TOKEN && projectId) {\n        this.projectId = projectId;\n      }\n      return this.projectId;\n    });\n  }\n  request_(reqOpts, callback) {\n    reqOpts = extend(true, {}, reqOpts);\n    const isAbsoluteUrl = reqOpts.uri.indexOf('http') === 0;\n    const uriComponents = [this.baseUrl];\n    if (this.projectIdRequired) {\n      uriComponents.push('projects');\n      uriComponents.push(this.projectId);\n    }\n    uriComponents.push(reqOpts.uri);\n    if (isAbsoluteUrl) {\n      uriComponents.splice(0, uriComponents.indexOf(reqOpts.uri));\n    }\n    reqOpts.uri = uriComponents.map(uriComponent => {\n      const trimSlashesRegex = /^\\/*|\\/*$/g;\n      return uriComponent.replace(trimSlashesRegex, '');\n    }).join('/')\n    // Some URIs have colon separators.\n    // Bad: https://.../projects/:list\n    // Good: https://.../projects:list\n    .replace(/\\/:/g, ':');\n    // Interceptors should be called in the order they were assigned.\n    const combinedInterceptors = [].slice.call(this.globalInterceptors).concat(this.interceptors).concat(arrify(reqOpts.interceptors_));\n    let interceptor;\n    // tslint:disable-next-line:no-conditional-assignment\n    while ((interceptor = combinedInterceptors.shift()) && interceptor.request) {\n      reqOpts = interceptor.request(reqOpts);\n    }\n    delete reqOpts.interceptors_;\n    const pkg = this.packageJson;\n    reqOpts.headers = extend({}, reqOpts.headers, {\n      'User-Agent': util_1.util.getUserAgentFromPackageJson(pkg),\n      'x-goog-api-client': `gl-node/${process.versions.node} gccl/${pkg.version}`\n    });\n    if (reqOpts.shouldReturnStream) {\n      return this.makeAuthenticatedRequest(reqOpts);\n    } else {\n      this.makeAuthenticatedRequest(reqOpts, callback);\n    }\n  }\n  /**\n   * Make an authenticated API request.\n   *\n   * @private\n   *\n   * @param {object} reqOpts - Request options that are passed to `request`.\n   * @param {string} reqOpts.uri - A URI relative to the baseUrl.\n   * @param {function} callback - The callback function passed to `request`.\n   */\n  request(reqOpts, callback) {\n    Service.prototype.request_.call(this, reqOpts, callback);\n  }\n  /**\n   * Make an authenticated API request.\n   *\n   * @private\n   *\n   * @param {object} reqOpts - Request options that are passed to `request`.\n   * @param {string} reqOpts.uri - A URI relative to the baseUrl.\n   */\n  requestStream(reqOpts) {\n    const opts = extend(true, reqOpts, {\n      shouldReturnStream: true\n    });\n    return Service.prototype.request_.call(this, opts);\n  }\n}\nexports.Service = Service;","map":{"version":3,"names":["require","__awaiter","thisArg","_arguments","P","generator","Promise","resolve","reject","fulfilled","value","step","next","e","rejected","result","done","then","apply","Object","defineProperty","exports","arrify","extend","util_1","PROJECT_ID_TOKEN","Service","constructor","config","options","baseUrl","globalInterceptors","interceptors_","interceptors","packageJson","projectId","projectIdRequired","promise","requestModule","reqCfg","credentials","keyFile","keyFilename","email","token","request","makeAuthenticatedRequest","util","makeAuthenticatedRequestFactory","authClient","getCredentials","isCloudFunctionEnv","process","env","FUNCTION_NAME","push","reqOpts","forever","getProjectId","callback","getProjectIdAsync","p","request_","isAbsoluteUrl","uri","indexOf","uriComponents","splice","map","uriComponent","trimSlashesRegex","replace","join","combinedInterceptors","slice","call","concat","interceptor","shift","pkg","headers","getUserAgentFromPackageJson","versions","node","version","shouldReturnStream","prototype","requestStream","opts"],"sources":["/var/www/html/project/Dash_Vuexy-master/node_modules/@google-cloud/common/build/src/service.js"],"sourcesContent":["\"use strict\";\n/*!\n * Copyright 2015 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/*!\n * @module common/service\n */\nconst arrify = require(\"arrify\");\nconst extend = require(\"extend\");\nconst util_1 = require(\"./util\");\nconst PROJECT_ID_TOKEN = '{{projectId}}';\nclass Service {\n    /**\n     * Service is a base class, meant to be inherited from by a \"service,\" like\n     * BigQuery or Storage.\n     *\n     * This handles making authenticated requests by exposing a `makeReq_`\n     * function.\n     *\n     * @constructor\n     * @alias module:common/service\n     *\n     * @param {object} config - Configuration object.\n     * @param {string} config.baseUrl - The base URL to make API requests to.\n     * @param {string[]} config.scopes - The scopes required for the request.\n     * @param {object=} options - [Configuration object](#/docs).\n     */\n    constructor(config, options) {\n        options = options || {};\n        this.baseUrl = config.baseUrl;\n        this.globalInterceptors = arrify(options.interceptors_);\n        this.interceptors = [];\n        this.packageJson = config.packageJson;\n        this.projectId = options.projectId || PROJECT_ID_TOKEN;\n        this.projectIdRequired = config.projectIdRequired !== false;\n        this.Promise = options.promise || Promise;\n        this.requestModule = config.requestModule;\n        const reqCfg = extend({}, config, {\n            projectIdRequired: this.projectIdRequired,\n            projectId: this.projectId,\n            credentials: options.credentials,\n            keyFile: options.keyFilename,\n            email: options.email,\n            token: options.token,\n            request: this.requestModule,\n        });\n        this.makeAuthenticatedRequest =\n            util_1.util.makeAuthenticatedRequestFactory(reqCfg);\n        this.authClient = this.makeAuthenticatedRequest.authClient;\n        this.getCredentials = this.makeAuthenticatedRequest.getCredentials;\n        const isCloudFunctionEnv = !!process.env.FUNCTION_NAME;\n        if (isCloudFunctionEnv) {\n            this.interceptors.push({\n                request(reqOpts) {\n                    reqOpts.forever = false;\n                    return reqOpts;\n                },\n            });\n        }\n    }\n    getProjectId(callback) {\n        if (!callback) {\n            return this.getProjectIdAsync();\n        }\n        this.getProjectIdAsync().then(p => callback(null, p), callback);\n    }\n    getProjectIdAsync() {\n        return __awaiter(this, void 0, void 0, function* () {\n            const projectId = yield this.authClient.getProjectId();\n            if (this.projectId === PROJECT_ID_TOKEN && projectId) {\n                this.projectId = projectId;\n            }\n            return this.projectId;\n        });\n    }\n    request_(reqOpts, callback) {\n        reqOpts = extend(true, {}, reqOpts);\n        const isAbsoluteUrl = reqOpts.uri.indexOf('http') === 0;\n        const uriComponents = [this.baseUrl];\n        if (this.projectIdRequired) {\n            uriComponents.push('projects');\n            uriComponents.push(this.projectId);\n        }\n        uriComponents.push(reqOpts.uri);\n        if (isAbsoluteUrl) {\n            uriComponents.splice(0, uriComponents.indexOf(reqOpts.uri));\n        }\n        reqOpts.uri = uriComponents\n            .map((uriComponent) => {\n            const trimSlashesRegex = /^\\/*|\\/*$/g;\n            return uriComponent.replace(trimSlashesRegex, '');\n        })\n            .join('/')\n            // Some URIs have colon separators.\n            // Bad: https://.../projects/:list\n            // Good: https://.../projects:list\n            .replace(/\\/:/g, ':');\n        // Interceptors should be called in the order they were assigned.\n        const combinedInterceptors = []\n            .slice.call(this.globalInterceptors)\n            .concat(this.interceptors)\n            .concat(arrify(reqOpts.interceptors_));\n        let interceptor;\n        // tslint:disable-next-line:no-conditional-assignment\n        while ((interceptor = combinedInterceptors.shift()) &&\n            interceptor.request) {\n            reqOpts = interceptor.request(reqOpts);\n        }\n        delete reqOpts.interceptors_;\n        const pkg = this.packageJson;\n        reqOpts.headers = extend({}, reqOpts.headers, {\n            'User-Agent': util_1.util.getUserAgentFromPackageJson(pkg),\n            'x-goog-api-client': `gl-node/${process.versions.node} gccl/${pkg.version}`,\n        });\n        if (reqOpts.shouldReturnStream) {\n            return this.makeAuthenticatedRequest(reqOpts);\n        }\n        else {\n            this.makeAuthenticatedRequest(reqOpts, callback);\n        }\n    }\n    /**\n     * Make an authenticated API request.\n     *\n     * @private\n     *\n     * @param {object} reqOpts - Request options that are passed to `request`.\n     * @param {string} reqOpts.uri - A URI relative to the baseUrl.\n     * @param {function} callback - The callback function passed to `request`.\n     */\n    request(reqOpts, callback) {\n        Service.prototype.request_.call(this, reqOpts, callback);\n    }\n    /**\n     * Make an authenticated API request.\n     *\n     * @private\n     *\n     * @param {object} reqOpts - Request options that are passed to `request`.\n     * @param {string} reqOpts.uri - A URI relative to the baseUrl.\n     */\n    requestStream(reqOpts) {\n        const opts = extend(true, reqOpts, { shouldReturnStream: true });\n        return Service.prototype.request_.call(this, opts);\n    }\n}\nexports.Service = Service;\n//# sourceMappingURL=service.js.map"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}