{"ast":null,"code":"export default {\n  data() {\n    return {\n      chartData: {\n        \"keys\": [\"SAR\", \"JOD\", \"USD\", \"AED\", \"IQD\", \"EGP\", \"EUR\", \"OMR\", \"BHD\", \"KWD\", \"QAR\"],\n        \"values\": [3773870736, 56090919, 37979116, 33355799, 6324241, 114142, 60415, 39864, 20750, 10874, 439]\n      }\n    };\n  },\n  computed: {\n    chartOptions() {\n      const normalizedValues = this.chartData.values.map(value => Math.log(value + 1));\n      const maxLogValue = Math.max(...normalizedValues);\n      return {\n        chart: {\n          type: 'bar',\n          toolbar: {\n            show: false\n          }\n        },\n        dataLabels: {\n          enabled: false\n        },\n        plotOptions: {\n          bar: {\n            borderRadius: 10,\n            horizontal: fatrlse\n          }\n        },\n        xaxis: {\n          categories: this.chartData.keys\n        },\n        yaxis: {\n          min: 1,\n          max: Math.exp(maxLogValue) - 1,\n          logarithmic: true,\n          tickAmount: 4,\n          labels: {\n            formatter: value => {\n              return value.toFixed(0);\n            }\n          }\n        }\n      };\n    },\n    chartSeries() {\n      return [{\n        name: 'Data',\n        data: this.chartData.values\n      }];\n    }\n  }\n};","map":{"version":3,"names":["data","chartData","computed","chartOptions","normalizedValues","values","map","value","Math","log","maxLogValue","max","chart","type","toolbar","show","dataLabels","enabled","plotOptions","bar","borderRadius","horizontal","fatrlse","xaxis","categories","keys","yaxis","min","exp","logarithmic","tickAmount","labels","formatter","toFixed","chartSeries","name"],"sources":["/var/www/html/project/Dash_Vuexy-master/src/views/ecommerce/apexchart.vue"],"sourcesContent":["<template>\n  <div class=\"maindiv\">\n    <div class=\"chart\">\n      <div class=\"text-start p-2 pb-0\" style=\"font-size: 5px\">\n        <h6 style=\"color: rgba(255, 255, 255, 0.27)\">Orders</h6>\n        <h4 class=\" \">6,24k</h4>\n      </div>\n      \n      <div id=\"chart\">\n    <apexchart :options=\"chartOptions\" :series=\"chartSeries\" type=\"bar\" height=\"350\" />\n      </div>\n    </div>\n  </div>\n</template>\n  \n<script>\n\nexport default {\n  \n  data() {\n    return {\n      chartData: \n    {\n    \"keys\": [\n        \"SAR\",\n        \"JOD\",\n        \"USD\",\n        \"AED\",\n        \"IQD\",\n        \"EGP\",\n        \"EUR\",\n        \"OMR\",\n        \"BHD\",\n        \"KWD\",\n        \"QAR\"\n    ],\n    \"values\": [\n        3773870736,\n        56090919,\n        37979116,\n        33355799,\n        6324241,\n        114142,\n        60415,\n        39864,\n        20750,\n        10874,\n        439\n    ]\n},\n    };\n  },\n  computed: {\n    chartOptions() {\n      const normalizedValues = this.chartData.values.map(value => Math.log(value + 1));\n      const maxLogValue = Math.max(...normalizedValues);\n      return {\n        chart: {\n          type: 'bar',\n          \n          toolbar: {\n            show: false,\n          },\n        },\n        dataLabels: {\n          enabled: false,\n        },\n        plotOptions: {\n          bar: {\n            borderRadius:10,\n            horizontal: fatrlse,\n          },\n        },\n        xaxis: {\n          categories: this.chartData.keys,\n        },\n        yaxis: {\n          min:1,\n          max: Math.exp(maxLogValue) - 1,\n          logarithmic: true,\n          tickAmount: 4,\n          labels: {\n            formatter: (value) => {\n              return (value).toFixed(0);\n            },\n          },\n        },\n      };\n    },\n    chartSeries() {\n      return [\n        {\n          name: 'Data',\n          data: this.chartData.values,\n        },\n      ];\n    },\n  },\n};\n</script>\n<style lang=\"scss\" scoped>\n.maindiv{\n    position: relative;\n    border-radius: 5px;\n    background: rgb(154, 155, 157);\n    color: black;\n    height: 100%;\n}\n</style>"],"mappings":"AAiBA,eAAe;EAEbA,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,SAAS,EACX;QACA,MAAM,EAAE,CACJ,KAAK,EACL,KAAK,EACL,KAAK,EACL,KAAK,EACL,KAAK,EACL,KAAK,EACL,KAAK,EACL,KAAK,EACL,KAAK,EACL,KAAK,EACL,KAAI,CACP;QACD,QAAQ,EAAE,CACN,UAAU,EACV,QAAQ,EACR,QAAQ,EACR,QAAQ,EACR,OAAO,EACP,MAAM,EACN,KAAK,EACL,KAAK,EACL,KAAK,EACL,KAAK,EACL,GAAE;MAEV;IACI,CAAC;EACH,CAAC;EACDC,QAAQ,EAAE;IACRC,YAAYA,CAAA,EAAG;MACb,MAAMC,gBAAe,GAAI,IAAI,CAACH,SAAS,CAACI,MAAM,CAACC,GAAG,CAACC,KAAI,IAAKC,IAAI,CAACC,GAAG,CAACF,KAAI,GAAI,CAAC,CAAC,CAAC;MAChF,MAAMG,WAAU,GAAIF,IAAI,CAACG,GAAG,CAAC,GAAGP,gBAAgB,CAAC;MACjD,OAAO;QACLQ,KAAK,EAAE;UACLC,IAAI,EAAE,KAAK;UAEXC,OAAO,EAAE;YACPC,IAAI,EAAE;UACR;QACF,CAAC;QACDC,UAAU,EAAE;UACVC,OAAO,EAAE;QACX,CAAC;QACDC,WAAW,EAAE;UACXC,GAAG,EAAE;YACHC,YAAY,EAAC,EAAE;YACfC,UAAU,EAAEC;UACd;QACF,CAAC;QACDC,KAAK,EAAE;UACLC,UAAU,EAAE,IAAI,CAACvB,SAAS,CAACwB;QAC7B,CAAC;QACDC,KAAK,EAAE;UACLC,GAAG,EAAC,CAAC;UACLhB,GAAG,EAAEH,IAAI,CAACoB,GAAG,CAAClB,WAAW,IAAI,CAAC;UAC9BmB,WAAW,EAAE,IAAI;UACjBC,UAAU,EAAE,CAAC;UACbC,MAAM,EAAE;YACNC,SAAS,EAAGzB,KAAK,IAAK;cACpB,OAAQA,KAAK,CAAE0B,OAAO,CAAC,CAAC,CAAC;YAC3B;UACF;QACF;MACF,CAAC;IACH,CAAC;IACDC,WAAWA,CAAA,EAAG;MACZ,OAAO,CACL;QACEC,IAAI,EAAE,MAAM;QACZnC,IAAI,EAAE,IAAI,CAACC,SAAS,CAACI;MACvB,CAAC,CACF;IACH;EACF;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}