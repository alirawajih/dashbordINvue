{"ast":null,"code":"export default {\n  data: function () {\n    return {\n      series: [{\n        name: 'TEAM A',\n        type: 'column',\n        data: [23, 11, 22, 27, 13, 22, 37, 21, 44, 22, 30]\n      }, {\n        name: 'TEAM B',\n        type: 'area',\n        data: [44, 55, 41, 67, 22, 43, 21, 41, 56, 27, 43]\n      }, {\n        name: 'TEAM C',\n        type: 'line',\n        data: [30, 25, 36, 30, 45, 35, 64, 52, 59, 36, 39]\n      }],\n      chartOptions: {\n        chart: {\n          type: \"bar\",\n          stacked: false,\n          toolbar: {\n            show: false\n          }\n        },\n        dataLabels: {\n          enabled: true,\n          textAnchor: \"middle\"\n        },\n        stroke: {\n          show: true,\n          lineCap: \"square\",\n          width: 10,\n          colors: [\"#00796B\"]\n        },\n        plotOptions: {\n          bar: {\n            horizontal: false,\n            // columnWidth: \"15%\",\n\n            distributed: false,\n            dataLabels: {\n              hideOverflowingLabels: true\n            }\n            // colors: {\n            //   // backgroundBarColors: [\"gray\"],\n\n            // },\n          }\n        },\n\n        xaxis: {\n          categories: [\"SAR\", \"JOD\", \"USD\", \"AED\", \"IQD\", \"EGP\", \"EUR\", \"Hyperpay_via_ConnectIn\", \"HyperPay_via_ConnectIn_CLIQ\", \"HyperPay1_via_ConnectIn\", \"HyperPay_via_ConnectIn_CLIQ\"],\n          crosshairs: {\n            show: false\n          },\n          labels: {\n            show: true,\n            // trim: true,\n            formatter: function (value, opts) {\n              if (value.length >= 10) {\n                return value.slice(0, 10) + \"...\";\n              }\n              return value;\n            }\n          },\n          axisBorder: {\n            show: false\n          }\n        },\n        yaxis: {\n          labels: {\n            formatter: val => {\n              if (val > 1000 && val < 1000000) {\n                return val / 1000 + \"K\";\n              }\n              if (val > 1000000 && val < 1000000000) {\n                return val / 1000000 + \"M\";\n              }\n              if (val > 1000000000 && val < 1000000000000) {\n                return val / 1000000000 + \"B\";\n              }\n              return val;\n            }\n          }\n        },\n        legend: {\n          show: false\n        },\n        fill: {\n          colors: [\"#00796B\"],\n          opacity: 1\n        },\n        tooltip: {\n          theme: \"dark\",\n          x: {\n            show: true,\n            formatter: function (val) {\n              return val;\n            }\n          },\n          y: {\n            title: {\n              formatter: function () {\n                return \"value\";\n              }\n            }\n          }\n        }\n      }\n    };\n  }\n};","map":{"version":3,"names":["data","series","name","type","chartOptions","chart","stacked","toolbar","show","dataLabels","enabled","textAnchor","stroke","lineCap","width","colors","plotOptions","bar","horizontal","distributed","hideOverflowingLabels","xaxis","categories","crosshairs","labels","formatter","value","opts","length","slice","axisBorder","yaxis","val","legend","fill","opacity","tooltip","theme","x","y","title"],"sources":["/var/www/html/project/Dash_Vuexy-master/src/views/apexchart/LineANDbar.vue"],"sourcesContent":["<template>\n    <div class=\"maindiv\">\n        <div id=\"chart\">\n        <apexchart type=\"line\" height=\"350\" :options=\"chartOptions\" :series=\"series\"></apexchart>\n      </div>\n    </div>\n  </template>\n      \n      <script>\n  export default {\n    data: function () {\n      return {\n        series: [\n        {\n            name: 'TEAM A',\n            type: 'column',\n            data: [23, 11, 22, 27, 13, 22, 37, 21, 44, 22, 30]\n          }, {\n            name: 'TEAM B',\n            type: 'area',\n            data: [44, 55, 41, 67, 22, 43, 21, 41, 56, 27, 43]\n          }, {\n            name: 'TEAM C',\n            type: 'line',\n            data: [30, 25, 36, 30, 45, 35, 64, 52, 59, 36, 39]\n          }\n        ],\n        chartOptions: {\n          chart: {\n            type: \"bar\",\n            stacked: false,\n            toolbar: {\n              show: false,\n            },\n          },\n          dataLabels: {\n            enabled: true,\n            textAnchor: \"middle\",\n          },\n  \n          stroke: {\n            show: true,\n            lineCap: \"square\",\n            width: 10,\n            colors: [\"#00796B\"],\n          },\n  \n          plotOptions: {\n            bar: {\n              horizontal: false,\n              // columnWidth: \"15%\",\n  \n              distributed: false,\n              dataLabels: {\n                hideOverflowingLabels: true,\n              },\n              // colors: {\n              //   // backgroundBarColors: [\"gray\"],\n  \n              // },\n            },\n          },\n          xaxis: {\n            categories: [\n              \"SAR\",\n              \"JOD\",\n              \"USD\",\n              \"AED\",\n              \"IQD\",\n              \"EGP\",\n              \"EUR\",\n              \"Hyperpay_via_ConnectIn\",\n              \"HyperPay_via_ConnectIn_CLIQ\",\n              \"HyperPay1_via_ConnectIn\",\n              \"HyperPay_via_ConnectIn_CLIQ\",\n            ],\n            crosshairs: {\n              show: false,\n            },\n            labels: {\n              show: true,\n              // trim: true,\n              formatter: function (value, opts) {\n                if (value.length >= 10) {\n                  return value.slice(0, 10) + \"...\";\n                }\n                return value;\n              },\n            },\n            axisBorder: {\n              show: false,\n            },\n          },\n  \n          yaxis: {\n            labels: {\n              formatter: (val) => {\n                if (val > 1000 && val < 1000000) {\n                  return val / 1000 + \"K\";\n                }\n                if (val > 1000000 && val < 1000000000) {\n                  return val / 1000000 + \"M\";\n                }\n                if (val > 1000000000 && val < 1000000000000) {\n                  return val / 1000000000 + \"B\";\n                }\n                return val;\n              },\n            },\n          },\n          legend: {\n            show: false,\n          },\n          fill: {\n            colors: [\"#00796B\"],\n            opacity: 1,\n          },\n          tooltip: {\n            theme: \"dark\",\n            x: {\n              show: true,\n              formatter: function (val) {\n                return val;\n              },\n            },\n            y: {\n              title: {\n                formatter: function () {\n                  return \"value\";\n                },\n              },\n            },\n          },\n        },\n      };\n    },\n  };\n  </script>\n      \n      <style lang=\"scss\" scoped>\n  @import \"../../assets/style_scss/Partials/variables\";\n  @import \"../../assets/style_scss/Partials/mixin\";\n  \n  .chart {\n    @include card;\n    @include font;\n  }\n  .maindiv {\n    position: relative;\n    border-radius: 5px;\n    background: rgb(154, 155, 157);\n    color: black;\n    height: 100%;\n  }\n  .apexcharts-tooltip {\n    background: #f3f3f3;\n    color: orange;\n  }\n  </style>\n      "],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}