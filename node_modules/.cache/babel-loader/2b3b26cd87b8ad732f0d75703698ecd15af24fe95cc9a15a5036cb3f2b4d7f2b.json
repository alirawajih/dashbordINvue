{"ast":null,"code":"\"use strict\";\n\n/**\n * Copyright 2016, Google Inc.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are\n * met:\n *\n *     * Redistributions of source code must retain the above copyright\n * notice, this list of conditions and the following disclaimer.\n * Redistributions in binary form must reproduce the above\n * copyright notice, this list of conditions and the following disclaimer\n * in the documentation and/or other materials provided with the\n * distribution.\n *     * Neither the name of Google Inc. nor the names of its\n * contributors may be used to endorse or promote products derived from\n * this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\nrequire(\"core-js/modules/es.array.push.js\");\nrequire(\"core-js/modules/web.immediate.js\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nconst ended = require(\"is-stream-ended\");\nconst stream_1 = require(\"stream\");\nconst apiCallable_1 = require(\"./apiCallable\");\nclass PagedIteration extends apiCallable_1.NormalApiCaller {\n  /**\n   * Creates an API caller that returns a stream to performs page-streaming.\n   *\n   * @private\n   * @constructor\n   * @param {PageDescriptor} pageDescriptor - indicates the structure\n   *   of page streaming to be performed.\n   */\n  constructor(pageDescriptor) {\n    super();\n    this.pageDescriptor = pageDescriptor;\n  }\n  createActualCallback(request, callback) {\n    const self = this;\n    return function fetchNextPageToken(err, response) {\n      if (err) {\n        callback(err);\n        return;\n      }\n      const resources = response[self.pageDescriptor.resourceField];\n      const pageToken = response[self.pageDescriptor.responsePageTokenField];\n      if (pageToken) {\n        request[self.pageDescriptor.requestPageTokenField] = pageToken;\n        callback(err, resources, request, response);\n      } else {\n        callback(err, resources, null, response);\n      }\n    };\n  }\n  wrap(func) {\n    const self = this;\n    return function wrappedCall(argument, metadata, options, callback) {\n      return func(argument, metadata, options, self.createActualCallback(argument, callback));\n    };\n  }\n  init(settings, callback) {\n    return super.init(settings, callback);\n  }\n  call(apiCall, argument, settings, canceller) {\n    argument = Object.assign({}, argument);\n    if (settings.pageToken) {\n      argument[this.pageDescriptor.requestPageTokenField] = settings.pageToken;\n    }\n    if (settings.pageSize) {\n      argument[this.pageDescriptor.requestPageSizeField] = settings.pageSize;\n    }\n    if (!settings.autoPaginate) {\n      apiCallable_1.NormalApiCaller.prototype.call.call(this, apiCall, argument, settings, canceller);\n      return;\n    }\n    const maxResults = settings.maxResults || -1;\n    const allResources = [];\n    function pushResources(err, resources, next) {\n      if (err) {\n        canceller.callback(err);\n        return;\n      }\n      for (let i = 0; i < resources.length; ++i) {\n        allResources.push(resources[i]);\n        if (allResources.length === maxResults) {\n          next = null;\n          break;\n        }\n      }\n      if (!next) {\n        canceller.callback(null, allResources);\n        return;\n      }\n      setImmediate(apiCall, next, pushResources);\n    }\n    setImmediate(apiCall, argument, pushResources);\n  }\n}\nexports.PagedIteration = PagedIteration;\nclass PageDescriptor {\n  /**\n   * Describes the structure of a page-streaming call.\n   *\n   * @property {String} requestPageTokenField\n   * @property {String} responsePageTokenField\n   * @property {String} resourceField\n   *\n   * @param {String} requestPageTokenField - The field name of the page token in\n   *   the request.\n   * @param {String} responsePageTokenField - The field name of the page token in\n   *   the response.\n   * @param {String} resourceField - The resource field name.\n   *\n   * @constructor\n   */\n  constructor(requestPageTokenField, responsePageTokenField, resourceField) {\n    this.requestPageTokenField = requestPageTokenField;\n    this.responsePageTokenField = responsePageTokenField;\n    this.resourceField = resourceField;\n  }\n  /**\n   * Creates a new object Stream which emits the resource on 'data' event.\n   * @private\n   * @param {ApiCall} apiCall - the callable object.\n   * @param {Object} request - the request object.\n   * @param {CallOptions=} options - the call options to customize the api call.\n   * @return {Stream} - a new object Stream.\n   */\n  createStream(apiCall, request, options) {\n    const stream = new stream_1.PassThrough({\n      objectMode: true\n    });\n    options = Object.assign({}, options, {\n      autoPaginate: false\n    });\n    const maxResults = 'maxResults' in options ? options.maxResults : -1;\n    let pushCount = 0;\n    let started = false;\n    function callback(err, resources, next) {\n      if (err) {\n        stream.emit('error', err);\n        return;\n      }\n      for (let i = 0; i < resources.length; ++i) {\n        if (ended(stream)) {\n          return;\n        }\n        if (resources[i] === null) {\n          continue;\n        }\n        stream.push(resources[i]);\n        pushCount++;\n        if (pushCount === maxResults) {\n          stream.end();\n        }\n      }\n      if (ended(stream)) {\n        return;\n      }\n      if (!next) {\n        stream.end();\n        return;\n      }\n      // When pageToken is specified in the original options, it will overwrite\n      // the page token field in the next request. Therefore it must be cleared.\n      if ('pageToken' in options) {\n        delete options.pageToken;\n      }\n      if (stream.isPaused()) {\n        request = next;\n        started = false;\n      } else {\n        setImmediate(apiCall, next, options, callback);\n      }\n    }\n    stream.on('resume', () => {\n      if (!started) {\n        started = true;\n        apiCall(request, options, callback);\n      }\n    });\n    return stream;\n  }\n  /**\n   * Returns a new API caller.\n   * @private\n   * @return {PageStreamable} - the page streaming caller.\n   */\n  apiCaller() {\n    return new PagedIteration(this);\n  }\n}\nexports.PageDescriptor = PageDescriptor;","map":{"version":3,"names":["require","ended","stream_1","apiCallable_1","PagedIteration","NormalApiCaller","constructor","pageDescriptor","createActualCallback","request","callback","self","fetchNextPageToken","err","response","resources","resourceField","pageToken","responsePageTokenField","requestPageTokenField","wrap","func","wrappedCall","argument","metadata","options","init","settings","call","apiCall","canceller","Object","assign","pageSize","requestPageSizeField","autoPaginate","prototype","maxResults","allResources","pushResources","next","i","length","push","setImmediate","exports","PageDescriptor","createStream","stream","PassThrough","objectMode","pushCount","started","emit","end","isPaused","on","apiCaller"],"sources":["../../src/pagedIteration.ts"],"sourcesContent":[null],"mappings":";;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAAA,OAAA;AAAAA,OAAA;;;;AA+BA,MAAAC,KAAA,GAAAD,OAAA;AACA,MAAAE,QAAA,GAAAF,OAAA;AAEA,MAAAG,aAAA,GAAAH,OAAA;AAEA,MAAaI,cAAe,SAAQD,aAAA,CAAAE,eAAe;EAEjD;;;;;;;;EAQAC,YAAYC,cAA8B;IACxC,KAAK,EAAE;IACP,IAAI,CAACA,cAAc,GAAGA,cAAc;EACtC;EAEAC,oBAAoBA,CAACC,OAA8B,EAAEC,QAAqB;IACxE,MAAMC,IAAI,GAAG,IAAI;IACjB,OAAO,SAASC,kBAAkBA,CAC9BC,GAAe,EAAEC,QAA+B;MAClD,IAAID,GAAG,EAAE;QACPH,QAAQ,CAACG,GAAG,CAAC;QACb;;MAEF,MAAME,SAAS,GAAGD,QAAQ,CAACH,IAAI,CAACJ,cAAc,CAACS,aAAa,CAAC;MAC7D,MAAMC,SAAS,GAAGH,QAAQ,CAACH,IAAI,CAACJ,cAAc,CAACW,sBAAsB,CAAC;MACtE,IAAID,SAAS,EAAE;QACbR,OAAO,CAACE,IAAI,CAACJ,cAAc,CAACY,qBAAqB,CAAC,GAAGF,SAAS;QAC9DP,QAAQ,CAACG,GAAG,EAAEE,SAAS,EAAEN,OAAO,EAAEK,QAAQ,CAAC;OAC5C,MAAM;QACLJ,QAAQ,CAACG,GAAG,EAAEE,SAAS,EAAE,IAAI,EAAED,QAAQ,CAAC;;IAE5C,CAAC;EACH;EAEAM,IAAIA,CAACC,IAAc;IACjB,MAAMV,IAAI,GAAG,IAAI;IACjB,OAAO,SAASW,WAAWA,CAACC,QAAQ,EAAEC,QAAQ,EAAEC,OAAO,EAAEf,QAAQ;MAC/D,OAAOW,IAAI,CACPE,QAAQ,EAAEC,QAAQ,EAAEC,OAAO,EAC3Bd,IAAI,CAACH,oBAAoB,CAACe,QAAQ,EAAEb,QAAQ,CAAC,CAAC;IACpD,CAAC;EACH;EAEAgB,IAAIA,CAACC,QAAiC,EAAEjB,QAAqB;IAC3D,OAAO,KAAK,CAACgB,IAAI,CAACC,QAAQ,EAAEjB,QAAQ,CAAC;EACvC;EAEAkB,IAAIA,CAACC,OAAgB,EAAEN,QAA+B,EAAEI,QAAQ,EAAEG,SAAS;IACzEP,QAAQ,GAAGQ,MAAM,CAACC,MAAM,CAAC,EAAE,EAAET,QAAQ,CAAC;IACtC,IAAII,QAAQ,CAACV,SAAS,EAAE;MACtBM,QAAQ,CAAC,IAAI,CAAChB,cAAc,CAACY,qBAAqB,CAAC,GAAGQ,QAAQ,CAACV,SAAS;;IAE1E,IAAIU,QAAQ,CAACM,QAAQ,EAAE;MACrBV,QAAQ,CAAC,IAAI,CAAChB,cAAc,CAAC2B,oBAAqB,CAAC,GAAGP,QAAQ,CAACM,QAAQ;;IAEzE,IAAI,CAACN,QAAQ,CAACQ,YAAY,EAAE;MAC1BhC,aAAA,CAAAE,eAAe,CAAC+B,SAAS,CAACR,IAAI,CAACA,IAAI,CAC/B,IAAI,EAAEC,OAAO,EAAEN,QAAQ,EAAEI,QAAQ,EAAEG,SAAS,CAAC;MACjD;;IAGF,MAAMO,UAAU,GAAGV,QAAQ,CAACU,UAAU,IAAI,CAAC,CAAC;IAC5C,MAAMC,YAAY,GAAc,EAAE;IAClC,SAASC,aAAaA,CAAC1B,GAAG,EAAEE,SAAS,EAAEyB,IAAI;MACzC,IAAI3B,GAAG,EAAE;QACPiB,SAAS,CAACpB,QAAQ,CAACG,GAAG,CAAC;QACvB;;MAGF,KAAK,IAAI4B,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG1B,SAAS,CAAC2B,MAAM,EAAE,EAAED,CAAC,EAAE;QACzCH,YAAY,CAACK,IAAI,CAAC5B,SAAS,CAAC0B,CAAC,CAAC,CAAC;QAC/B,IAAIH,YAAY,CAACI,MAAM,KAAKL,UAAU,EAAE;UACtCG,IAAI,GAAG,IAAI;UACX;;;MAGJ,IAAI,CAACA,IAAI,EAAE;QACTV,SAAS,CAACpB,QAAQ,CAAC,IAAI,EAAE4B,YAAY,CAAC;QACtC;;MAEFM,YAAY,CAACf,OAAO,EAAEW,IAAI,EAAED,aAAa,CAAC;IAC5C;IAEAK,YAAY,CAACf,OAAO,EAAEN,QAAQ,EAAEgB,aAAa,CAAC;EAChD;;AApFFM,OAAA,CAAAzC,cAAA,GAAAA,cAAA;AAuFA,MAAa0C,cAAc;EAKzB;;;;;;;;;;;;;;;EAeAxC,YACIa,qBAA6B,EAAED,sBAA8B,EAC7DF,aAAqB;IACvB,IAAI,CAACG,qBAAqB,GAAGA,qBAAqB;IAClD,IAAI,CAACD,sBAAsB,GAAGA,sBAAsB;IACpD,IAAI,CAACF,aAAa,GAAGA,aAAa;EACpC;EAEA;;;;;;;;EAQA+B,YAAYA,CAAClB,OAAgB,EAAEpB,OAAO,EAAEgB,OAAO;IAC7C,MAAMuB,MAAM,GAAG,IAAI9C,QAAA,CAAA+C,WAAW,CAAC;MAACC,UAAU,EAAE;IAAI,CAAC,CAAC;IAClDzB,OAAO,GAAGM,MAAM,CAACC,MAAM,CAAC,EAAE,EAAEP,OAAO,EAAE;MAACU,YAAY,EAAE;IAAK,CAAC,CAAC;IAC3D,MAAME,UAAU,GAAG,YAAY,IAAIZ,OAAO,GAAGA,OAAO,CAACY,UAAU,GAAG,CAAC,CAAC;IACpE,IAAIc,SAAS,GAAG,CAAC;IACjB,IAAIC,OAAO,GAAG,KAAK;IACnB,SAAS1C,QAAQA,CAACG,GAAe,EAAEE,SAAS,EAAEyB,IAAI;MAChD,IAAI3B,GAAG,EAAE;QACPmC,MAAM,CAACK,IAAI,CAAC,OAAO,EAAExC,GAAG,CAAC;QACzB;;MAEF,KAAK,IAAI4B,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG1B,SAAS,CAAC2B,MAAM,EAAE,EAAED,CAAC,EAAE;QACzC,IAAIxC,KAAK,CAAC+C,MAAM,CAAC,EAAE;UACjB;;QAEF,IAAIjC,SAAS,CAAC0B,CAAC,CAAC,KAAK,IAAI,EAAE;UACzB;;QAEFO,MAAM,CAACL,IAAI,CAAC5B,SAAS,CAAC0B,CAAC,CAAC,CAAC;QACzBU,SAAS,EAAE;QACX,IAAIA,SAAS,KAAKd,UAAU,EAAE;UAC5BW,MAAM,CAACM,GAAG,EAAE;;;MAGhB,IAAIrD,KAAK,CAAC+C,MAAM,CAAC,EAAE;QACjB;;MAEF,IAAI,CAACR,IAAI,EAAE;QACTQ,MAAM,CAACM,GAAG,EAAE;QACZ;;MAEF;MACA;MACA,IAAI,WAAW,IAAI7B,OAAO,EAAE;QAC1B,OAAOA,OAAO,CAACR,SAAS;;MAE1B,IAAI+B,MAAM,CAACO,QAAQ,EAAE,EAAE;QACrB9C,OAAO,GAAG+B,IAAI;QACdY,OAAO,GAAG,KAAK;OAChB,MAAM;QACLR,YAAY,CAACf,OAAO,EAAEW,IAAI,EAAEf,OAAO,EAAEf,QAAQ,CAAC;;IAElD;IACAsC,MAAM,CAACQ,EAAE,CAAC,QAAQ,EAAE,MAAK;MACvB,IAAI,CAACJ,OAAO,EAAE;QACZA,OAAO,GAAG,IAAI;QACdvB,OAAO,CAACpB,OAAO,EAAEgB,OAAO,EAAEf,QAAQ,CAAC;;IAEvC,CAAC,CAAC;IACF,OAAOsC,MAAM;EACf;EAEA;;;;;EAKAS,SAASA,CAAA;IACP,OAAO,IAAIrD,cAAc,CAAC,IAAI,CAAC;EACjC;;AA/FFyC,OAAA,CAAAC,cAAA,GAAAA,cAAA"},"metadata":{},"sourceType":"script","externalDependencies":[]}