{"ast":null,"code":"import { createStore } from \"vuex\";\n// import { router } from '../router/index'\n// import defineApilty from '@/ability/ability'\nimport { Settimeout } from \"@/jsc/timeout\";\nimport { ability } from \"@/ability/defineApilty\";\nimport { initialAbility } from '@/ability/config';\nimport dashbordone from \"./dashbordone\";\nconst store = createStore({\n  modules: {\n    dashbordone: dashbordone\n  }\n\n  // state: {\n  //     theme:localStorage.getItem('theme')?localStorage.getItem('theme'):'dark',\n  //     count: 7,\n  //     name: 'ali',\n  //     menuopen: 'close',\n  //     menu: true,\n  //     navnbarsize: 'navBarUp',\n  //     componentsize: 'components',\n  //     userlogin: {},\n\n  //     sockets: {\n  //         connect: function () {\n  //             console.log('socket connected')\n  //         },\n  //         customEmit: function (data) {\n  //             console.log('this method was fired by the socket server. eg: io.emit(\"customEmit\", data)')\n  //         }\n  //     },\n\n  //     users: [\n  //         {\n  //             email: 'ali@yahoo.com',\n  //             password: '123',\n  //             Firstname:'ali',\n  //             lastname:'ahmad',\n  //             position: 'admin',\n  //             ability: [\n  //                 {\n  //                   action: 'manage',\n  //                   subject: 'all',\n  //                 },\n  //               ],\n\n  //         },\n  //         {\n  //             email: 'ali1@yahoo.com',\n  //             password: '1234',\n  //             Firstname:'ali1',\n  //             lastname:'ahmad1',\n  //             position: 'user',\n  //             ability: [\n  //                 {\n  //                     action: 'read',\n  //                     subject: 'ACL',\n  //                   },\n  //               ],\n\n  //         },\n\n  //     ],\n\n  //     loginMessage: '',\n  //     auth: false,\n\n  // },\n\n  // mutations: {\n\n  //     // logout(state) {\n  //     //     // localStorage.removeItem('user')\n  //     //         // localStorage.removeItem('timeout')\n  //     //         // state.auth = false\n  //     //     // location.reload();\n\n  //     // }\n\n  //     add(state, val) {\n  //         state.num = state.num + 1\n\n  //     },\n  //     navbar(state) {\n  //         state.navbar = !state.navbar\n  //     },\n  //     menuopen(state) {\n  //         // state.menu=false\n  //         state.menuopen = 'open'\n\n  //     },\n  //     menuclos(state) {\n  //         state.menuopen = 'close'\n  //     },\n  //     navbar_big(state) {\n  //         state.navnbarsize = 'navBarUp-big'\n  //     }, navbar_min(state) {\n  //         state.navnbarsize = 'navBarUp'\n  //     },\n  //     component_big(state) {\n  //         state.componentsize = 'components-big'\n  //     }, component(state) {\n  //         state.componentsize = 'components'\n  //     },\n  //     changeTheme(state,val){            \n  //         localStorage.setItem('theme',val)\n  //         state.theme = val\n\n  //     }\n\n  // },\n  // getters: {\n  //     length(state) {\n  //         return state.name.length\n  //     }\n  //     ,\n  //     menuopen(state) {\n  //         return state.menuopen\n  //     },\n\n  // },\n\n  // actions: {\n\n  //     // login({state}, val) {\n  //     //     return new Promise((resolve, reject) => {\n  //     //         let user = state.users.filter(i=>i.email == val.email && i.password == val.password\n\n  //     //             )\n  //     //         timeout()\n  //     //         if(user.length){\n  //     //             let now = new Date()\n  //     //             // user[0].timeoutasmint = now.getMinutes() + 2\n  //     //             // user[0].timeout = now.setSeconds(now.getSeconds() +5)\n\n  //     //             // console.log(user[0].timeout)\n  //     //             resolve(user[0])\n  //     //         }else{\n  //     //             reject()\n  //     //         }\n\n  //     //     })\n\n  //     // },\n  //     // logout({ commit }) {\n  //     //     localStorage.removeItem('user');\n  //     //     localStorage.removeItem('timeout')\n  //     //     ability.update(initialAbility.position)\n\n  //     // }\n\n  // },\n  // methods: {}\n});\n\nexport default store;","map":{"version":3,"names":["createStore","Settimeout","ability","initialAbility","dashbordone","store","modules"],"sources":["/var/www/html/project/Dash_Vuexy-master/src/store/index.js"],"sourcesContent":["import { createStore } from \"vuex\";\n// import { router } from '../router/index'\n// import defineApilty from '@/ability/ability'\nimport {Settimeout} from \"@/jsc/timeout\";\nimport { ability } from \"@/ability/defineApilty\";\nimport {initialAbility} from '@/ability/config'\nimport dashbordone from \"./dashbordone\";\n\n\nconst store = createStore({\n    modules: {\n        dashbordone: dashbordone,\n      },\n\n    // state: {\n    //     theme:localStorage.getItem('theme')?localStorage.getItem('theme'):'dark',\n    //     count: 7,\n    //     name: 'ali',\n    //     menuopen: 'close',\n    //     menu: true,\n    //     navnbarsize: 'navBarUp',\n    //     componentsize: 'components',\n    //     userlogin: {},\n\n    //     sockets: {\n    //         connect: function () {\n    //             console.log('socket connected')\n    //         },\n    //         customEmit: function (data) {\n    //             console.log('this method was fired by the socket server. eg: io.emit(\"customEmit\", data)')\n    //         }\n    //     },\n\n\n    //     users: [\n    //         {\n    //             email: 'ali@yahoo.com',\n    //             password: '123',\n    //             Firstname:'ali',\n    //             lastname:'ahmad',\n    //             position: 'admin',\n    //             ability: [\n    //                 {\n    //                   action: 'manage',\n    //                   subject: 'all',\n    //                 },\n    //               ],\n                  \n    //         },\n    //         {\n    //             email: 'ali1@yahoo.com',\n    //             password: '1234',\n    //             Firstname:'ali1',\n    //             lastname:'ahmad1',\n    //             position: 'user',\n    //             ability: [\n    //                 {\n    //                     action: 'read',\n    //                     subject: 'ACL',\n    //                   },\n    //               ],\n                  \n    //         },\n\n    //     ],\n        \n    //     loginMessage: '',\n    //     auth: false,\n\n    // },\n\n    // mutations: {\n      \n    //     // logout(state) {\n    //     //     // localStorage.removeItem('user')\n    //     //         // localStorage.removeItem('timeout')\n    //     //         // state.auth = false\n    //     //     // location.reload();\n\n\n\n    //     // }\n        \n    //     add(state, val) {\n    //         state.num = state.num + 1\n\n    //     },\n    //     navbar(state) {\n    //         state.navbar = !state.navbar\n    //     },\n    //     menuopen(state) {\n    //         // state.menu=false\n    //         state.menuopen = 'open'\n\n    //     },\n    //     menuclos(state) {\n    //         state.menuopen = 'close'\n    //     },\n    //     navbar_big(state) {\n    //         state.navnbarsize = 'navBarUp-big'\n    //     }, navbar_min(state) {\n    //         state.navnbarsize = 'navBarUp'\n    //     },\n    //     component_big(state) {\n    //         state.componentsize = 'components-big'\n    //     }, component(state) {\n    //         state.componentsize = 'components'\n    //     },\n    //     changeTheme(state,val){            \n    //         localStorage.setItem('theme',val)\n    //         state.theme = val\n\n          \n            \n    //     }\n\n    // },\n    // getters: {\n    //     length(state) {\n    //         return state.name.length\n    //     }\n    //     ,\n    //     menuopen(state) {\n    //         return state.menuopen\n    //     },\n\n    // },\n\n    // actions: {\n\n    //     // login({state}, val) {\n    //     //     return new Promise((resolve, reject) => {\n    //     //         let user = state.users.filter(i=>i.email == val.email && i.password == val.password\n\n    //     //             )\n    //     //         timeout()\n    //     //         if(user.length){\n    //     //             let now = new Date()\n    //     //             // user[0].timeoutasmint = now.getMinutes() + 2\n    //     //             // user[0].timeout = now.setSeconds(now.getSeconds() +5)\n                    \n\n    //     //             // console.log(user[0].timeout)\n    //     //             resolve(user[0])\n    //     //         }else{\n    //     //             reject()\n    //     //         }\n\n    //     //     })\n\n    //     // },\n    //     // logout({ commit }) {\n    //     //     localStorage.removeItem('user');\n    //     //     localStorage.removeItem('timeout')\n    //     //     ability.update(initialAbility.position)\n\n    //     // }\n\n    // },\n    // methods: {}\n\n\n}\n)\nexport default store\n"],"mappings":"AAAA,SAASA,WAAW,QAAQ,MAAM;AAClC;AACA;AACA,SAAQC,UAAU,QAAO,eAAe;AACxC,SAASC,OAAO,QAAQ,wBAAwB;AAChD,SAAQC,cAAc,QAAO,kBAAkB;AAC/C,OAAOC,WAAW,MAAM,eAAe;AAGvC,MAAMC,KAAK,GAAGL,WAAW,CAAC;EACtBM,OAAO,EAAE;IACLF,WAAW,EAAEA;EACf;;EAEF;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAGA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;;EAEA;;EAEA;EACA;;EAEA;;EAEA;;EAEA;EACA;EACA;EACA;EACA;;EAIA;;EAEA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAIA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;;EAEA;;EAEA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;;EAGA;EACA;EACA;EACA;EACA;;EAEA;;EAEA;EACA;EACA;EACA;EACA;;EAEA;;EAEA;EACA;AAGJ,CAAC,CACA;;AACD,eAAeC,KAAK"},"metadata":{},"sourceType":"module","externalDependencies":[]}