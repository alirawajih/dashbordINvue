{"ast":null,"code":"import { openBlock as _openBlock, createElementBlock as _createElementBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-a49090ce\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"loginpage row m-0 p-5\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1);\n}","map":{"version":3,"names":["class","_createElementBlock","_hoisted_1"],"sources":["/var/www/html/project/Dash_Vuexy-master/src/views/login/login.vue"],"sourcesContent":["<template>\n  <div class=\"loginpage row m-0 p-5\">   \n   \n   \n  </div>\n</template>\n<script>\nimport { ability } from \"@/ability/defineApilty\";\nimport router from \"@/router\";\nimport { login } from \"@/jsc/loginuser\";\nimport { Store } from \"vuex\";\nimport * as yup from \"yup\";\nimport { Form, Field, ErrorMessage, useField, useForm } from \"vee-validate\";\nexport default {\n  name: \"login\",\n  props: { name },\n  components: {\n    Field,\n    Form,\n    ErrorMessage,\n  },\n  data() {\n    const { handleSubmit } = useForm();\n\n    const onSubmit = handleSubmit((values) => {\n      login(values.email, values.password,this.name)\n        .then((user) => {\n          localStorage.setItem(\"user\", JSON.stringify(user));\n          ability.update(user.ability);\n          router.replace({ path: \"/\" });\n        })\n        .catch((e) => (this.message = \"email or password is incorrect\"));\n    });\n    const { value: email, errorMessage: erroremail } = useField(\n      \"email\",\n\n      yup.string().email().required()\n    );\n    const { value: password, errorMessage: errorpassword } = useField(\n      \"password\",\n\n      yup.string().min(3).required()\n    );\n\n    return {\n      message: \"\",\n      email,\n      password,\n      errorpassword,\n      erroremail,\n      handleSubmit,\n      onSubmit,\n    };\n  },\n  created() {},\n  methods: {\n    async submit() {\n      // console.log(handleSubmit)\n      // login(this.email, this.password)\n      //   .then((user) => {\n      //     localStorage.setItem(\"user\", JSON.stringify(user));\n      //     // updateability(user.position)\n      //     ability.update(user.ability);\n      //     router.replace({ path: \"/\" });\n      //     // timeout()\n      //   })\n      //   .catch((e) => (this.message = \"email or password is incorrect\"));\n      ///////////////////\n      // this.$store\n      //   .dispatch(\"login\", this.user)\n      //   .then((user) => {\n      //     localStorage.setItem(\"user\", JSON.stringify(user));\n      //     // updateability(user.position)\n      //     ability.update(user.ability);\n      //     router.replace({ path: \"/\" });\n      //     // timeout()\n      //   })\n      //   .catch((e) => (this.message = \"email or password is incorrect\"));\n      /////////////////////\n      // this.$store.dispatch(\"login\", this.user)\n      // if(this.$store.state.auth){\n      //   localStorage.setItem('user' ,JSON.stringify(this.$store.state.auth))\n      //   router.replace({name:\"ecommerce\"})\n      // }else{\n      //   this.message = \"email or password is incorrect\"\n      // }\n    },\n    login() {},\n    // validateEmail(value) {\n    //   if (!value) {\n    //     return \"This field is required\";\n    //   }\n    //   const regex = /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i;\n    //   if (!regex.test(value)) {\n    //     return \"This field must be a valid email\";\n    //   }\n\n    //   return true;\n    // },\n  },\n};\n</script>\n<style scoped>\n.LoginForm {\n  margin-left: 7%;\n  margin-top: 15%;\n  width: 100%;\n  \n}\n@media screen and (max-width: 1560px) {\n  .LoginForm {\n    width: 700px;\n    margin-top: 10%;\n  }\n}\n.loginpage {\n  /* background: rgba(128, 128, 128, 0.484); */\n  min-height: 100vh;\n}\na {\n  color: black;\n}\n</style>"],"mappings":";;;EACOA,KAAK,EAAC;AAAuB;;uBAAlCC,mBAAA,CAGM,OAHNC,UAGM"},"metadata":{},"sourceType":"module","externalDependencies":[]}