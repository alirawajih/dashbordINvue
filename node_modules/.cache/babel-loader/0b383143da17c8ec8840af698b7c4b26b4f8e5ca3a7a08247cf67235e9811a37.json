{"ast":null,"code":"import { createElementVNode as _createElementVNode, resolveComponent as _resolveComponent, createVNode as _createVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-61869004\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"chart\"\n};\nconst _hoisted_2 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"text-start p-2 pb-0\",\n  style: {\n    \"font-size\": \"5px\"\n  }\n}, [/*#__PURE__*/_createElementVNode(\"h6\", {\n  style: {\n    \"color\": \"rgba(255, 255, 255, 0.27)\"\n  }\n}, \"Orders\"), /*#__PURE__*/_createElementVNode(\"h4\", {\n  class: \"\"\n}, \"6,24k\")], -1 /* HOISTED */));\nconst _hoisted_3 = {\n  id: \"chart \",\n  class: \"text-black m-2\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_apexchart = _resolveComponent(\"apexchart\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_hoisted_2, _createElementVNode(\"div\", _hoisted_3, [_createVNode(_component_apexchart, {\n    type: \"bar\",\n    height: \"100\",\n    options: _ctx.chartOptions,\n    series: _ctx.series\n  }, null, 8 /* PROPS */, [\"options\", \"series\"])])]);\n}","map":{"version":3,"names":["class","_createElementVNode","style","id","_createElementBlock","_hoisted_1","_hoisted_2","_hoisted_3","_createVNode","_component_apexchart","type","height","options","_ctx","chartOptions","series"],"sources":["/var/www/html/project/Dash_Vuexy-master/src/views/ecommerce/apexchart1.vue"],"sourcesContent":["<template>\n    <div class=\"chart\">\n      <div class=\"text-start p-2 pb-0\" style=\"font-size: 5px\">\n        <h6 style=\"color: rgba(255, 255, 255, 0.27)\">Orders</h6>\n        <h4 class=\" \">6,24k</h4>\n      </div>\n      <div id=\"chart \" class=\"text-black m-2\">\n        <apexchart\n          type=\"bar\"\n          height=\"100\"\n          :options=\"chartOptions\"\n          :series=\"series\"\n        ></apexchart>\n      </div>\n    </div>\n  </template>\n  \n  <script>\n  export default {\n    data: function () {\n      return {\n        series: [\n            {\n              name: 'Q1 Budget',\n              group: 'budget',\n              data: [44000, 55000, 41000, 67000, 22000, 43000]\n            },\n            {\n              name: 'Q1 Actual',\n              group: 'actual',\n              data: [48000, 50000, 40000, 65000, 25000, 40000]\n            },\n            {\n              name: 'Q2 Budget',\n              group: 'budget',\n              data: [13000, 36000, 20000, 8000, 13000, 27000]\n            },\n            {\n              name: 'Q2 Actual',\n              group: 'actual',\n              data: [20000, 40000, 25000, 10000, 12000, 28000]\n            }\n          ],\n          chartOptions: {\n            chart: {\n              type: 'bar',\n              height: 350,\n              stacked: true,\n            },\n            stroke: {\n              width: 1,\n              colors: ['#fff']\n            },\n            dataLabels: {\n              formatter: (val) => {\n                return val / 1000 + 'K'\n              }\n            },\n            plotOptions: {\n              bar: {\n                horizontal: false\n              }\n            },\n            xaxis: {\n              categories: [\n                'Online advertising',\n                'Sales Training',\n                'Print advertising',\n                'Catalogs',\n                'Meetings',\n                'Public relations'\n              ]\n            },\n            fill: {\n              opacity: 1\n            },\n            colors: ['#80c7fd', '#008FFB', '#80f1cb', '#00E396'],\n            yaxis: {\n              labels: {\n                formatter: (val) => {\n                  return val / 1000 + 'K'\n                }\n              }\n            },\n            legend: {\n              position: 'top',\n              horizontalAlign: 'left'\n            }\n          },\n      };\n    },\n  };\n  </script>\n  \n  <style lang=\"scss\" scoped>\n  @import \"../../assets/style_scss/Partials/variables\";\n  @import \"../../assets/style_scss/Partials/mixin\";\n  \n  .chart {\n    @include card;\n    @include font;\n  }\n  </style>\n  "],"mappings":";;;EACSA,KAAK,EAAC;AAAO;gEAChBC,mBAAA,CAGM;EAHDD,KAAK,EAAC,qBAAqB;EAACE,KAAsB,EAAtB;IAAA;EAAA;iBAC/BD,mBAAA,CAAwD;EAApDC,KAAwC,EAAxC;IAAA;EAAA;AAAwC,GAAC,QAAM,G,aACnDD,mBAAA,CAAwB;EAApBD,KAAK,EAAC;AAAG,GAAC,OAAK,E;;EAEhBG,EAAE,EAAC,QAAQ;EAACH,KAAK,EAAC;;;;uBALzBI,mBAAA,CAaM,OAbNC,UAaM,GAZJC,UAGM,EACNL,mBAAA,CAOM,OAPNM,UAOM,GANJC,YAAA,CAKaC,oBAAA;IAJXC,IAAI,EAAC,KAAK;IACVC,MAAM,EAAC,KAAK;IACXC,OAAO,EAAEC,IAAA,CAAAC,YAAY;IACrBC,MAAM,EAAEF,IAAA,CAAAE"},"metadata":{},"sourceType":"module","externalDependencies":[]}