{"ast":null,"code":"\"use strict\";\n\n/*\n * Copyright 2016, Google Inc.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are\n * met:\n *\n *     * Redistributions of source code must retain the above copyright\n * notice, this list of conditions and the following disclaimer.\n *     * Redistributions in binary form must reproduce the above\n * copyright notice, this list of conditions and the following disclaimer\n * in the documentation and/or other materials provided with the\n * distribution.\n *     * Neither the name of Google Inc. nor the names of its\n * contributors may be used to endorse or promote products derived from\n * this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\nrequire(\"core-js/modules/web.immediate.js\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n/**\n * Provides function wrappers that implement page streaming and retrying.\n */\nconst grpc_1 = require(\"grpc\");\nconst GoogleError_1 = require(\"./GoogleError\");\nclass Canceller {\n  /**\n   * Canceller manages callback, API calls, and cancellation\n   * of the API calls.\n   * @param {APICallback=} callback\n   *   The callback to be called asynchronously when the API call\n   *   finishes.\n   * @constructor\n   * @property {APICallback} callback\n   *   The callback function to be called.\n   * @private\n   */\n  constructor(callback) {\n    this.callback = callback;\n    this.completed = false;\n  }\n  /**\n   * Cancels the ongoing promise.\n   */\n  cancel() {\n    if (this.completed) {\n      return;\n    }\n    this.completed = true;\n    if (this.cancelFunc) {\n      this.cancelFunc();\n    } else {\n      const error = new GoogleError_1.GoogleError('cancelled');\n      error.code = grpc_1.status.CANCELLED;\n      this.callback(error);\n    }\n  }\n  /**\n   * Call calls the specified function. Result will be used to fulfill\n   * the promise.\n   *\n   * @param {function(Object, APICallback=)} aFunc\n   *   A function for an API call.\n   * @param {Object} argument\n   *   A request object.\n   */\n  call(aFunc, argument) {\n    if (this.completed) {\n      return;\n    }\n    // tslint:disable-next-line no-any\n    const canceller = aFunc(argument, (...args) => {\n      this.completed = true;\n      setImmediate(this.callback, ...args);\n    });\n    this.cancelFunc = () => canceller.cancel();\n  }\n}\nexports.Canceller = Canceller;\n// tslint:disable-next-line no-any\nclass PromiseCanceller extends Canceller {\n  /**\n   * PromiseCanceller is Canceller, but it holds a promise when\n   * the API call finishes.\n   * @param {Function} PromiseCtor - A constructor for a promise that implements\n   * the ES6 specification of promise.\n   * @constructor\n   * @private\n   */\n  // tslint:disable-next-line variable-name\n  constructor(PromiseCtor) {\n    super();\n    this.promise = new PromiseCtor((resolve, reject) => {\n      this.callback = (err, response, next, rawResponse) => {\n        if (err) {\n          reject(err);\n        } else {\n          resolve([response, next, rawResponse]);\n        }\n      };\n    });\n    this.promise.cancel = () => {\n      this.cancel();\n    };\n  }\n}\nexports.PromiseCanceller = PromiseCanceller;\n/**\n * Updates aFunc so that it gets called with the timeout as its final arg.\n *\n * This converts a function, aFunc, into another function with updated deadline.\n *\n * @private\n *\n * @param {APIFunc} aFunc - a function to be updated.\n * @param {number} timeout - to be added to the original function as it final\n *   positional arg.\n * @param {Object} otherArgs - the additional arguments to be passed to aFunc.\n * @param {Object=} abTests - the A/B testing key/value pairs.\n * @return {function(Object, APICallback)}\n *  the function with other arguments and the timeout.\n */\nfunction addTimeoutArg(aFunc, timeout, otherArgs, abTests) {\n  // TODO: this assumes the other arguments consist of metadata and options,\n  // which is specific to gRPC calls. Remove the hidden dependency on gRPC.\n  return function timeoutFunc(argument, callback) {\n    const now = new Date();\n    const options = otherArgs.options || {};\n    options.deadline = new Date(now.getTime() + timeout);\n    const metadata = otherArgs.metadataBuilder ? otherArgs.metadataBuilder(abTests, otherArgs.headers || {}) : null;\n    return aFunc(argument, metadata, options, callback);\n  };\n}\n/**\n * Creates a function equivalent to aFunc, but that retries on certain\n * exceptions.\n *\n * @private\n *\n * @param {APIFunc} aFunc - A function.\n * @param {RetryOptions} retry - Configures the exceptions upon which the\n *   function eshould retry, and the parameters to the exponential backoff retry\n *   algorithm.\n * @param {Object} otherArgs - the additional arguments to be passed to aFunc.\n * @return {function(Object, APICallback)} A function that will retry.\n */\nfunction retryable(aFunc, retry, otherArgs) {\n  const delayMult = retry.backoffSettings.retryDelayMultiplier;\n  const maxDelay = retry.backoffSettings.maxRetryDelayMillis;\n  const timeoutMult = retry.backoffSettings.rpcTimeoutMultiplier;\n  const maxTimeout = retry.backoffSettings.maxRpcTimeoutMillis;\n  let delay = retry.backoffSettings.initialRetryDelayMillis;\n  let timeout = retry.backoffSettings.initialRpcTimeoutMillis;\n  /**\n   * Equivalent to ``aFunc``, but retries upon transient failure.\n   *\n   * Retrying is done through an exponential backoff algorithm configured\n   * by the options in ``retry``.\n   * @param {Object} argument The request object.\n   * @param {APICallback} callback The callback.\n   * @return {function()} cancel function.\n   */\n  return function retryingFunc(argument, callback) {\n    let canceller;\n    let timeoutId;\n    let now = new Date();\n    let deadline;\n    if (retry.backoffSettings.totalTimeoutMillis) {\n      deadline = now.getTime() + retry.backoffSettings.totalTimeoutMillis;\n    }\n    let retries = 0;\n    const maxRetries = retry.backoffSettings.maxRetries;\n    // TODO: define A/B testing values for retry behaviors.\n    /** Repeat the API call as long as necessary. */\n    function repeat() {\n      timeoutId = null;\n      if (deadline && now.getTime() >= deadline) {\n        const error = new GoogleError_1.GoogleError('Retry total timeout exceeded before any response was received');\n        error.code = grpc_1.status.DEADLINE_EXCEEDED;\n        callback(error);\n        return;\n      }\n      if (retries && retries >= maxRetries) {\n        const error = new GoogleError_1.GoogleError('Exceeded maximum number of retries before any ' + 'response was received');\n        error.code = grpc_1.status.DEADLINE_EXCEEDED;\n        callback(error);\n        return;\n      }\n      retries++;\n      const toCall = addTimeoutArg(aFunc, timeout, otherArgs);\n      canceller = toCall(argument, (err, response, next, rawResponse) => {\n        if (!err) {\n          callback(null, response, next, rawResponse);\n          return;\n        }\n        canceller = null;\n        if (retry.retryCodes.indexOf(err.code) < 0) {\n          err.note = 'Exception occurred in retry method that was ' + 'not classified as transient';\n          callback(err);\n        } else {\n          const toSleep = Math.random() * delay;\n          timeoutId = setTimeout(() => {\n            now = new Date();\n            delay = Math.min(delay * delayMult, maxDelay);\n            timeout = Math.min(timeout * timeoutMult, maxTimeout, deadline - now.getTime());\n            repeat();\n          }, toSleep);\n        }\n      });\n    }\n    if (maxRetries && deadline) {\n      const error = new GoogleError_1.GoogleError('Cannot set both totalTimeoutMillis and maxRetries ' + 'in backoffSettings.');\n      error.code = grpc_1.status.INVALID_ARGUMENT;\n      callback(error);\n    } else {\n      repeat();\n    }\n    return {\n      cancel() {\n        if (timeoutId) {\n          clearTimeout(timeoutId);\n        }\n        if (canceller) {\n          canceller.cancel();\n        } else {\n          const error = new GoogleError_1.GoogleError('cancelled');\n          error.code = grpc_1.status.CANCELLED;\n          callback(error);\n        }\n      }\n    };\n  };\n}\n/**\n * Creates an API caller for normal methods.\n *\n * @private\n * @constructor\n */\nclass NormalApiCaller {\n  init(settings, callback) {\n    if (callback) {\n      return new Canceller(callback);\n    }\n    return new PromiseCanceller(settings.promise);\n  }\n  wrap(func) {\n    return func;\n  }\n  call(apiCall, argument, settings, canceller) {\n    canceller.call(apiCall, argument);\n  }\n  fail(canceller, err) {\n    canceller.callback(err);\n  }\n  result(canceller) {\n    if (canceller.promise) {\n      return canceller.promise;\n    }\n    return;\n  }\n}\nexports.NormalApiCaller = NormalApiCaller;\n/**\n * Converts an rpc call into an API call governed by the settings.\n *\n * In typical usage, `func` will be a promsie to a callable used to make an rpc\n * request. This will mostly likely be a bound method from a request stub used\n * to make an rpc call. It is not a direct function but a Promise instance,\n * because of its asynchronism (typically, obtaining the auth information).\n *\n * The result is a function which manages the API call with the given settings\n * and the options on the invocation.\n *\n * @param {Promise.<APIFunc>} funcWithAuth - is a promise to be used to make\n *   a bare rpc call. This is a Promise instead of a bare function because\n *   the rpc call will be involeved with asynchronous authentications.\n * @param {CallSettings} settings - provides the settings for this call\n * @param {Object=} optDescriptor - optionally specify the descriptor for\n *   the method call.\n * @return {APICall} func - a bound method on a request stub used\n *   to make an rpc call.\n */\nfunction createApiCall(funcWithAuth, settings,\n// tslint:disable-next-line no-any\noptDescriptor) {\n  const apiCaller = optDescriptor ? optDescriptor.apiCaller(settings) : new NormalApiCaller();\n  return function apiCallInner(request, callOptions, callback) {\n    const thisSettings = settings.merge(callOptions);\n    const status = apiCaller.init(thisSettings, callback);\n    funcWithAuth.then(func => {\n      func = apiCaller.wrap(func);\n      const retry = thisSettings.retry;\n      if (retry && retry.retryCodes && retry.retryCodes.length > 0) {\n        return retryable(func, thisSettings.retry, thisSettings.otherArgs);\n      }\n      return addTimeoutArg(func, thisSettings.timeout, thisSettings.otherArgs);\n    }).then(apiCall => {\n      apiCaller.call(apiCall, request, thisSettings, status);\n    }).catch(err => {\n      apiCaller.fail(status, err);\n    });\n    return apiCaller.result(status);\n  };\n}\nexports.createApiCall = createApiCall;","map":{"version":3,"names":["require","grpc_1","GoogleError_1","Canceller","constructor","callback","completed","cancel","cancelFunc","error","GoogleError","code","status","CANCELLED","call","aFunc","argument","canceller","args","setImmediate","exports","PromiseCanceller","PromiseCtor","promise","resolve","reject","err","response","next","rawResponse","addTimeoutArg","timeout","otherArgs","abTests","timeoutFunc","now","Date","options","deadline","getTime","metadata","metadataBuilder","headers","retryable","retry","delayMult","backoffSettings","retryDelayMultiplier","maxDelay","maxRetryDelayMillis","timeoutMult","rpcTimeoutMultiplier","maxTimeout","maxRpcTimeoutMillis","delay","initialRetryDelayMillis","initialRpcTimeoutMillis","retryingFunc","timeoutId","totalTimeoutMillis","retries","maxRetries","repeat","DEADLINE_EXCEEDED","toCall","retryCodes","indexOf","note","toSleep","Math","random","setTimeout","min","INVALID_ARGUMENT","clearTimeout","NormalApiCaller","init","settings","wrap","func","apiCall","fail","result","createApiCall","funcWithAuth","optDescriptor","apiCaller","apiCallInner","request","callOptions","thisSettings","merge","then","length","catch"],"sources":["../../src/apiCallable.ts"],"sourcesContent":[null],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}