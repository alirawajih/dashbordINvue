{"ast":null,"code":"import { ability } from \"@/ability/defineApilty\";\nimport router from \"@/router\";\nimport { login } from \"@/jsc/loginuser\";\nimport { Store } from \"vuex\";\nimport * as yup from \"yup\";\nimport { Form, Field, ErrorMessage, useField, useForm } from \"vee-validate\";\nexport default {\n  name: \"login\",\n  components: {\n    Field,\n    Form,\n    ErrorMessage\n  },\n  data() {\n    // const { handleSubmit } = useForm();\n\n    // const onSubmit = handleSubmit((values) => {\n    //   console.log(values)\n    //   login(values.email, values.password)\n    //     .then((user) => {\n    //       localStorage.setItem(\"user\", JSON.stringify(user));\n    //       ability.update(user.ability);\n    //       router.replace({ path: \"/\" });\n    //     })\n    //     .catch((e) => (this.message = \"email or password is incorrect\"));\n    // });\n    // const { value: email, errorMessage: erroremail } = useField(\n    //   \"email\",\n\n    //   yup.string().email().required()\n    // );\n    // const { value: password, errorMessage: errorpassword } = useField(\n    //   \"password\",\n\n    //   yup.string().min(3).required()\n    // );\n\n    return {\n      message: \"\",\n      email,\n      password,\n      errorpassword,\n      erroremail,\n      handleSubmit,\n      onSubmit\n    };\n  },\n  created() {},\n  methods: {\n    async submit() {\n      console.log(handleSubmit);\n      login(this.email, this.password).then(user => {\n        localStorage.setItem(\"user\", JSON.stringify(user));\n        // updateability(user.position)\n        ability.update(user.ability);\n        router.replace({\n          path: \"/\"\n        });\n        // timeout()\n      }).catch(e => this.message = \"email or password is incorrect\");\n      /////////////////\n      this.$store.dispatch(\"login\", this.user).then(user => {\n        localStorage.setItem(\"user\", JSON.stringify(user));\n        // updateability(user.position)\n        ability.update(user.ability);\n        router.replace({\n          path: \"/\"\n        });\n        // timeout()\n      }).catch(e => this.message = \"email or password is incorrect\");\n      ///////////////////\n      this.$store.dispatch(\"login\", this.user);\n      if (this.$store.state.auth) {\n        localStorage.setItem('user', JSON.stringify(this.$store.state.auth));\n        router.replace({\n          name: \"ecommerce\"\n        });\n      } else {\n        this.message = \"email or password is incorrect\";\n      }\n    },\n    login() {}\n    // validateEmail(value) {\n    //   if (!value) {\n    //     return \"This field is required\";\n    //   }\n    //   const regex = /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i;\n    //   if (!regex.test(value)) {\n    //     return \"This field must be a valid email\";\n    //   }\n\n    //   return true;\n    // },\n  }\n};","map":{"version":3,"names":["ability","router","login","Store","yup","Form","Field","ErrorMessage","useField","useForm","name","components","data","message","email","password","errorpassword","erroremail","handleSubmit","onSubmit","created","methods","submit","console","log","then","user","localStorage","setItem","JSON","stringify","update","replace","path","catch","e","$store","dispatch","state","auth"],"sources":["/var/www/html/project/Dash_Vuexy-master/src/views/login/login.vue"],"sourcesContent":["<template>\n  <div class=\"row  m-0 p-5\" style=\"background: rgba(128, 128, 128, 0.484); height: 100vh;\" >\n    <div class=\"col-xl-9 col-md-12 col-sm-12 d-flex justify-content-center\"> \n      <img src=\"../../../src/assets/images/pages/login-v2-dark.svg\" class=\"img-fluid\" alt=\"...\">\n    </div>\n    <div class=\"col-xl-3 col-md-12 col-sm-12 d-flex justify-content-center\" >\n <main class=\" LoginForm  \" >\n      <form @submit.prevent=\"onSubmit\">\n        <div class=\"alert alert-danger\" role=\"alert\" v-if=\"message\">\n          {{ message }}\n        </div>\n\n        <h1 class=\"h3 mb-3 fw-normal text-dark\">Please sign in</h1>\n        <label for=\"email\">Email address</label>\n        <div class=\"\">\n          <input\n            v-model=\"email\"\n            name=\"email\"\n            id=\"email\"\n            class=\"form-control\"\n            type=\"email\"\n\n          />\n          <span class=\"p-error text-danger\"> {{ erroremail }}</span>\n        </div>\n        <label for=\"Password\">Password</label>\n        <div class=\"\">\n          <input\n            v-model=\"password\"\n            name=\"password\"\n            id=\"password\"\n            class=\"form-control\"\n            type=\"password\"\n          />\n          <span class=\"p-error text-danger\"> {{ errorpassword }}</span>\n        </div>\n\n        <div class=\"checkbox mb-3 text-dark\">\n          <label>\n            <input type=\"checkbox\" name=\"checkbox\" value=\"remember-me\" />\n            Remember me\n          </label>\n        </div>\n        <button class=\"w-100 btn btn-lg btn-primary\" type=\"submit\">\n          Sign in\n        </button>\n      </form>\n    </main>\n    </div>\n\n</div>\n   \n  \n</template>\n<script>\nimport { ability } from \"@/ability/defineApilty\";\nimport router from \"@/router\";\nimport { login } from \"@/jsc/loginuser\";\nimport { Store } from \"vuex\";\nimport * as yup from \"yup\";\nimport { Form, Field, ErrorMessage, useField, useForm } from \"vee-validate\";\nexport default {\n  name: \"login\",\n\n  components: {\n    Field,\n    Form,\n    ErrorMessage,\n  },\n  data() {\n    // const { handleSubmit } = useForm();\n\n    // const onSubmit = handleSubmit((values) => {\n    //   console.log(values)\n    //   login(values.email, values.password)\n    //     .then((user) => {\n    //       localStorage.setItem(\"user\", JSON.stringify(user));\n    //       ability.update(user.ability);\n    //       router.replace({ path: \"/\" });\n    //     })\n    //     .catch((e) => (this.message = \"email or password is incorrect\"));\n    // });\n    // const { value: email, errorMessage: erroremail } = useField(\n    //   \"email\",\n\n    //   yup.string().email().required()\n    // );\n    // const { value: password, errorMessage: errorpassword } = useField(\n    //   \"password\",\n\n    //   yup.string().min(3).required()\n    // );\n\n    return {\n      message: \"\",\n      email,\n      password,\n      errorpassword,\n      erroremail,\n      handleSubmit,\n      onSubmit,\n    };\n  },\n  created() {},\n  methods: {\n    async submit() {\n      console.log(handleSubmit)\n      login(this.email, this.password)\n        .then((user) => {\n          localStorage.setItem(\"user\", JSON.stringify(user));\n          // updateability(user.position)\n          ability.update(user.ability);\n          router.replace({ path: \"/\" });\n          // timeout()\n        })\n        .catch((e) => (this.message = \"email or password is incorrect\"));\n      /////////////////\n      this.$store\n        .dispatch(\"login\", this.user)\n        .then((user) => {\n          localStorage.setItem(\"user\", JSON.stringify(user));\n          // updateability(user.position)\n          ability.update(user.ability);\n          router.replace({ path: \"/\" });\n          // timeout()\n        })\n        .catch((e) => (this.message = \"email or password is incorrect\"));\n      ///////////////////\n      this.$store.dispatch(\"login\", this.user)\n      if(this.$store.state.auth){\n        localStorage.setItem('user' ,JSON.stringify(this.$store.state.auth))\n        router.replace({name:\"ecommerce\"})\n      }else{\n        this.message = \"email or password is incorrect\"\n      }\n    },\n    login() {},\n    // validateEmail(value) {\n    //   if (!value) {\n    //     return \"This field is required\";\n    //   }\n    //   const regex = /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i;\n    //   if (!regex.test(value)) {\n    //     return \"This field must be a valid email\";\n    //   }\n\n    //   return true;\n    // },\n  },\n};\n</script>\n<style scoped>\n\n.LoginForm{\nmargin-left: 7%;\nmargin-top: 75%;\nwidth: 230px;\n}\n@media screen and (max-width: 1560px ) {\n .LoginForm{\n    width: 700px;\n    margin-top: 10%;\n  }\n  }\n\n\n</style>"],"mappings":"AAuDA,SAASA,OAAM,QAAS,wBAAwB;AAChD,OAAOC,MAAK,MAAO,UAAU;AAC7B,SAASC,KAAI,QAAS,iBAAiB;AACvC,SAASC,KAAI,QAAS,MAAM;AAC5B,OAAO,KAAKC,GAAE,MAAO,KAAK;AAC1B,SAASC,IAAI,EAAEC,KAAK,EAAEC,YAAY,EAAEC,QAAQ,EAAEC,OAAM,QAAS,cAAc;AAC3E,eAAe;EACbC,IAAI,EAAE,OAAO;EAEbC,UAAU,EAAE;IACVL,KAAK;IACLD,IAAI;IACJE;EACF,CAAC;EACDK,IAAIA,CAAA,EAAG;IACL;;IAEA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;;IAEA;IACA;IACA;IACA;;IAEA;IACA;;IAEA,OAAO;MACLC,OAAO,EAAE,EAAE;MACXC,KAAK;MACLC,QAAQ;MACRC,aAAa;MACbC,UAAU;MACVC,YAAY;MACZC;IACF,CAAC;EACH,CAAC;EACDC,OAAOA,CAAA,EAAG,CAAC,CAAC;EACZC,OAAO,EAAE;IACP,MAAMC,MAAMA,CAAA,EAAG;MACbC,OAAO,CAACC,GAAG,CAACN,YAAY;MACxBhB,KAAK,CAAC,IAAI,CAACY,KAAK,EAAE,IAAI,CAACC,QAAQ,EAC5BU,IAAI,CAAEC,IAAI,IAAK;QACdC,YAAY,CAACC,OAAO,CAAC,MAAM,EAAEC,IAAI,CAACC,SAAS,CAACJ,IAAI,CAAC,CAAC;QAClD;QACA1B,OAAO,CAAC+B,MAAM,CAACL,IAAI,CAAC1B,OAAO,CAAC;QAC5BC,MAAM,CAAC+B,OAAO,CAAC;UAAEC,IAAI,EAAE;QAAI,CAAC,CAAC;QAC7B;MACF,CAAC,EACAC,KAAK,CAAEC,CAAC,IAAM,IAAI,CAACtB,OAAM,GAAI,gCAAiC,CAAC;MAClE;MACA,IAAI,CAACuB,MAAK,CACPC,QAAQ,CAAC,OAAO,EAAE,IAAI,CAACX,IAAI,EAC3BD,IAAI,CAAEC,IAAI,IAAK;QACdC,YAAY,CAACC,OAAO,CAAC,MAAM,EAAEC,IAAI,CAACC,SAAS,CAACJ,IAAI,CAAC,CAAC;QAClD;QACA1B,OAAO,CAAC+B,MAAM,CAACL,IAAI,CAAC1B,OAAO,CAAC;QAC5BC,MAAM,CAAC+B,OAAO,CAAC;UAAEC,IAAI,EAAE;QAAI,CAAC,CAAC;QAC7B;MACF,CAAC,EACAC,KAAK,CAAEC,CAAC,IAAM,IAAI,CAACtB,OAAM,GAAI,gCAAiC,CAAC;MAClE;MACA,IAAI,CAACuB,MAAM,CAACC,QAAQ,CAAC,OAAO,EAAE,IAAI,CAACX,IAAI;MACvC,IAAG,IAAI,CAACU,MAAM,CAACE,KAAK,CAACC,IAAI,EAAC;QACxBZ,YAAY,CAACC,OAAO,CAAC,MAAK,EAAGC,IAAI,CAACC,SAAS,CAAC,IAAI,CAACM,MAAM,CAACE,KAAK,CAACC,IAAI,CAAC;QACnEtC,MAAM,CAAC+B,OAAO,CAAC;UAACtB,IAAI,EAAC;QAAW,CAAC;MACnC,CAAC,MAAI;QACH,IAAI,CAACG,OAAM,GAAI,gCAA+B;MAChD;IACF,CAAC;IACDX,KAAKA,CAAA,EAAG,CAAC;IACT;IACA;IACA;IACA;IACA;IACA;IACA;IACA;;IAEA;IACA;EACF;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}