{"ast":null,"code":"import { vModelText as _vModelText, createElementVNode as _createElementVNode, withDirectives as _withDirectives, toDisplayString as _toDisplayString, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"form-floating\"\n};\nconst _hoisted_2 = {\n  class: \"p-error text-danger\"\n};\nconst _hoisted_3 = {\n  class: \"form-floating\"\n};\nconst _hoisted_4 = {\n  class: \"p-error text-danger\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(_Fragment, null, [_createElementVNode(\"div\", _hoisted_1, [_withDirectives(_createElementVNode(\"input\", {\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.email = $event),\n    class: \"form-control\",\n    name: \"email\",\n    type: \"email\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.email]]), _createElementVNode(\"span\", _hoisted_2, _toDisplayString($data.emailerr), 1 /* TEXT */)]), _createElementVNode(\"div\", _hoisted_3, [_withDirectives(_createElementVNode(\"input\", {\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $data.password = $event),\n    class: \"form-control\",\n    name: \"password\",\n    type: \"password\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.password]]), _createElementVNode(\"span\", _hoisted_4, _toDisplayString($data.passworderr), 1 /* TEXT */)])], 64 /* STABLE_FRAGMENT */);\n}","map":{"version":3,"names":["class","_createElementVNode","_hoisted_1","$data","email","$event","name","type","_hoisted_2","_toDisplayString","emailerr","_hoisted_3","password","_hoisted_4","passworderr"],"sources":["/var/www/html/dashbord_vue_master/src/components/input/inputVal.vue"],"sourcesContent":["<!-- <script setup>\n// MyInputComponent.vue\nimport { useField } from 'vee-validate';\n\nconst props = defineProps({\n  name: String\n})\n// Validator function\nconst isRequired = value => (value ? true : 'This field is required');\n\nconst { value, errorMessage } = useField(props.name, isRequired);\n\n</script> -->\n<script>\nimport { useField } from \"vee-validate\";\nimport * as yup from \"yup\";\nimport { toRef } from \"vue\";\nexport default {\n  data() {\n    const { email, emailerr } = useField(\n      \"email\",\n      yup.string().email().required()\n    );\n    const { password, passworderr } = useField(\n      \"password\",\n      yup.string().min(3).required()\n    );\n\n    return {\n      //  schema: yup.object({\n      //         email: yup.string().email().required(),\n      //         password: yup.string().min(3).required(),\n      //       }),\n      email,\n      password,\n      emailerr,\n      passworderr,\n    };\n  },\n};\n</script>\n<template>\n  <div class=\"form-floating\">\n    <input v-model=\"email\" class=\"form-control\" name=\"email\" type=\"email\" />\n    <span class=\"p-error text-danger\"> {{ emailerr }}</span>\n  </div>\n  <div class=\"form-floating\">\n    <input\n      v-model=\"password\"\n      class=\"form-control\"\n      name=\"password\"\n      type=\"password\"\n    />\n    <span class=\"p-error text-danger\">{{ passworderr }}</span>\n  </div>\n</template>"],"mappings":";;EA0COA,KAAK,EAAC;AAAe;;EAElBA,KAAK,EAAC;AAAqB;;EAE9BA,KAAK,EAAC;AAAe;;EAOlBA,KAAK,EAAC;AAAqB;;6DAXnCC,mBAAA,CAGM,OAHNC,UAGM,G,gBAFJD,mBAAA,CAAwE;+DAAxDE,KAAA,CAAAC,KAAK,GAAAC,MAAA;IAAEL,KAAK,EAAC,cAAc;IAACM,IAAI,EAAC,OAAO;IAACC,IAAI,EAAC;iDAA9CJ,KAAA,CAAAC,KAAK,E,GACrBH,mBAAA,CAAwD,QAAxDO,UAAwD,EAAAC,gBAAA,CAAlBN,KAAA,CAAAO,QAAQ,iB,GAEhDT,mBAAA,CAQM,OARNU,UAQM,G,gBAPJV,mBAAA,CAKE;+DAJSE,KAAA,CAAAS,QAAQ,GAAAP,MAAA;IACjBL,KAAK,EAAC,cAAc;IACpBM,IAAI,EAAC,UAAU;IACfC,IAAI,EAAC;iDAHIJ,KAAA,CAAAS,QAAQ,E,GAKnBX,mBAAA,CAA0D,QAA1DY,UAA0D,EAAAJ,gBAAA,CAArBN,KAAA,CAAAW,WAAW,iB"},"metadata":{},"sourceType":"module","externalDependencies":[]}