{"ast":null,"code":"\"use strict\";\n\n/*\n * Copyright 2016, Google Inc.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are\n * met:\n *\n *     * Redistributions of source code must retain the above copyright\n * notice, this list of conditions and the following disclaimer.\n *     * Redistributions in binary form must reproduce the above\n * copyright notice, this list of conditions and the following disclaimer\n * in the documentation and/or other materials provided with the\n * distribution.\n *     * Neither the name of Google Inc. nor the names of its\n * contributors may be used to endorse or promote products derived from\n * this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\nrequire(\"core-js/modules/es.array.push.js\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n/**\n * Provides behavior that supports request bundling.\n */\nconst at = require(\"lodash.at\");\nconst grpc_1 = require(\"grpc\");\nconst apiCallable_1 = require(\"./apiCallable\");\nconst GoogleError_1 = require(\"./GoogleError\");\nconst warnings_1 = require(\"./warnings\");\n/**\n * A function which does nothing. Used for an empty cancellation funciton.\n * @private\n */\nfunction noop() {}\n/**\n * Compute the identifier of the `obj`. The objects of the same ID\n * will be bundled together.\n *\n * @param {Object} obj - The request object.\n * @param {String[]} discriminatorFields - The array of field names.\n *   A field name may include '.' as a separator, which is used to\n *   indicate object traversal.\n * @return {String|undefined} - the identifier string, or undefined if any\n *   discriminator.\n *   fields do not exist.\n */\nfunction computeBundleId(obj, discriminatorFields) {\n  const ids = [];\n  let hasIds = false;\n  for (let i = 0; i < discriminatorFields.length; ++i) {\n    const id = at(obj, discriminatorFields[i])[0];\n    if (id === undefined) {\n      ids.push(null);\n    } else {\n      hasIds = true;\n      ids.push(id);\n    }\n  }\n  if (!hasIds) {\n    return undefined;\n  }\n  return JSON.stringify(ids);\n}\nexports.computeBundleId = computeBundleId;\n/**\n * Creates a deep copy of the object with the consideration of subresponse\n * fields for bundling.\n *\n * @param {Object} obj - The source object.\n * @param {Object?} subresponseInfo - The information to copy the subset of\n *   the field for the response. Do nothing if it's null.\n * @param {String} subresponseInfo.field - The field name.\n * @param {number} subresponseInfo.start - The offset where the copying\n *   element should starts with.\n * @param {number} subresponseInfo.end - The ending index where the copying\n *   region of the elements ends.\n * @return {Object} The copied object.\n * @private\n */\nfunction deepCopyForResponse(\n// tslint:disable-next-line no-any\nobj, subresponseInfo) {\n  // tslint:disable-next-line no-any\n  let result;\n  if (obj === null) {\n    return null;\n  }\n  if (obj === undefined) {\n    return undefined;\n  }\n  if (Array.isArray(obj)) {\n    result = [];\n    obj.forEach(element => {\n      result.push(deepCopyForResponse(element, null));\n    });\n    return result;\n  }\n  // Some objects (such as ByteBuffer) have copy method.\n  if (obj.copy !== undefined) {\n    return obj.copy();\n  }\n  // ArrayBuffer should be copied through slice().\n  if (obj instanceof ArrayBuffer) {\n    return obj.slice(0);\n  }\n  if (typeof obj === 'object') {\n    result = {};\n    Object.keys(obj).forEach(key => {\n      if (subresponseInfo && key === subresponseInfo.field && Array.isArray(obj[key])) {\n        // Note that subresponses are not deep-copied. This is safe because\n        // those subresponses are not shared among callbacks.\n        result[key] = obj[key].slice(subresponseInfo.start, subresponseInfo.end);\n      } else {\n        result[key] = deepCopyForResponse(obj[key], null);\n      }\n    });\n    return result;\n  }\n  return obj;\n}\nexports.deepCopyForResponse = deepCopyForResponse;\nclass Task {\n  /**\n   * A task coordinates the execution of a single bundle.\n   *\n   * @param {function} apiCall - The function to conduct calling API.\n   * @param {Object} bundlingRequest - The base request object to be used\n   *   for the actual API call.\n   * @param {string} bundledField - The name of the field in bundlingRequest\n   *   to be bundled.\n   * @param {string=} subresponseField - The name of the field in the response\n   *   to be passed to the callback.\n   * @constructor\n   * @private\n   */\n  constructor(apiCall, bundlingRequest, bundledField, subresponseField) {\n    this._apiCall = apiCall;\n    this._request = bundlingRequest;\n    this._bundledField = bundledField;\n    this._subresponseField = subresponseField;\n    this._data = [];\n  }\n  /**\n   * Returns the number of elements in a task.\n   * @return {number} The number of elements.\n   */\n  getElementCount() {\n    let count = 0;\n    for (let i = 0; i < this._data.length; ++i) {\n      count += this._data[i].elements.length;\n    }\n    return count;\n  }\n  /**\n   * Returns the total byte size of the elements in a task.\n   * @return {number} The byte size.\n   */\n  getRequestByteSize() {\n    let size = 0;\n    for (let i = 0; i < this._data.length; ++i) {\n      size += this._data[i].bytes;\n    }\n    return size;\n  }\n  /**\n   * Invokes the actual API call with current elements.\n   * @return {string[]} - the list of ids for invocations to be run.\n   */\n  run() {\n    if (this._data.length === 0) {\n      return [];\n    }\n    const request = this._request;\n    const elements = [];\n    const ids = [];\n    for (let i = 0; i < this._data.length; ++i) {\n      elements.push.apply(elements, this._data[i].elements);\n      ids.push(this._data[i].callback.id);\n    }\n    request[this._bundledField] = elements;\n    const self = this;\n    this.callCanceller = this._apiCall(request, (err, response) => {\n      const responses = [];\n      if (err) {\n        self._data.forEach(() => {\n          responses.push(null);\n        });\n      } else {\n        let subresponseInfo = null;\n        if (self._subresponseField) {\n          subresponseInfo = {\n            field: self._subresponseField,\n            start: 0\n          };\n        }\n        self._data.forEach(data => {\n          if (subresponseInfo) {\n            subresponseInfo.end = subresponseInfo.start + data.elements.length;\n          }\n          responses.push(deepCopyForResponse(response, subresponseInfo));\n          if (subresponseInfo) {\n            subresponseInfo.start = subresponseInfo.end;\n          }\n        });\n      }\n      for (let i = 0; i < self._data.length; ++i) {\n        if (self._data[i].cancelled) {\n          const error = new GoogleError_1.GoogleError('cancelled');\n          error.code = grpc_1.status.CANCELLED;\n          self._data[i].callback(error);\n        } else {\n          self._data[i].callback(err, responses[i]);\n        }\n      }\n    });\n    return ids;\n  }\n  /**\n   * Appends the list of elements into the task.\n   * @param {Object[]} elements - the new list of elements.\n   * @param {number} bytes - the byte size required to encode elements in the API.\n   * @param {APICallback} callback - the callback of the method call.\n   */\n  extend(elements, bytes, callback) {\n    this._data.push({\n      elements,\n      bytes,\n      callback\n    });\n  }\n  /**\n   * Cancels a part of elements.\n   * @param {string} id - The identifier of the part of elements.\n   * @return {boolean} Whether the entire task will be canceled or not.\n   */\n  cancel(id) {\n    if (this.callCanceller) {\n      let allCancelled = true;\n      this._data.forEach(d => {\n        if (d.callback.id === id) {\n          d.cancelled = true;\n        }\n        if (!d.cancelled) {\n          allCancelled = false;\n        }\n      });\n      if (allCancelled) {\n        this.callCanceller.cancel();\n      }\n      return allCancelled;\n    }\n    for (let i = 0; i < this._data.length; ++i) {\n      if (this._data[i].callback.id === id) {\n        const error = new GoogleError_1.GoogleError('cancelled');\n        error.code = grpc_1.status.CANCELLED;\n        this._data[i].callback(error);\n        this._data.splice(i, 1);\n        break;\n      }\n    }\n    return this._data.length === 0;\n  }\n}\nexports.Task = Task;\nclass BundleExecutor {\n  /**\n   * Organizes requests for an api service that requires to bundle them.\n   *\n   * @param {BundleOptions} bundleOptions - configures strategy this instance\n   *   uses when executing bundled functions.\n   * @param {BundleDescriptor} bundleDescriptor - the description of the bundling.\n   * @constructor\n   */\n  constructor(bundleOptions, bundleDescriptor) {\n    this._options = bundleOptions;\n    this._descriptor = bundleDescriptor;\n    this._tasks = {};\n    this._timers = {};\n    this._invocations = {};\n    this._invocationId = 0;\n  }\n  /**\n   * Schedule a method call.\n   *\n   * @param {function} apiCall - the function for an API call.\n   * @param {Object} request - the request object to be bundled with others.\n   * @param {APICallback} callback - the callback to be called when the method finished.\n   * @return {function()} - the function to cancel the scheduled invocation.\n   */\n  schedule(apiCall, request, callback) {\n    const bundleId = computeBundleId(request, this._descriptor.requestDiscriminatorFields);\n    callback = callback || noop;\n    if (bundleId === undefined) {\n      warnings_1.warn('bundling_schedule_bundleid_undefined', 'The request does not have enough information for request bundling. ' + `Invoking immediately. Request: ${JSON.stringify(request)} ` + `discriminator fields: ${this._descriptor.requestDiscriminatorFields}`);\n      return apiCall(request, callback);\n    }\n    if (request[this._descriptor.bundledField] === undefined) {\n      warnings_1.warn('bundling_no_bundled_field', `Request does not contain field ${this._descriptor.bundledField} that must present for bundling. ` + `Invoking immediately. Request: ${JSON.stringify(request)}`);\n      return apiCall(request, callback);\n    }\n    if (!(bundleId in this._tasks)) {\n      this._tasks[bundleId] = new Task(apiCall, request, this._descriptor.bundledField, this._descriptor.subresponseField);\n    }\n    let task = this._tasks[bundleId];\n    callback.id = String(this._invocationId++);\n    this._invocations[callback.id] = bundleId;\n    const bundledField = request[this._descriptor.bundledField];\n    const elementCount = bundledField.length;\n    let requestBytes = 0;\n    const self = this;\n    bundledField.forEach(obj => {\n      requestBytes += this._descriptor.byteLengthFunction(obj);\n    });\n    const countLimit = this._options.elementCountLimit || 0;\n    const byteLimit = this._options.requestByteLimit || 0;\n    if (countLimit > 0 && elementCount > countLimit || byteLimit > 0 && requestBytes >= byteLimit) {\n      let message;\n      if (countLimit > 0 && elementCount > countLimit) {\n        message = 'The number of elements ' + elementCount + ' exceeds the limit ' + this._options.elementCountLimit;\n      } else {\n        message = 'The required bytes ' + requestBytes + ' exceeds the limit ' + this._options.requestByteLimit;\n      }\n      const error = new GoogleError_1.GoogleError(message);\n      error.code = grpc_1.status.INVALID_ARGUMENT;\n      callback(error);\n      return {\n        cancel: noop\n      };\n    }\n    const existingCount = task.getElementCount();\n    const existingBytes = task.getRequestByteSize();\n    if (countLimit > 0 && elementCount + existingCount >= countLimit || byteLimit > 0 && requestBytes + existingBytes >= byteLimit) {\n      this._runNow(bundleId);\n      this._tasks[bundleId] = new Task(apiCall, request, this._descriptor.bundledField, this._descriptor.subresponseField);\n      task = this._tasks[bundleId];\n    }\n    task.extend(bundledField, requestBytes, callback);\n    const ret = {\n      cancel() {\n        self._cancel(callback.id);\n      }\n    };\n    const countThreshold = this._options.elementCountThreshold || 0;\n    const sizeThreshold = this._options.requestByteThreshold || 0;\n    if (countThreshold > 0 && task.getElementCount() >= countThreshold || sizeThreshold > 0 && task.getRequestByteSize() >= sizeThreshold) {\n      this._runNow(bundleId);\n      return ret;\n    }\n    if (!(bundleId in this._timers) && this._options.delayThreshold > 0) {\n      this._timers[bundleId] = setTimeout(() => {\n        delete this._timers[bundleId];\n        this._runNow(bundleId);\n      }, this._options.delayThreshold);\n    }\n    return ret;\n  }\n  /**\n   * Clears scheduled timeout if it exists.\n   *\n   * @param {String} bundleId - the id for the task whose timeout needs to be\n   *   cleared.\n   * @private\n   */\n  _maybeClearTimeout(bundleId) {\n    if (bundleId in this._timers) {\n      const timerId = this._timers[bundleId];\n      delete this._timers[bundleId];\n      clearTimeout(timerId);\n    }\n  }\n  /**\n   * Cancels an event.\n   *\n   * @param {String} id - The id for the event in the task.\n   * @private\n   */\n  _cancel(id) {\n    if (!(id in this._invocations)) {\n      return;\n    }\n    const bundleId = this._invocations[id];\n    if (!(bundleId in this._tasks)) {\n      return;\n    }\n    const task = this._tasks[bundleId];\n    delete this._invocations[id];\n    if (task.cancel(id)) {\n      this._maybeClearTimeout(bundleId);\n      delete this._tasks[bundleId];\n    }\n  }\n  /**\n   * Invokes a task.\n   *\n   * @param {String} bundleId - The id for the task.\n   * @private\n   */\n  _runNow(bundleId) {\n    if (!(bundleId in this._tasks)) {\n      warnings_1.warn('bundle_runnow_bundleid_unknown', `No such bundleid: ${bundleId}`);\n      return;\n    }\n    this._maybeClearTimeout(bundleId);\n    const task = this._tasks[bundleId];\n    delete this._tasks[bundleId];\n    task.run().forEach(id => {\n      delete this._invocations[id];\n    });\n  }\n}\nexports.BundleExecutor = BundleExecutor;\nclass Bundleable extends apiCallable_1.NormalApiCaller {\n  /**\n   * Creates an API caller that bundles requests.\n   *\n   * @private\n   * @constructor\n   * @param {BundleExecutor} bundler - bundles API calls.\n   */\n  constructor(bundler) {\n    super();\n    this.bundler = bundler;\n  }\n  // tslint:disable-next-line no-any\n  call(apiCall, argument, settings, status) {\n    if (settings.isBundling) {\n      status.call((argument, callback) => {\n        this.bundler.schedule(apiCall, argument, callback);\n      }, argument);\n    } else {\n      apiCallable_1.NormalApiCaller.prototype.call.call(this, apiCall, argument, settings, status);\n    }\n  }\n}\nexports.Bundleable = Bundleable;\nclass BundleDescriptor {\n  /**\n   * Describes the structure of bundled call.\n   *\n   * requestDiscriminatorFields may include '.' as a separator, which is used to\n   * indicate object traversal. This allows fields in nested objects to be used\n   * to determine what request to bundle.\n   *\n   * @property {String} bundledField\n   * @property {String} requestDiscriminatorFields\n   * @property {String} subresponseField\n   * @property {Function} byteLengthFunction\n   *\n   * @param {String} bundledField - the repeated field in the request message\n   *   that will have its elements aggregated by bundling.\n   * @param {String} requestDiscriminatorFields - a list of fields in the\n   *   target request message class that are used to detemrine which request\n   *   messages should be bundled together.\n   * @param {String} subresponseField - an optional field, when present it\n   *   indicates the field in the response message that should be used to\n   *   demultiplex the response into multiple response messages.\n   * @param {Function} byteLengthFunction - a function to obtain the byte\n   *   length to be consumed for the bundled field messages. Because Node.JS\n   *   protobuf.js/gRPC uses builtin Objects for the user-visible data and\n   *   internally they are encoded/decoded in protobuf manner, this function\n   *   is actually necessary to calculate the byte length.\n   * @constructor\n   */\n  constructor(bundledField, requestDiscriminatorFields, subresponseField, byteLengthFunction) {\n    if (!byteLengthFunction && typeof subresponseField === 'function') {\n      byteLengthFunction = subresponseField;\n      subresponseField = null;\n    }\n    this.bundledField = bundledField;\n    this.requestDiscriminatorFields = requestDiscriminatorFields;\n    this.subresponseField = subresponseField;\n    this.byteLengthFunction = byteLengthFunction;\n  }\n  /**\n   * Returns a new API caller.\n   * @private\n   * @param {CallSettings} settings - the current settings.\n   * @return {Bundleable} - the new bundling API caller.\n   */\n  apiCaller(settings) {\n    return new Bundleable(new BundleExecutor(settings.bundleOptions, this));\n  }\n}\nexports.BundleDescriptor = BundleDescriptor;","map":{"version":3,"names":["require","at","grpc_1","apiCallable_1","GoogleError_1","warnings_1","noop","computeBundleId","obj","discriminatorFields","ids","hasIds","i","length","id","undefined","push","JSON","stringify","exports","deepCopyForResponse","subresponseInfo","result","Array","isArray","forEach","element","copy","ArrayBuffer","slice","Object","keys","key","field","start","end","Task","constructor","apiCall","bundlingRequest","bundledField","subresponseField","_apiCall","_request","_bundledField","_subresponseField","_data","getElementCount","count","elements","getRequestByteSize","size","bytes","run","request","apply","callback","self","callCanceller","err","response","responses","data","cancelled","error","GoogleError","code","status","CANCELLED","extend","cancel","allCancelled","d","splice","BundleExecutor","bundleOptions","bundleDescriptor","_options","_descriptor","_tasks","_timers","_invocations","_invocationId","schedule","bundleId","requestDiscriminatorFields","warn","task","String","elementCount","requestBytes","byteLengthFunction","countLimit","elementCountLimit","byteLimit","requestByteLimit","message","INVALID_ARGUMENT","existingCount","existingBytes","_runNow","ret","_cancel","countThreshold","elementCountThreshold","sizeThreshold","requestByteThreshold","delayThreshold","setTimeout","_maybeClearTimeout","timerId","clearTimeout","Bundleable","NormalApiCaller","bundler","call","argument","settings","isBundling","prototype","BundleDescriptor","apiCaller"],"sources":["../../src/bundling.ts"],"sourcesContent":[null],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}