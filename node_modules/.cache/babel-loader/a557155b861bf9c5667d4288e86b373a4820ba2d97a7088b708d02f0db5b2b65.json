{"ast":null,"code":"import { emails } from \"../db/emails\";\nimport showEmail from \"./showEmail.vue\";\nexport default {\n  components: {\n    showEmail\n  },\n  data() {\n    return {\n      emails: [],\n      openEmail: false,\n      emailData: null,\n      selected: [],\n      checked: false\n    };\n  },\n  created() {\n    this.emails = emails.emails;\n  },\n  methods: {\n    subject(messag) {\n      let messages = messag.replace(/<\\/?[^>]+(>|$)/g, \"\");\n      return messages.substr(0, 100) + \"....\";\n    },\n    showEmaildata(data) {\n      this.openEmail = true;\n      this.emailData = data;\n      this.emails.map(i => {\n        if (i.id == data.id) {\n          return i.isRead = true;\n        }\n      });\n    },\n    close() {\n      this.openEmail = false;\n    },\n    search(event) {\n      let text = event.target.value;\n      let newArr = this.emails;\n      if (text.length >= 3) {\n        newArr = emails.emails.filter(i => {\n          let ssss = text.toLocaleLowerCase();\n          return i.subject.toLocaleLowerCase().startsWith(ssss) || i.from.name.toLocaleLowerCase().startsWith(ssss);\n        });\n      }\n      if (text == \"\") {\n        newArr = emails.emails;\n      }\n      this.emails = newArr;\n    },\n    // select(id = null) {\n    //   // if (id) {\n    //   //   if (!this.selected.includes(id)) {\n    //   //     this.selected.push(id);\n    //   //   }\n    //   // } else {\n    //   //   this.selected = this.emails.map((i) => i.id);\n    //   // }\n    // },\n    selectall() {\n      this.selected = this.emails.map(i => i.id);\n    },\n    deletemail() {\n      this.emails = this.emails.filter(y => !this.selected.includes(y.id));\n      this.checked = false;\n      this.selected = [];\n    },\n    readall() {\n      this.emails.map(i => {\n        if (this.selected.includes(i.id)) {\n          i.isRead = true;\n        }\n      });\n      this.checked = false;\n      this.selected = [];\n    },\n    unreadall() {\n      this.emails.map(i => {\n        if (this.selected.includes(i.id)) {\n          i.isRead = false;\n        }\n      });\n      this.checked = false;\n      this.selected = [];\n    },\n    validated() {\n      return emails == [];\n    }\n  },\n  computed: {\n    isvalidated() {\n      return this.validated();\n    }\n  },\n  watch: {\n    // whenever question changes, this function will run\n    emails() {\n      this.validated;\n    }\n  }\n};","map":{"version":3,"names":["emails","showEmail","components","data","openEmail","emailData","selected","checked","created","methods","subject","messag","messages","replace","substr","showEmaildata","map","i","id","isRead","close","search","event","text","target","value","newArr","length","filter","ssss","toLocaleLowerCase","startsWith","from","name","selectall","deletemail","y","includes","readall","unreadall","validated","computed","isvalidated","watch"],"sources":["/var/www/html/project/Dash_Vuexy-master/src/components/email.vue"],"sourcesContent":["<template>\n  <div class=\"email row m-2\">\n    <div\n      class=\"col-lg-8 col-md-12 listemail showEmail\"\n      :class=\"openEmail ? 'showEmail-open' : 'showEmail-close'\"\n    >\n      <showEmail :data=\"emailData\" @close=\"close()\" />\n    </div>\n    <div class=\"col-lg-8 col-md-12 listemail\">\n      <div class=\"p-2 bordar\">\n        <div\n          data-v-10417946=\"\"\n          class=\"d-flex align-content-center justify-content-between\"\n        >\n          <div\n            data-v-10417946=\"\"\n            role=\"group\"\n            class=\"input-group input-group-merge\"\n            style=\"\"\n          >\n            <!---->\n            <div data-v-10417946=\"\" class=\"input-group-prepend\">\n              <div data-v-10417946=\"\" class=\"input-group-text Searchpar\">\n                <svg\n                  data-v-10417946=\"\"\n                  xmlns=\"http://www.w3.org/2000/svg\"\n                  width=\"30px\"\n                  height=\"25px\"\n                  viewBox=\"0 0 24 24\"\n                  fill=\"none\"\n                  stroke=\"currentColor\"\n                  stroke-width=\"2\"\n                  stroke-linecap=\"round\"\n                  stroke-linejoin=\"round\"\n                  class=\"text-muted feather feather-search\"\n                >\n                  <circle data-v-10417946=\"\" cx=\"11\" cy=\"11\" r=\"8\"></circle>\n                  <line\n                    data-v-10417946=\"\"\n                    x1=\"21\"\n                    y1=\"21\"\n                    x2=\"16.65\"\n                    y2=\"16.65\"\n                  ></line>\n                </svg>\n              </div>\n            </div>\n            <input\n              @input=\"search\"\n              data-v-10417946=\"\"\n              type=\"text\"\n              placeholder=\"Search email\"\n              class=\"form-control Searchpar\"\n              id=\"__BVID__637\"\n            /><!---->\n          </div>\n        </div>\n      </div>\n      <div class=\"p-2 bordar\">\n        <div\n          data-v-10417946=\"\"\n          class=\"d-flex align-content-center justify-content-between\"\n        >\n          <div class=\"form-check fs-6 ms-3\">\n            <input\n              type=\"checkbox\"\n              class=\"form-check-input checkbox\"\n              id=\"exampleCheck1\"\n              v-model=\"checked\"\n              @click=\"checked ? (selected = []) : selectall()\"\n              :disabled=\"isvalidated ? false : true\"\n            />\n\n            <label class=\"form-check-label text-secondary\" for=\"exampleCheck1\"\n              >Select All\n              <span>({{ selected.length }})</span>\n            </label>\n          </div>\n          <div class=\"form-check fs-6 ms-3\" v-if=\"selected.length\">\n            <div class=\"groupmenu\">\n              <vue-feather\n                type=\"more-vertical\"\n                class=\"dropdownbutton\"\n                data-bs-toggle=\"dropdown\"\n                aria-expanded=\"false\"\n              ></vue-feather>\n              <ul class=\"dropdown-menu menu\">\n                <li @click=\"readall()\">set all as read</li>\n                <li @click=\"unreadall()\">set all as un read</li>\n                <li @click=\"deletemail()\">delet all</li>\n              </ul>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div class=\"m-0\" style=\"overflow-y: scroll; height: 83em\">\n        <ul v-for=\"email in emails\" :key=\"email.id\" class=\"email-slist\">\n          <li :class=\"`emails ${email.isRead || 'Unread'}`\">\n            <div class=\"d-flex ps-3\">\n              <div>\n                <div class=\"p-2\">\n                  <label for=\"toggler \" style=\"cursor: pointer\">\n                    <b-avatar class=\"p-0\" :src=\"email.from.avatar\"></b-avatar>\n                  </label>\n                </div>\n                <div>\n                  <div class=\"form-check fs-6\">\n                    <input\n                      type=\"checkbox\"\n                      class=\"form-check-input checkbox\"\n                      :id=\"`email${email.id}`\"\n                      v-model=\"selected\"\n                      :value=\"email.id\"\n                      :checked=\"this.selected.includes(email.id)\"\n                    />\n                  </div>\n                </div>\n              </div>\n              <div class=\"pt-2 d-flex\" @click=\"showEmaildata(email, true)\">\n                <div class=\"flex-item\">\n                  <h6 class=\"text-white-60\">\n                    {{ email.from.name }}\n                  </h6>\n                  <h6 class=\"text-truncate\">\n                    {{ email.subject }}\n                  </h6>\n                  <p class=\"fs-6\">\n                    {{ subject(email.message) }}\n                  </p>\n                </div>\n              </div>\n            </div>\n          </li>\n        </ul>\n      </div>\n    </div>\n  </div>\n</template>\n<script>\nimport { emails } from \"../db/emails\";\nimport showEmail from \"./showEmail.vue\";\n\nexport default {\n  components: { showEmail },\n  data() {\n    return {\n      emails: [],\n      openEmail: false,\n      emailData: null,\n      selected: [],\n      checked: false,\n    };\n  },\n  created() {\n    this.emails = emails.emails;\n  },\n  methods: {\n    subject(messag) {\n      let messages = messag.replace(/<\\/?[^>]+(>|$)/g, \"\");\n      return messages.substr(0, 100) + \"....\";\n    },\n    showEmaildata(data) {\n      this.openEmail = true;\n      this.emailData = data;\n      this.emails.map((i) => {\n        if (i.id == data.id) {\n          return (i.isRead = true);\n        }\n      });\n    },\n    close() {\n      this.openEmail = false;\n    },\n    search(event) {\n      let text = event.target.value;\n      let newArr = this.emails;\n      if (text.length >= 3) {\n        newArr = emails.emails.filter((i) => {\n          let ssss = text.toLocaleLowerCase();\n\n          return (\n            i.subject.toLocaleLowerCase().startsWith(ssss) ||\n            i.from.name.toLocaleLowerCase().startsWith(ssss)\n          );\n        });\n      }\n\n      if (text == \"\") {\n        newArr = emails.emails;\n      }\n\n      this.emails = newArr;\n    },\n    // select(id = null) {\n    //   // if (id) {\n    //   //   if (!this.selected.includes(id)) {\n    //   //     this.selected.push(id);\n    //   //   }\n    //   // } else {\n    //   //   this.selected = this.emails.map((i) => i.id);\n    //   // }\n    // },\n    selectall() {\n      this.selected = this.emails.map((i) => i.id);\n    },\n    deletemail() {\n      this.emails = this.emails.filter((y) => !this.selected.includes(y.id));\n      this.checked = false;\n      this.selected = [];\n    },\n    readall() {\n      this.emails.map((i) => {\n        if (this.selected.includes(i.id)) {\n          i.isRead = true;\n        }\n      });\n      this.checked = false;\n      this.selected = [];\n    },\n    unreadall() {\n      this.emails.map((i) => {\n        if (this.selected.includes(i.id)) {\n          i.isRead = false;\n        }\n      });\n      this.checked = false;\n      this.selected = [];\n    },\n    validated() {\n      return emails == [];\n    },\n  },\n  computed: {\n    isvalidated(){\n     return this.validated()\n    }  \n    \n  },\n  watch: {\n    // whenever question changes, this function will run\n    emails() {\n     this.validated\n    }\n  },\n};\n</script>\n<style lang=\"scss\" scoped>\n@import \"../assets/style_scss/components/emailStyle.scss\";\n</style>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}