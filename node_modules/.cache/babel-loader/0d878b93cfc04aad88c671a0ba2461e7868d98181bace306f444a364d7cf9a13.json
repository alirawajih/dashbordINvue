{"ast":null,"code":"\"use strict\";\n\n/**\n * Copyright 2018 Google LLC\n *\n * Distributed under MIT license.\n * See file LICENSE for detail or copy at https://opensource.org/licenses/MIT\n */\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function step(result) {\n      result.done ? resolve(result.value) : new P(function (resolve) {\n        resolve(result.value);\n      }).then(fulfilled, rejected);\n    }\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nconst fs = require(\"fs\");\nconst gaxios_1 = require(\"gaxios\");\nconst jws = require(\"jws\");\nconst mime = require(\"mime\");\nconst pify = require(\"pify\");\nconst readFile = pify(fs.readFile);\nconst GOOGLE_TOKEN_URL = 'https://www.googleapis.com/oauth2/v4/token';\nconst GOOGLE_REVOKE_TOKEN_URL = 'https://accounts.google.com/o/oauth2/revoke?token=';\nclass ErrorWithCode extends Error {\n  constructor(message, code) {\n    super(message);\n    this.code = code;\n  }\n}\nlet getPem;\nclass GoogleToken {\n  /**\n   * Create a GoogleToken.\n   *\n   * @param options  Configuration object.\n   */\n  constructor(options) {\n    this.token = null;\n    this.expiresAt = null;\n    this.rawToken = null;\n    this.tokenExpires = null;\n    this.configure(options);\n  }\n  /**\n   * Returns whether the token has expired.\n   *\n   * @return true if the token has expired, false otherwise.\n   */\n  hasExpired() {\n    const now = new Date().getTime();\n    if (this.token && this.expiresAt) {\n      return now >= this.expiresAt;\n    } else {\n      return true;\n    }\n  }\n  getToken(callback) {\n    if (callback) {\n      this.getTokenAsync().then(t => callback(null, t), callback);\n      return;\n    }\n    return this.getTokenAsync();\n  }\n  /**\n   * Given a keyFile, extract the key and client email if available\n   * @param keyFile Path to a json, pem, or p12 file that contains the key.\n   * @returns an object with privateKey and clientEmail properties\n   */\n  getCredentials(keyFile) {\n    return __awaiter(this, void 0, void 0, function* () {\n      const mimeType = mime.getType(keyFile);\n      switch (mimeType) {\n        case 'application/json':\n          {\n            // *.json file\n            const key = yield readFile(keyFile, 'utf8');\n            const body = JSON.parse(key);\n            const privateKey = body.private_key;\n            const clientEmail = body.client_email;\n            if (!privateKey || !clientEmail) {\n              throw new ErrorWithCode('private_key and client_email are required.', 'MISSING_CREDENTIALS');\n            }\n            return {\n              privateKey,\n              clientEmail\n            };\n          }\n        case 'application/x-x509-ca-cert':\n          {\n            // *.pem file\n            const privateKey = yield readFile(keyFile, 'utf8');\n            return {\n              privateKey\n            };\n          }\n        case 'application/x-pkcs12':\n          {\n            // *.p12 file\n            // NOTE:  The loading of `google-p12-pem` is deferred for performance\n            // reasons.  The `node-forge` npm module in `google-p12-pem` adds a fair\n            // bit time to overall module loading, and is likely not frequently\n            // used.  In a future release, p12 support will be entirely removed.\n            if (!getPem) {\n              getPem = (yield Promise.resolve().then(() => require('google-p12-pem'))).getPem;\n            }\n            const privateKey = yield getPem(keyFile);\n            return {\n              privateKey\n            };\n          }\n        default:\n          throw new ErrorWithCode('Unknown certificate type. Type is determined based on file extension. ' + 'Current supported extensions are *.json, *.pem, and *.p12.', 'UNKNOWN_CERTIFICATE_TYPE');\n      }\n    });\n  }\n  getTokenAsync() {\n    return __awaiter(this, void 0, void 0, function* () {\n      if (!this.hasExpired()) {\n        return Promise.resolve(this.token);\n      }\n      if (!this.key && !this.keyFile) {\n        throw new Error('No key or keyFile set.');\n      }\n      if (!this.key && this.keyFile) {\n        const creds = yield this.getCredentials(this.keyFile);\n        this.key = creds.privateKey;\n        this.iss = creds.clientEmail || this.iss;\n        if (!creds.clientEmail) {\n          this.ensureEmail();\n        }\n      }\n      return this.requestToken();\n    });\n  }\n  ensureEmail() {\n    if (!this.iss) {\n      throw new ErrorWithCode('email is required.', 'MISSING_CREDENTIALS');\n    }\n  }\n  revokeToken(callback) {\n    if (callback) {\n      this.revokeTokenAsync().then(() => callback(), callback);\n      return;\n    }\n    return this.revokeTokenAsync();\n  }\n  revokeTokenAsync() {\n    return __awaiter(this, void 0, void 0, function* () {\n      if (!this.token) {\n        throw new Error('No token to revoke.');\n      }\n      return gaxios_1.request({\n        url: GOOGLE_REVOKE_TOKEN_URL + this.token\n      }).then(r => {\n        this.configure({\n          email: this.iss,\n          sub: this.sub,\n          key: this.key,\n          keyFile: this.keyFile,\n          scope: this.scope,\n          additionalClaims: this.additionalClaims\n        });\n      });\n    });\n  }\n  /**\n   * Configure the GoogleToken for re-use.\n   * @param  {object} options Configuration object.\n   */\n  configure(options = {}) {\n    this.keyFile = options.keyFile;\n    this.key = options.key;\n    this.token = this.expiresAt = this.rawToken = null;\n    this.iss = options.email || options.iss;\n    this.sub = options.sub;\n    this.additionalClaims = options.additionalClaims;\n    if (typeof options.scope === 'object') {\n      this.scope = options.scope.join(' ');\n    } else {\n      this.scope = options.scope;\n    }\n  }\n  /**\n   * Request the token from Google.\n   */\n  requestToken() {\n    return __awaiter(this, void 0, void 0, function* () {\n      const iat = Math.floor(new Date().getTime() / 1000);\n      const additionalClaims = this.additionalClaims || {};\n      const payload = Object.assign({\n        iss: this.iss,\n        scope: this.scope,\n        aud: GOOGLE_TOKEN_URL,\n        exp: iat + 3600,\n        iat,\n        sub: this.sub\n      }, additionalClaims);\n      const signedJWT = jws.sign({\n        header: {\n          alg: 'RS256'\n        },\n        payload,\n        secret: this.key\n      });\n      return gaxios_1.request({\n        method: 'POST',\n        url: GOOGLE_TOKEN_URL,\n        data: {\n          grant_type: 'urn:ietf:params:oauth:grant-type:jwt-bearer',\n          assertion: signedJWT\n        },\n        headers: {\n          'Content-Type': 'application/x-www-form-urlencoded'\n        },\n        responseType: 'json'\n      }).then(r => {\n        this.rawToken = r.data;\n        this.token = r.data.access_token;\n        this.expiresAt = r.data.expires_in === null || r.data.expires_in === undefined ? null : (iat + r.data.expires_in) * 1000;\n        return this.token;\n      }).catch(e => {\n        this.token = null;\n        this.tokenExpires = null;\n        const body = e.response && e.response.data ? e.response.data : {};\n        if (body.error) {\n          const desc = body.error_description ? `: ${body.error_description}` : '';\n          e.message = `${body.error}${desc}`;\n        }\n        throw e;\n      });\n    });\n  }\n}\nexports.GoogleToken = GoogleToken;","map":{"version":3,"names":["__awaiter","thisArg","_arguments","P","generator","Promise","resolve","reject","fulfilled","value","step","next","e","rejected","result","done","then","apply","Object","defineProperty","exports","fs","require","gaxios_1","jws","mime","pify","readFile","GOOGLE_TOKEN_URL","GOOGLE_REVOKE_TOKEN_URL","ErrorWithCode","Error","constructor","message","code","getPem","GoogleToken","options","token","expiresAt","rawToken","tokenExpires","configure","hasExpired","now","Date","getTime","getToken","callback","getTokenAsync","t","getCredentials","keyFile","mimeType","getType","key","body","JSON","parse","privateKey","private_key","clientEmail","client_email","creds","iss","ensureEmail","requestToken","revokeToken","revokeTokenAsync","request","url","r","email","sub","scope","additionalClaims","join","iat","Math","floor","payload","assign","aud","exp","signedJWT","sign","header","alg","secret","method","data","grant_type","assertion","headers","responseType","access_token","expires_in","undefined","catch","response","error","desc","error_description"],"sources":["/var/www/html/project/Dash_Vuexy-master/node_modules/gtoken/build/src/index.js"],"sourcesContent":["\"use strict\";\n/**\n * Copyright 2018 Google LLC\n *\n * Distributed under MIT license.\n * See file LICENSE for detail or copy at https://opensource.org/licenses/MIT\n */\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst fs = require(\"fs\");\nconst gaxios_1 = require(\"gaxios\");\nconst jws = require(\"jws\");\nconst mime = require(\"mime\");\nconst pify = require(\"pify\");\nconst readFile = pify(fs.readFile);\nconst GOOGLE_TOKEN_URL = 'https://www.googleapis.com/oauth2/v4/token';\nconst GOOGLE_REVOKE_TOKEN_URL = 'https://accounts.google.com/o/oauth2/revoke?token=';\nclass ErrorWithCode extends Error {\n    constructor(message, code) {\n        super(message);\n        this.code = code;\n    }\n}\nlet getPem;\nclass GoogleToken {\n    /**\n     * Create a GoogleToken.\n     *\n     * @param options  Configuration object.\n     */\n    constructor(options) {\n        this.token = null;\n        this.expiresAt = null;\n        this.rawToken = null;\n        this.tokenExpires = null;\n        this.configure(options);\n    }\n    /**\n     * Returns whether the token has expired.\n     *\n     * @return true if the token has expired, false otherwise.\n     */\n    hasExpired() {\n        const now = (new Date()).getTime();\n        if (this.token && this.expiresAt) {\n            return now >= this.expiresAt;\n        }\n        else {\n            return true;\n        }\n    }\n    getToken(callback) {\n        if (callback) {\n            this.getTokenAsync().then(t => callback(null, t), callback);\n            return;\n        }\n        return this.getTokenAsync();\n    }\n    /**\n     * Given a keyFile, extract the key and client email if available\n     * @param keyFile Path to a json, pem, or p12 file that contains the key.\n     * @returns an object with privateKey and clientEmail properties\n     */\n    getCredentials(keyFile) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const mimeType = mime.getType(keyFile);\n            switch (mimeType) {\n                case 'application/json': {\n                    // *.json file\n                    const key = yield readFile(keyFile, 'utf8');\n                    const body = JSON.parse(key);\n                    const privateKey = body.private_key;\n                    const clientEmail = body.client_email;\n                    if (!privateKey || !clientEmail) {\n                        throw new ErrorWithCode('private_key and client_email are required.', 'MISSING_CREDENTIALS');\n                    }\n                    return { privateKey, clientEmail };\n                }\n                case 'application/x-x509-ca-cert': {\n                    // *.pem file\n                    const privateKey = yield readFile(keyFile, 'utf8');\n                    return { privateKey };\n                }\n                case 'application/x-pkcs12': {\n                    // *.p12 file\n                    // NOTE:  The loading of `google-p12-pem` is deferred for performance\n                    // reasons.  The `node-forge` npm module in `google-p12-pem` adds a fair\n                    // bit time to overall module loading, and is likely not frequently\n                    // used.  In a future release, p12 support will be entirely removed.\n                    if (!getPem) {\n                        getPem = (yield Promise.resolve().then(() => require('google-p12-pem'))).getPem;\n                    }\n                    const privateKey = yield getPem(keyFile);\n                    return { privateKey };\n                }\n                default:\n                    throw new ErrorWithCode('Unknown certificate type. Type is determined based on file extension. ' +\n                        'Current supported extensions are *.json, *.pem, and *.p12.', 'UNKNOWN_CERTIFICATE_TYPE');\n            }\n        });\n    }\n    getTokenAsync() {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!this.hasExpired()) {\n                return Promise.resolve(this.token);\n            }\n            if (!this.key && !this.keyFile) {\n                throw new Error('No key or keyFile set.');\n            }\n            if (!this.key && this.keyFile) {\n                const creds = yield this.getCredentials(this.keyFile);\n                this.key = creds.privateKey;\n                this.iss = creds.clientEmail || this.iss;\n                if (!creds.clientEmail) {\n                    this.ensureEmail();\n                }\n            }\n            return this.requestToken();\n        });\n    }\n    ensureEmail() {\n        if (!this.iss) {\n            throw new ErrorWithCode('email is required.', 'MISSING_CREDENTIALS');\n        }\n    }\n    revokeToken(callback) {\n        if (callback) {\n            this.revokeTokenAsync().then(() => callback(), callback);\n            return;\n        }\n        return this.revokeTokenAsync();\n    }\n    revokeTokenAsync() {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!this.token) {\n                throw new Error('No token to revoke.');\n            }\n            return gaxios_1.request({ url: GOOGLE_REVOKE_TOKEN_URL + this.token }).then(r => {\n                this.configure({\n                    email: this.iss,\n                    sub: this.sub,\n                    key: this.key,\n                    keyFile: this.keyFile,\n                    scope: this.scope,\n                    additionalClaims: this.additionalClaims,\n                });\n            });\n        });\n    }\n    /**\n     * Configure the GoogleToken for re-use.\n     * @param  {object} options Configuration object.\n     */\n    configure(options = {}) {\n        this.keyFile = options.keyFile;\n        this.key = options.key;\n        this.token = this.expiresAt = this.rawToken = null;\n        this.iss = options.email || options.iss;\n        this.sub = options.sub;\n        this.additionalClaims = options.additionalClaims;\n        if (typeof options.scope === 'object') {\n            this.scope = options.scope.join(' ');\n        }\n        else {\n            this.scope = options.scope;\n        }\n    }\n    /**\n     * Request the token from Google.\n     */\n    requestToken() {\n        return __awaiter(this, void 0, void 0, function* () {\n            const iat = Math.floor(new Date().getTime() / 1000);\n            const additionalClaims = this.additionalClaims || {};\n            const payload = Object.assign({\n                iss: this.iss,\n                scope: this.scope,\n                aud: GOOGLE_TOKEN_URL,\n                exp: iat + 3600,\n                iat,\n                sub: this.sub\n            }, additionalClaims);\n            const signedJWT = jws.sign({ header: { alg: 'RS256' }, payload, secret: this.key });\n            return gaxios_1.request({\n                method: 'POST',\n                url: GOOGLE_TOKEN_URL,\n                data: {\n                    grant_type: 'urn:ietf:params:oauth:grant-type:jwt-bearer',\n                    assertion: signedJWT\n                },\n                headers: { 'Content-Type': 'application/x-www-form-urlencoded' },\n                responseType: 'json'\n            })\n                .then(r => {\n                this.rawToken = r.data;\n                this.token = r.data.access_token;\n                this.expiresAt =\n                    (r.data.expires_in === null || r.data.expires_in === undefined) ?\n                        null :\n                        (iat + r.data.expires_in) * 1000;\n                return this.token;\n            })\n                .catch(e => {\n                this.token = null;\n                this.tokenExpires = null;\n                const body = (e.response && e.response.data) ? e.response.data : {};\n                if (body.error) {\n                    const desc = body.error_description ? `: ${body.error_description}` : '';\n                    e.message = `${body.error}${desc}`;\n                }\n                throw e;\n            });\n        });\n    }\n}\nexports.GoogleToken = GoogleToken;\n//# sourceMappingURL=index.js.map"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}