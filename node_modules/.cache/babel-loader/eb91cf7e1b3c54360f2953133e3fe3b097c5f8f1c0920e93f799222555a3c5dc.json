{"ast":null,"code":"\"use strict\";\n\nrequire(\"core-js/modules/es.array.push.js\");\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\").default;\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = eachWeekendOfInterval;\nvar _index = _interopRequireDefault(require(\"../eachDayOfInterval/index.js\"));\nvar _index2 = _interopRequireDefault(require(\"../isSunday/index.js\"));\nvar _index3 = _interopRequireDefault(require(\"../isWeekend/index.js\"));\nvar _index4 = _interopRequireDefault(require(\"../_lib/requiredArgs/index.js\"));\n/**\n * @name eachWeekendOfInterval\n * @category Interval Helpers\n * @summary List all the Saturdays and Sundays in the given date interval.\n *\n * @description\n * Get all the Saturdays and Sundays in the given date interval.\n *\n * @param {Interval} interval - the given interval. See [Interval]{@link https://date-fns.org/docs/Interval}\n * @returns {Date[]} an array containing all the Saturdays and Sundays\n * @throws {TypeError} 1 argument required\n * @throws {RangeError} The start of an interval cannot be after its end\n * @throws {RangeError} Date in interval cannot be `Invalid Date`\n *\n * @example\n * // Lists all Saturdays and Sundays in the given date interval\n * const result = eachWeekendOfInterval({\n *   start: new Date(2018, 8, 17),\n *   end: new Date(2018, 8, 30)\n * })\n * //=> [\n * //   Sat Sep 22 2018 00:00:00,\n * //   Sun Sep 23 2018 00:00:00,\n * //   Sat Sep 29 2018 00:00:00,\n * //   Sun Sep 30 2018 00:00:00\n * // ]\n */\nfunction eachWeekendOfInterval(interval) {\n  (0, _index4.default)(1, arguments);\n  var dateInterval = (0, _index.default)(interval);\n  var weekends = [];\n  var index = 0;\n  while (index < dateInterval.length) {\n    var date = dateInterval[index++];\n    if ((0, _index3.default)(date)) {\n      weekends.push(date);\n      if ((0, _index2.default)(date)) index = index + 5;\n    }\n  }\n  return weekends;\n}\nmodule.exports = exports.default;","map":{"version":3,"names":["require","_interopRequireDefault","default","Object","defineProperty","exports","value","eachWeekendOfInterval","_index","_index2","_index3","_index4","interval","arguments","dateInterval","weekends","index","length","date","push","module"],"sources":["/var/www/html/project/Dash_Vuexy-master/node_modules/date-fns/eachWeekendOfInterval/index.js"],"sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\").default;\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = eachWeekendOfInterval;\nvar _index = _interopRequireDefault(require(\"../eachDayOfInterval/index.js\"));\nvar _index2 = _interopRequireDefault(require(\"../isSunday/index.js\"));\nvar _index3 = _interopRequireDefault(require(\"../isWeekend/index.js\"));\nvar _index4 = _interopRequireDefault(require(\"../_lib/requiredArgs/index.js\"));\n/**\n * @name eachWeekendOfInterval\n * @category Interval Helpers\n * @summary List all the Saturdays and Sundays in the given date interval.\n *\n * @description\n * Get all the Saturdays and Sundays in the given date interval.\n *\n * @param {Interval} interval - the given interval. See [Interval]{@link https://date-fns.org/docs/Interval}\n * @returns {Date[]} an array containing all the Saturdays and Sundays\n * @throws {TypeError} 1 argument required\n * @throws {RangeError} The start of an interval cannot be after its end\n * @throws {RangeError} Date in interval cannot be `Invalid Date`\n *\n * @example\n * // Lists all Saturdays and Sundays in the given date interval\n * const result = eachWeekendOfInterval({\n *   start: new Date(2018, 8, 17),\n *   end: new Date(2018, 8, 30)\n * })\n * //=> [\n * //   Sat Sep 22 2018 00:00:00,\n * //   Sun Sep 23 2018 00:00:00,\n * //   Sat Sep 29 2018 00:00:00,\n * //   Sun Sep 30 2018 00:00:00\n * // ]\n */\nfunction eachWeekendOfInterval(interval) {\n  (0, _index4.default)(1, arguments);\n  var dateInterval = (0, _index.default)(interval);\n  var weekends = [];\n  var index = 0;\n  while (index < dateInterval.length) {\n    var date = dateInterval[index++];\n    if ((0, _index3.default)(date)) {\n      weekends.push(date);\n      if ((0, _index2.default)(date)) index = index + 5;\n    }\n  }\n  return weekends;\n}\nmodule.exports = exports.default;"],"mappings":"AAAA,YAAY;;AAACA,OAAA;AAEb,IAAIC,sBAAsB,GAAGD,OAAO,CAAC,8CAA8C,CAAC,CAACE,OAAO;AAC5FC,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAC3CC,KAAK,EAAE;AACT,CAAC,CAAC;AACFD,OAAO,CAACH,OAAO,GAAGK,qBAAqB;AACvC,IAAIC,MAAM,GAAGP,sBAAsB,CAACD,OAAO,CAAC,+BAA+B,CAAC,CAAC;AAC7E,IAAIS,OAAO,GAAGR,sBAAsB,CAACD,OAAO,CAAC,sBAAsB,CAAC,CAAC;AACrE,IAAIU,OAAO,GAAGT,sBAAsB,CAACD,OAAO,CAAC,uBAAuB,CAAC,CAAC;AACtE,IAAIW,OAAO,GAAGV,sBAAsB,CAACD,OAAO,CAAC,+BAA+B,CAAC,CAAC;AAC9E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASO,qBAAqBA,CAACK,QAAQ,EAAE;EACvC,CAAC,CAAC,EAAED,OAAO,CAACT,OAAO,EAAE,CAAC,EAAEW,SAAS,CAAC;EAClC,IAAIC,YAAY,GAAG,CAAC,CAAC,EAAEN,MAAM,CAACN,OAAO,EAAEU,QAAQ,CAAC;EAChD,IAAIG,QAAQ,GAAG,EAAE;EACjB,IAAIC,KAAK,GAAG,CAAC;EACb,OAAOA,KAAK,GAAGF,YAAY,CAACG,MAAM,EAAE;IAClC,IAAIC,IAAI,GAAGJ,YAAY,CAACE,KAAK,EAAE,CAAC;IAChC,IAAI,CAAC,CAAC,EAAEN,OAAO,CAACR,OAAO,EAAEgB,IAAI,CAAC,EAAE;MAC9BH,QAAQ,CAACI,IAAI,CAACD,IAAI,CAAC;MACnB,IAAI,CAAC,CAAC,EAAET,OAAO,CAACP,OAAO,EAAEgB,IAAI,CAAC,EAAEF,KAAK,GAAGA,KAAK,GAAG,CAAC;IACnD;EACF;EACA,OAAOD,QAAQ;AACjB;AACAK,MAAM,CAACf,OAAO,GAAGA,OAAO,CAACH,OAAO"},"metadata":{},"sourceType":"script","externalDependencies":[]}