{"ast":null,"code":"\"use strict\";\n\n// Copyright 2018, Google, LLC.\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//    http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function step(result) {\n      result.done ? resolve(result.value) : new P(function (resolve) {\n        resolve(result.value);\n      }).then(fulfilled, rejected);\n    }\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nfunction getRetryConfig(err) {\n  return __awaiter(this, void 0, void 0, function* () {\n    let config = getConfig(err);\n    if (!err || !err.config || !config && !err.config.retry) {\n      return {\n        shouldRetry: false\n      };\n    }\n    config = config || {};\n    config.currentRetryAttempt = config.currentRetryAttempt || 0;\n    config.retry = config.retry === undefined || config.retry === null ? 3 : config.retry;\n    config.retryDelay = config.retryDelay || 100;\n    config.httpMethodsToRetry = config.httpMethodsToRetry || ['GET', 'HEAD', 'PUT', 'OPTIONS', 'DELETE'];\n    config.noResponseRetries = config.noResponseRetries === undefined || config.noResponseRetries === null ? 2 : config.noResponseRetries;\n    // If this wasn't in the list of status codes where we want\n    // to automatically retry, return.\n    const retryRanges = [\n    // https://en.wikipedia.org/wiki/List_of_HTTP_status_codes\n    // 1xx - Retry (Informational, request still processing)\n    // 2xx - Do not retry (Success)\n    // 3xx - Do not retry (Redirect)\n    // 4xx - Do not retry (Client errors)\n    // 429 - Retry (\"Too Many Requests\")\n    // 5xx - Retry (Server errors)\n    [100, 199], [429, 429], [500, 599]];\n    config.statusCodesToRetry = config.statusCodesToRetry || retryRanges;\n    // Put the config back into the err\n    err.config.retryConfig = config;\n    // Determine if we should retry the request\n    const shouldRetryFn = config.shouldRetry || shouldRetryRequest;\n    if (!shouldRetryFn(err)) {\n      return {\n        shouldRetry: false,\n        config: err.config\n      };\n    }\n    // Calculate time to wait with exponential backoff.\n    // Formula: (2^c - 1 / 2) * 1000\n    const delay = (Math.pow(2, config.currentRetryAttempt) - 1) / 2 * 1000;\n    // We're going to retry!  Incremenent the counter.\n    err.config.retryConfig.currentRetryAttempt += 1;\n    // Create a promise that invokes the retry after the backOffDelay\n    const backoff = new Promise(resolve => {\n      setTimeout(resolve, delay);\n    });\n    // Notify the user if they added an `onRetryAttempt` handler\n    if (config.onRetryAttempt) {\n      config.onRetryAttempt(err);\n    }\n    // Return the promise in which recalls Gaxios to retry the request\n    yield backoff;\n    return {\n      shouldRetry: true,\n      config: err.config\n    };\n  });\n}\nexports.getRetryConfig = getRetryConfig;\n/**\n * Determine based on config if we should retry the request.\n * @param err The GaxiosError passed to the interceptor.\n */\nfunction shouldRetryRequest(err) {\n  const config = getConfig(err);\n  // If there's no config, or retries are disabled, return.\n  if (!config || config.retry === 0) {\n    return false;\n  }\n  // Check if this error has no response (ETIMEDOUT, ENOTFOUND, etc)\n  if (!err.response && (config.currentRetryAttempt || 0) >= config.noResponseRetries) {\n    return false;\n  }\n  // Only retry with configured HttpMethods.\n  if (!err.config.method || config.httpMethodsToRetry.indexOf(err.config.method.toUpperCase()) < 0) {\n    return false;\n  }\n  // If this wasn't in the list of status codes where we want\n  // to automatically retry, return.\n  if (err.response && err.response.status) {\n    let isInRange = false;\n    for (const [min, max] of config.statusCodesToRetry) {\n      const status = err.response.status;\n      if (status >= min && status <= max) {\n        isInRange = true;\n        break;\n      }\n    }\n    if (!isInRange) {\n      return false;\n    }\n  }\n  // If we are out of retry attempts, return\n  config.currentRetryAttempt = config.currentRetryAttempt || 0;\n  if (config.currentRetryAttempt >= config.retry) {\n    return false;\n  }\n  return true;\n}\n/**\n * Acquire the raxConfig object from an GaxiosError if available.\n * @param err The Gaxios error with a config object.\n */\nfunction getConfig(err) {\n  if (err && err.config && err.config.retryConfig) {\n    return err.config.retryConfig;\n  }\n  return;\n}","map":{"version":3,"names":["getRetryConfig","err","config","getConfig","retry","shouldRetry","currentRetryAttempt","undefined","retryDelay","httpMethodsToRetry","noResponseRetries","retryRanges","statusCodesToRetry","retryConfig","shouldRetryFn","shouldRetryRequest","delay","Math","pow","backoff","Promise","resolve","setTimeout","onRetryAttempt","exports","response","method","indexOf","toUpperCase","status","isInRange","min","max"],"sources":["../../src/retry.ts"],"sourcesContent":[null],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}