{"ast":null,"code":"\"use strict\";\n\n/**\n * Copyright 2019 Google LLC. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function step(result) {\n      result.done ? resolve(result.value) : new P(function (resolve) {\n        resolve(result.value);\n      }).then(fulfilled, rejected);\n    }\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nconst crypto = require(\"crypto\");\nclass NodeCrypto {\n  sha256DigestBase64(str) {\n    return __awaiter(this, void 0, void 0, function* () {\n      return crypto.createHash('sha256').update(str).digest('base64');\n    });\n  }\n  randomBytesBase64(count) {\n    return crypto.randomBytes(count).toString('base64');\n  }\n  verify(pubkey, data, signature) {\n    return __awaiter(this, void 0, void 0, function* () {\n      const verifier = crypto.createVerify('sha256');\n      verifier.update(data);\n      return verifier.verify(pubkey, signature, 'base64');\n    });\n  }\n  createSign(algorithm) {\n    return crypto.createSign(algorithm);\n  }\n  decodeBase64StringUtf8(base64) {\n    return Buffer.from(base64, 'base64').toString('utf-8');\n  }\n  encodeBase64StringUtf8(text) {\n    return Buffer.from(text, 'utf-8').toString('base64');\n  }\n}\nexports.NodeCrypto = NodeCrypto;","map":{"version":3,"names":["__awaiter","thisArg","_arguments","P","generator","Promise","resolve","reject","fulfilled","value","step","next","e","rejected","result","done","then","apply","Object","defineProperty","exports","crypto","require","NodeCrypto","sha256DigestBase64","str","createHash","update","digest","randomBytesBase64","count","randomBytes","toString","verify","pubkey","data","signature","verifier","createVerify","createSign","algorithm","decodeBase64StringUtf8","base64","Buffer","from","encodeBase64StringUtf8","text"],"sources":["/var/www/html/project/Dash_Vuexy-master/node_modules/google-auth-library/build/src/crypto/node/crypto.js"],"sourcesContent":["\"use strict\";\n/**\n * Copyright 2019 Google LLC. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst crypto = require(\"crypto\");\nclass NodeCrypto {\n    sha256DigestBase64(str) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return crypto.createHash('sha256').update(str).digest('base64');\n        });\n    }\n    randomBytesBase64(count) {\n        return crypto.randomBytes(count).toString('base64');\n    }\n    verify(pubkey, data, signature) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const verifier = crypto.createVerify('sha256');\n            verifier.update(data);\n            return verifier.verify(pubkey, signature, 'base64');\n        });\n    }\n    createSign(algorithm) {\n        return crypto.createSign(algorithm);\n    }\n    decodeBase64StringUtf8(base64) {\n        return Buffer.from(base64, 'base64').toString('utf-8');\n    }\n    encodeBase64StringUtf8(text) {\n        return Buffer.from(text, 'utf-8').toString('base64');\n    }\n}\nexports.NodeCrypto = NodeCrypto;\n//# sourceMappingURL=crypto.js.map"],"mappings":"AAAA,YAAY;;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAIA,SAAS,GAAI,IAAI,IAAI,IAAI,CAACA,SAAS,IAAK,UAAUC,OAAO,EAAEC,UAAU,EAAEC,CAAC,EAAEC,SAAS,EAAE;EACrF,OAAO,KAAKD,CAAC,KAAKA,CAAC,GAAGE,OAAO,CAAC,EAAE,UAAUC,OAAO,EAAEC,MAAM,EAAE;IACvD,SAASC,SAASA,CAACC,KAAK,EAAE;MAAE,IAAI;QAAEC,IAAI,CAACN,SAAS,CAACO,IAAI,CAACF,KAAK,CAAC,CAAC;MAAE,CAAC,CAAC,OAAOG,CAAC,EAAE;QAAEL,MAAM,CAACK,CAAC,CAAC;MAAE;IAAE;IAC1F,SAASC,QAAQA,CAACJ,KAAK,EAAE;MAAE,IAAI;QAAEC,IAAI,CAACN,SAAS,CAAC,OAAO,CAAC,CAACK,KAAK,CAAC,CAAC;MAAE,CAAC,CAAC,OAAOG,CAAC,EAAE;QAAEL,MAAM,CAACK,CAAC,CAAC;MAAE;IAAE;IAC7F,SAASF,IAAIA,CAACI,MAAM,EAAE;MAAEA,MAAM,CAACC,IAAI,GAAGT,OAAO,CAACQ,MAAM,CAACL,KAAK,CAAC,GAAG,IAAIN,CAAC,CAAC,UAAUG,OAAO,EAAE;QAAEA,OAAO,CAACQ,MAAM,CAACL,KAAK,CAAC;MAAE,CAAC,CAAC,CAACO,IAAI,CAACR,SAAS,EAAEK,QAAQ,CAAC;IAAE;IAC9IH,IAAI,CAAC,CAACN,SAAS,GAAGA,SAAS,CAACa,KAAK,CAAChB,OAAO,EAAEC,UAAU,IAAI,EAAE,CAAC,EAAES,IAAI,EAAE,CAAC;EACzE,CAAC,CAAC;AACN,CAAC;AACDO,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAAEX,KAAK,EAAE;AAAK,CAAC,CAAC;AAC7D,MAAMY,MAAM,GAAGC,OAAO,CAAC,QAAQ,CAAC;AAChC,MAAMC,UAAU,CAAC;EACbC,kBAAkBA,CAACC,GAAG,EAAE;IACpB,OAAOzB,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;MAChD,OAAOqB,MAAM,CAACK,UAAU,CAAC,QAAQ,CAAC,CAACC,MAAM,CAACF,GAAG,CAAC,CAACG,MAAM,CAAC,QAAQ,CAAC;IACnE,CAAC,CAAC;EACN;EACAC,iBAAiBA,CAACC,KAAK,EAAE;IACrB,OAAOT,MAAM,CAACU,WAAW,CAACD,KAAK,CAAC,CAACE,QAAQ,CAAC,QAAQ,CAAC;EACvD;EACAC,MAAMA,CAACC,MAAM,EAAEC,IAAI,EAAEC,SAAS,EAAE;IAC5B,OAAOpC,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;MAChD,MAAMqC,QAAQ,GAAGhB,MAAM,CAACiB,YAAY,CAAC,QAAQ,CAAC;MAC9CD,QAAQ,CAACV,MAAM,CAACQ,IAAI,CAAC;MACrB,OAAOE,QAAQ,CAACJ,MAAM,CAACC,MAAM,EAAEE,SAAS,EAAE,QAAQ,CAAC;IACvD,CAAC,CAAC;EACN;EACAG,UAAUA,CAACC,SAAS,EAAE;IAClB,OAAOnB,MAAM,CAACkB,UAAU,CAACC,SAAS,CAAC;EACvC;EACAC,sBAAsBA,CAACC,MAAM,EAAE;IAC3B,OAAOC,MAAM,CAACC,IAAI,CAACF,MAAM,EAAE,QAAQ,CAAC,CAACV,QAAQ,CAAC,OAAO,CAAC;EAC1D;EACAa,sBAAsBA,CAACC,IAAI,EAAE;IACzB,OAAOH,MAAM,CAACC,IAAI,CAACE,IAAI,EAAE,OAAO,CAAC,CAACd,QAAQ,CAAC,QAAQ,CAAC;EACxD;AACJ;AACAZ,OAAO,CAACG,UAAU,GAAGA,UAAU"},"metadata":{},"sourceType":"script","externalDependencies":[]}