{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nconst semver = require(\"semver\");\nconst call_credentials_1 = require(\"./call-credentials\");\nconst channel_credentials_1 = require(\"./channel-credentials\");\nconst client_1 = require(\"./client\");\nexports.Client = client_1.Client;\nconst constants_1 = require(\"./constants\");\nexports.logVerbosity = constants_1.LogVerbosity;\nexports.status = constants_1.Status;\nconst logging = require(\"./logging\");\nconst make_client_1 = require(\"./make-client\");\nexports.loadPackageDefinition = make_client_1.loadPackageDefinition;\nexports.makeClientConstructor = make_client_1.makeClientConstructor;\nexports.makeGenericClientConstructor = make_client_1.makeClientConstructor;\nconst metadata_1 = require(\"./metadata\");\nexports.Metadata = metadata_1.Metadata;\nconst status_builder_1 = require(\"./status-builder\");\nexports.StatusBuilder = status_builder_1.StatusBuilder;\nconst supportedNodeVersions = '^8.11.2 || >=9.4';\nif (!semver.satisfies(process.version, supportedNodeVersions)) {\n  throw new Error(`@grpc/grpc-js only works on Node ${supportedNodeVersions}`);\n}\nfunction mixin(...sources) {\n  const result = {};\n  for (const source of sources) {\n    for (const propName of Object.getOwnPropertyNames(source)) {\n      const property = source[propName]; // tslint:disable-line no-any\n      if (typeof property === 'function') {\n        result[propName] = property;\n      }\n    }\n  }\n  return result;\n}\n/**** Client Credentials ****/\n// Using assign only copies enumerable properties, which is what we want\nexports.credentials = mixin({\n  /**\n   * Create a gRPC credential from a Google credential object.\n   * @param googleCredentials The authentication client to use.\n   * @return The resulting CallCredentials object.\n   */\n  createFromGoogleCredential: googleCredentials => {\n    return call_credentials_1.CallCredentials.createFromMetadataGenerator((options, callback) => {\n      // google-auth-library pre-v2.0.0 does not have getRequestHeaders\n      // but has getRequestMetadata, which is deprecated in v2.0.0\n      let getHeaders;\n      if (typeof googleCredentials.getRequestHeaders === 'function') {\n        getHeaders = googleCredentials.getRequestHeaders(options.service_url);\n      } else {\n        getHeaders = new Promise((resolve, reject) => {\n          googleCredentials.getRequestMetadata(options.service_url, (err, headers) => {\n            if (err) {\n              reject(err);\n              return;\n            }\n            resolve(headers);\n          });\n        });\n      }\n      getHeaders.then(headers => {\n        const metadata = new metadata_1.Metadata();\n        metadata.add('authorization', headers.Authorization);\n        callback(null, metadata);\n      }, err => {\n        callback(err);\n      });\n    });\n  },\n  /**\n   * Combine a ChannelCredentials with any number of CallCredentials into a\n   * single ChannelCredentials object.\n   * @param channelCredentials The ChannelCredentials object.\n   * @param callCredentials Any number of CallCredentials objects.\n   * @return The resulting ChannelCredentials object.\n   */\n  combineChannelCredentials: (channelCredentials, ...callCredentials) => {\n    return callCredentials.reduce((acc, other) => acc.compose(other), channelCredentials);\n  },\n  /**\n   * Combine any number of CallCredentials into a single CallCredentials\n   * object.\n   * @param first The first CallCredentials object.\n   * @param additional Any number of additional CallCredentials objects.\n   * @return The resulting CallCredentials object.\n   */\n  combineCallCredentials: (first, ...additional) => {\n    return additional.reduce((acc, other) => acc.compose(other), first);\n  }\n}, channel_credentials_1.ChannelCredentials, call_credentials_1.CallCredentials);\n/**\n * Close a Client object.\n * @param client The client to close.\n */\nexports.closeClient = client => client.close();\nexports.waitForClientReady = (client, deadline, callback) => client.waitForReady(deadline, callback);\n/**** Unimplemented function stubs ****/\n/* tslint:disable:no-any variable-name */\nexports.loadObject = (value, options) => {\n  throw new Error('Not available in this library. Use @grpc/proto-loader and loadPackageDefinition instead');\n};\nexports.load = (filename, format, options) => {\n  throw new Error('Not available in this library. Use @grpc/proto-loader and loadPackageDefinition instead');\n};\nexports.setLogger = logger => {\n  logging.setLogger(logger);\n};\nexports.setLogVerbosity = verbosity => {\n  logging.setLoggerVerbosity(verbosity);\n};\nexports.Server = options => {\n  throw new Error('Not yet implemented');\n};\nexports.ServerCredentials = {\n  createSsl: (rootCerts, keyCertPairs, checkClientCertificate) => {\n    throw new Error('Not yet implemented');\n  },\n  createInsecure: () => {\n    throw new Error('Not yet implemented');\n  }\n};\nexports.getClientChannel = client => {\n  return client_1.Client.prototype.getChannel.call(client);\n};\nexports.ListenerBuilder = () => {\n  throw new Error('Not yet implemented');\n};\nexports.InterceptorBuilder = () => {\n  throw new Error('Not yet implemented');\n};\nexports.InterceptingCall = () => {\n  throw new Error('Not yet implemented');\n};","map":{"version":3,"names":["Object","defineProperty","exports","value","semver","require","call_credentials_1","channel_credentials_1","client_1","Client","constants_1","logVerbosity","LogVerbosity","status","Status","logging","make_client_1","loadPackageDefinition","makeClientConstructor","makeGenericClientConstructor","metadata_1","Metadata","status_builder_1","StatusBuilder","supportedNodeVersions","satisfies","process","version","Error","mixin","sources","result","source","propName","getOwnPropertyNames","property","credentials","createFromGoogleCredential","googleCredentials","CallCredentials","createFromMetadataGenerator","options","callback","getHeaders","getRequestHeaders","service_url","Promise","resolve","reject","getRequestMetadata","err","headers","then","metadata","add","Authorization","combineChannelCredentials","channelCredentials","callCredentials","reduce","acc","other","compose","combineCallCredentials","first","additional","ChannelCredentials","closeClient","client","close","waitForClientReady","deadline","waitForReady","loadObject","load","filename","format","setLogger","logger","setLogVerbosity","verbosity","setLoggerVerbosity","Server","ServerCredentials","createSsl","rootCerts","keyCertPairs","checkClientCertificate","createInsecure","getClientChannel","prototype","getChannel","call","ListenerBuilder","InterceptorBuilder","InterceptingCall"],"sources":["/var/www/html/project/Dash_Vuexy-master/node_modules/@grpc/grpc-js/build/src/index.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst semver = require(\"semver\");\nconst call_credentials_1 = require(\"./call-credentials\");\nconst channel_credentials_1 = require(\"./channel-credentials\");\nconst client_1 = require(\"./client\");\nexports.Client = client_1.Client;\nconst constants_1 = require(\"./constants\");\nexports.logVerbosity = constants_1.LogVerbosity;\nexports.status = constants_1.Status;\nconst logging = require(\"./logging\");\nconst make_client_1 = require(\"./make-client\");\nexports.loadPackageDefinition = make_client_1.loadPackageDefinition;\nexports.makeClientConstructor = make_client_1.makeClientConstructor;\nexports.makeGenericClientConstructor = make_client_1.makeClientConstructor;\nconst metadata_1 = require(\"./metadata\");\nexports.Metadata = metadata_1.Metadata;\nconst status_builder_1 = require(\"./status-builder\");\nexports.StatusBuilder = status_builder_1.StatusBuilder;\nconst supportedNodeVersions = '^8.11.2 || >=9.4';\nif (!semver.satisfies(process.version, supportedNodeVersions)) {\n    throw new Error(`@grpc/grpc-js only works on Node ${supportedNodeVersions}`);\n}\nfunction mixin(...sources) {\n    const result = {};\n    for (const source of sources) {\n        for (const propName of Object.getOwnPropertyNames(source)) {\n            const property = source[propName]; // tslint:disable-line no-any\n            if (typeof property === 'function') {\n                result[propName] = property;\n            }\n        }\n    }\n    return result;\n}\n/**** Client Credentials ****/\n// Using assign only copies enumerable properties, which is what we want\nexports.credentials = mixin({\n    /**\n     * Create a gRPC credential from a Google credential object.\n     * @param googleCredentials The authentication client to use.\n     * @return The resulting CallCredentials object.\n     */\n    createFromGoogleCredential: (googleCredentials) => {\n        return call_credentials_1.CallCredentials.createFromMetadataGenerator((options, callback) => {\n            // google-auth-library pre-v2.0.0 does not have getRequestHeaders\n            // but has getRequestMetadata, which is deprecated in v2.0.0\n            let getHeaders;\n            if (typeof googleCredentials.getRequestHeaders === 'function') {\n                getHeaders =\n                    googleCredentials.getRequestHeaders(options.service_url);\n            }\n            else {\n                getHeaders = new Promise((resolve, reject) => {\n                    googleCredentials.getRequestMetadata(options.service_url, (err, headers) => {\n                        if (err) {\n                            reject(err);\n                            return;\n                        }\n                        resolve(headers);\n                    });\n                });\n            }\n            getHeaders.then(headers => {\n                const metadata = new metadata_1.Metadata();\n                metadata.add('authorization', headers.Authorization);\n                callback(null, metadata);\n            }, err => {\n                callback(err);\n            });\n        });\n    },\n    /**\n     * Combine a ChannelCredentials with any number of CallCredentials into a\n     * single ChannelCredentials object.\n     * @param channelCredentials The ChannelCredentials object.\n     * @param callCredentials Any number of CallCredentials objects.\n     * @return The resulting ChannelCredentials object.\n     */\n    combineChannelCredentials: (channelCredentials, ...callCredentials) => {\n        return callCredentials.reduce((acc, other) => acc.compose(other), channelCredentials);\n    },\n    /**\n     * Combine any number of CallCredentials into a single CallCredentials\n     * object.\n     * @param first The first CallCredentials object.\n     * @param additional Any number of additional CallCredentials objects.\n     * @return The resulting CallCredentials object.\n     */\n    combineCallCredentials: (first, ...additional) => {\n        return additional.reduce((acc, other) => acc.compose(other), first);\n    }\n}, channel_credentials_1.ChannelCredentials, call_credentials_1.CallCredentials);\n/**\n * Close a Client object.\n * @param client The client to close.\n */\nexports.closeClient = (client) => client.close();\nexports.waitForClientReady = (client, deadline, callback) => client.waitForReady(deadline, callback);\n/**** Unimplemented function stubs ****/\n/* tslint:disable:no-any variable-name */\nexports.loadObject = (value, options) => {\n    throw new Error('Not available in this library. Use @grpc/proto-loader and loadPackageDefinition instead');\n};\nexports.load = (filename, format, options) => {\n    throw new Error('Not available in this library. Use @grpc/proto-loader and loadPackageDefinition instead');\n};\nexports.setLogger = (logger) => {\n    logging.setLogger(logger);\n};\nexports.setLogVerbosity = (verbosity) => {\n    logging.setLoggerVerbosity(verbosity);\n};\nexports.Server = (options) => {\n    throw new Error('Not yet implemented');\n};\nexports.ServerCredentials = {\n    createSsl: (rootCerts, keyCertPairs, checkClientCertificate) => {\n        throw new Error('Not yet implemented');\n    },\n    createInsecure: () => {\n        throw new Error('Not yet implemented');\n    }\n};\nexports.getClientChannel = (client) => {\n    return client_1.Client.prototype.getChannel.call(client);\n};\nexports.ListenerBuilder = () => {\n    throw new Error('Not yet implemented');\n};\nexports.InterceptorBuilder = () => {\n    throw new Error('Not yet implemented');\n};\nexports.InterceptingCall = () => {\n    throw new Error('Not yet implemented');\n};\n//# sourceMappingURL=index.js.map"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}