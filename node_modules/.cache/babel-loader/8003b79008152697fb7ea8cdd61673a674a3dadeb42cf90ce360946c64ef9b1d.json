{"ast":null,"code":"import { resolveComponent as _resolveComponent, createVNode as _createVNode, createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-1ba7b296\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"maindiv\"\n};\nconst _hoisted_2 = {\n  class: \"chart\"\n};\nconst _hoisted_3 = {\n  id: \"chart\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_apexchart = _resolveComponent(\"apexchart\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_createElementVNode(\"div\", _hoisted_3, [_createVNode(_component_apexchart, {\n    type: \"bar\",\n    height: \"380\",\n    options: $data.chartOptions,\n    series: $data.series\n  }, null, 8 /* PROPS */, [\"options\", \"series\"])])])]);\n}","map":{"version":3,"names":["class","id","_createElementBlock","_hoisted_1","_createElementVNode","_hoisted_2","_hoisted_3","_createVNode","_component_apexchart","type","height","options","$data","chartOptions","series"],"sources":["/var/www/html/project/Dash_Vuexy-master/src/views/ecommerce/horizontalBar.vue"],"sourcesContent":["<template>\n  <div class=\"maindiv\">\n    <div class=\"chart\">\n     <div id=\"chart\">\n        <apexchart type=\"bar\" height=\"380\" :options=\"chartOptions\" :series=\"series\"></apexchart>\n      </div>\n    </div>\n  </div>\n</template>\n    \n  <script>\nexport default {\n  data() {\n    return {\n        series: [\n            {\n              name: 'Actual',\n              data: [\n                {\n                  x: '2011',\n                  y: 5,\n                  goals: [\n                    {\n                      name: 'Expected',\n                      value: 14,\n                      strokeWidth: 2,\n                      strokeDashArray: 2,\n                      strokeColor: '#775DD0'\n                    }\n                  ]\n                },\n                {\n                  x: '2012',\n                  y: 44,\n                \n                },\n                {\n                  x: '2013',\n                  y: 54,\n                  goals: [\n                    {\n                      name: 'Expected',\n                      value: 52,\n                      strokeWidth: 10,\n                      strokeHeight: 0,\n                      strokeLineCap: 'round',\n                      strokeColor: '#775DD0'\n                    }\n                  ]\n                },\n                {\n                  x: '2014',\n                  y: 66,\n                  goals: [\n                    {\n                      name: 'Expected',\n                      value: 61,\n                      strokeWidth: 10,\n                      strokeHeight: 0,\n                      strokeLineCap: 'round',\n                      strokeColor: '#775DD0'\n                    }\n                  ]\n                },\n                {\n                  x: '2015',\n                  y: 81,\n                  goals: [\n                    {\n                      name: 'Expected',\n                      value: 66,\n                      strokeWidth: 10,\n                      strokeHeight: 0,\n                      strokeLineCap: 'round',\n                      strokeColor: '#775DD0'\n                    }\n                  ]\n                },\n                {\n                  x: '2016',\n                  y: 67,\n                  goals: [\n                    {\n                      name: 'Expected',\n                      value: 70,\n                      strokeWidth: 5,\n                      strokeHeight: 10,\n                      strokeColor: '#775DD0'\n                    }\n                  ]\n                }\n              ]\n            }\n          ],\n          chartOptions: {\n            chart: {\n              height: 350,\n              type: 'bar'\n            },\n            plotOptions: {\n              bar: {\n                horizontal: true,\n              }\n            },\n            colors: ['#00E396'],\n            dataLabels: {\n              formatter: function(val, opt) {\n                const goals =\n                  opt.w.config.series[opt.seriesIndex].data[opt.dataPointIndex]\n                    .goals\n            \n                if (goals && goals.length) {\n                  return val\n                }\n                return val\n              }\n            },\n            legend: {\n              show: true,\n              showForSingleSeries: true,\n              customLegendItems: ['Actual', 'Expected'],\n              markers: {\n                fillColors: ['#00E396', '#775DD0']\n              }\n            }\n          },\n          \n    };\n  },\n  created() {},\n};\n</script>\n  <style lang=\"scss\" scoped>\n.maindiv {\n  position: relative;\n  border-radius: 5px;\n  background: rgb(154, 155, 157);\n  color: black;\n  height: 100%;\n}\n</style>"],"mappings":";;;EACOA,KAAK,EAAC;AAAS;;EACbA,KAAK,EAAC;AAAO;;EACZC,EAAE,EAAC;AAAO;;;uBAFlBC,mBAAA,CAMM,OANNC,UAMM,GALJC,mBAAA,CAIM,OAJNC,UAIM,GAHLD,mBAAA,CAEO,OAFPE,UAEO,GADJC,YAAA,CAAwFC,oBAAA;IAA7EC,IAAI,EAAC,KAAK;IAACC,MAAM,EAAC,KAAK;IAAEC,OAAO,EAAEC,KAAA,CAAAC,YAAY;IAAGC,MAAM,EAAEF,KAAA,CAAAE"},"metadata":{},"sourceType":"module","externalDependencies":[]}