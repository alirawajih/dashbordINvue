{"ast":null,"code":"\"use strict\";\n\nrequire(\"core-js/modules/es.array.push.js\");\nrequire(\"core-js/modules/es.regexp.flags.js\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nconst events_1 = require(\"events\");\nconst stream_1 = require(\"stream\");\nconst constants_1 = require(\"./constants\");\nclass ClientUnaryCallImpl extends events_1.EventEmitter {\n  constructor(call) {\n    super();\n    this.call = call;\n    call.on('metadata', metadata => {\n      this.emit('metadata', metadata);\n    });\n    call.on('status', status => {\n      this.emit('status', status);\n    });\n  }\n  cancel() {\n    this.call.cancelWithStatus(constants_1.Status.CANCELLED, 'Cancelled on client');\n  }\n  getPeer() {\n    return this.call.getPeer();\n  }\n}\nexports.ClientUnaryCallImpl = ClientUnaryCallImpl;\nfunction setUpReadableStream(stream, call, deserialize) {\n  let statusEmitted = false;\n  call.on('data', data => {\n    let deserialized;\n    try {\n      deserialized = deserialize(data);\n    } catch (e) {\n      call.cancelWithStatus(constants_1.Status.INTERNAL, 'Failed to parse server response');\n      return;\n    }\n    if (!stream.push(deserialized)) {\n      call.pause();\n    }\n  });\n  call.on('end', () => {\n    if (statusEmitted) {\n      stream.push(null);\n    } else {\n      call.once('status', () => {\n        stream.push(null);\n      });\n    }\n  });\n  call.on('status', status => {\n    if (status.code !== constants_1.Status.OK) {\n      const error = Object.assign(new Error(status.details), status);\n      stream.emit('error', error);\n    }\n    stream.emit('status', status);\n    statusEmitted = true;\n  });\n  call.pause();\n}\nclass ClientReadableStreamImpl extends stream_1.Readable {\n  constructor(call, deserialize) {\n    super({\n      objectMode: true\n    });\n    this.call = call;\n    this.deserialize = deserialize;\n    call.on('metadata', metadata => {\n      this.emit('metadata', metadata);\n    });\n    setUpReadableStream(this, call, deserialize);\n  }\n  cancel() {\n    this.call.cancelWithStatus(constants_1.Status.CANCELLED, 'Cancelled on client');\n  }\n  getPeer() {\n    return this.call.getPeer();\n  }\n  _read(_size) {\n    this.call.resume();\n  }\n}\nexports.ClientReadableStreamImpl = ClientReadableStreamImpl;\nfunction tryWrite(call, serialize, chunk, encoding, cb) {\n  let message;\n  const flags = Number(encoding);\n  try {\n    message = serialize(chunk);\n  } catch (e) {\n    call.cancelWithStatus(constants_1.Status.INTERNAL, 'Serialization failure');\n    cb(e);\n    return;\n  }\n  const writeObj = {\n    message\n  };\n  if (!Number.isNaN(flags)) {\n    writeObj.flags = flags;\n  }\n  call.write(writeObj, cb);\n}\nclass ClientWritableStreamImpl extends stream_1.Writable {\n  constructor(call, serialize) {\n    super({\n      objectMode: true\n    });\n    this.call = call;\n    this.serialize = serialize;\n    call.on('metadata', metadata => {\n      this.emit('metadata', metadata);\n    });\n    call.on('status', status => {\n      this.emit('status', status);\n    });\n  }\n  cancel() {\n    this.call.cancelWithStatus(constants_1.Status.CANCELLED, 'Cancelled on client');\n  }\n  getPeer() {\n    return this.call.getPeer();\n  }\n  _write(chunk, encoding, cb) {\n    tryWrite(this.call, this.serialize, chunk, encoding, cb);\n  }\n  _final(cb) {\n    this.call.end();\n    cb();\n  }\n}\nexports.ClientWritableStreamImpl = ClientWritableStreamImpl;\nclass ClientDuplexStreamImpl extends stream_1.Duplex {\n  constructor(call, serialize, deserialize) {\n    super({\n      objectMode: true\n    });\n    this.call = call;\n    this.serialize = serialize;\n    this.deserialize = deserialize;\n    call.on('metadata', metadata => {\n      this.emit('metadata', metadata);\n    });\n    setUpReadableStream(this, call, deserialize);\n  }\n  cancel() {\n    this.call.cancelWithStatus(constants_1.Status.CANCELLED, 'Cancelled on client');\n  }\n  getPeer() {\n    return this.call.getPeer();\n  }\n  _read(_size) {\n    this.call.resume();\n  }\n  _write(chunk, encoding, cb) {\n    tryWrite(this.call, this.serialize, chunk, encoding, cb);\n  }\n  _final(cb) {\n    this.call.end();\n    cb();\n  }\n}\nexports.ClientDuplexStreamImpl = ClientDuplexStreamImpl;","map":{"version":3,"names":["require","Object","defineProperty","exports","value","events_1","stream_1","constants_1","ClientUnaryCallImpl","EventEmitter","constructor","call","on","metadata","emit","status","cancel","cancelWithStatus","Status","CANCELLED","getPeer","setUpReadableStream","stream","deserialize","statusEmitted","data","deserialized","e","INTERNAL","push","pause","once","code","OK","error","assign","Error","details","ClientReadableStreamImpl","Readable","objectMode","_read","_size","resume","tryWrite","serialize","chunk","encoding","cb","message","flags","Number","writeObj","isNaN","write","ClientWritableStreamImpl","Writable","_write","_final","end","ClientDuplexStreamImpl","Duplex"],"sources":["/var/www/html/project/Dash_Vuexy-master/node_modules/@grpc/grpc-js/build/src/call.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst events_1 = require(\"events\");\nconst stream_1 = require(\"stream\");\nconst constants_1 = require(\"./constants\");\nclass ClientUnaryCallImpl extends events_1.EventEmitter {\n    constructor(call) {\n        super();\n        this.call = call;\n        call.on('metadata', (metadata) => {\n            this.emit('metadata', metadata);\n        });\n        call.on('status', (status) => {\n            this.emit('status', status);\n        });\n    }\n    cancel() {\n        this.call.cancelWithStatus(constants_1.Status.CANCELLED, 'Cancelled on client');\n    }\n    getPeer() {\n        return this.call.getPeer();\n    }\n}\nexports.ClientUnaryCallImpl = ClientUnaryCallImpl;\nfunction setUpReadableStream(stream, call, deserialize) {\n    let statusEmitted = false;\n    call.on('data', (data) => {\n        let deserialized;\n        try {\n            deserialized = deserialize(data);\n        }\n        catch (e) {\n            call.cancelWithStatus(constants_1.Status.INTERNAL, 'Failed to parse server response');\n            return;\n        }\n        if (!stream.push(deserialized)) {\n            call.pause();\n        }\n    });\n    call.on('end', () => {\n        if (statusEmitted) {\n            stream.push(null);\n        }\n        else {\n            call.once('status', () => {\n                stream.push(null);\n            });\n        }\n    });\n    call.on('status', (status) => {\n        if (status.code !== constants_1.Status.OK) {\n            const error = Object.assign(new Error(status.details), status);\n            stream.emit('error', error);\n        }\n        stream.emit('status', status);\n        statusEmitted = true;\n    });\n    call.pause();\n}\nclass ClientReadableStreamImpl extends stream_1.Readable {\n    constructor(call, deserialize) {\n        super({ objectMode: true });\n        this.call = call;\n        this.deserialize = deserialize;\n        call.on('metadata', (metadata) => {\n            this.emit('metadata', metadata);\n        });\n        setUpReadableStream(this, call, deserialize);\n    }\n    cancel() {\n        this.call.cancelWithStatus(constants_1.Status.CANCELLED, 'Cancelled on client');\n    }\n    getPeer() {\n        return this.call.getPeer();\n    }\n    _read(_size) {\n        this.call.resume();\n    }\n}\nexports.ClientReadableStreamImpl = ClientReadableStreamImpl;\nfunction tryWrite(call, serialize, chunk, encoding, cb) {\n    let message;\n    const flags = Number(encoding);\n    try {\n        message = serialize(chunk);\n    }\n    catch (e) {\n        call.cancelWithStatus(constants_1.Status.INTERNAL, 'Serialization failure');\n        cb(e);\n        return;\n    }\n    const writeObj = { message };\n    if (!Number.isNaN(flags)) {\n        writeObj.flags = flags;\n    }\n    call.write(writeObj, cb);\n}\nclass ClientWritableStreamImpl extends stream_1.Writable {\n    constructor(call, serialize) {\n        super({ objectMode: true });\n        this.call = call;\n        this.serialize = serialize;\n        call.on('metadata', (metadata) => {\n            this.emit('metadata', metadata);\n        });\n        call.on('status', (status) => {\n            this.emit('status', status);\n        });\n    }\n    cancel() {\n        this.call.cancelWithStatus(constants_1.Status.CANCELLED, 'Cancelled on client');\n    }\n    getPeer() {\n        return this.call.getPeer();\n    }\n    _write(chunk, encoding, cb) {\n        tryWrite(this.call, this.serialize, chunk, encoding, cb);\n    }\n    _final(cb) {\n        this.call.end();\n        cb();\n    }\n}\nexports.ClientWritableStreamImpl = ClientWritableStreamImpl;\nclass ClientDuplexStreamImpl extends stream_1.Duplex {\n    constructor(call, serialize, deserialize) {\n        super({ objectMode: true });\n        this.call = call;\n        this.serialize = serialize;\n        this.deserialize = deserialize;\n        call.on('metadata', (metadata) => {\n            this.emit('metadata', metadata);\n        });\n        setUpReadableStream(this, call, deserialize);\n    }\n    cancel() {\n        this.call.cancelWithStatus(constants_1.Status.CANCELLED, 'Cancelled on client');\n    }\n    getPeer() {\n        return this.call.getPeer();\n    }\n    _read(_size) {\n        this.call.resume();\n    }\n    _write(chunk, encoding, cb) {\n        tryWrite(this.call, this.serialize, chunk, encoding, cb);\n    }\n    _final(cb) {\n        this.call.end();\n        cb();\n    }\n}\nexports.ClientDuplexStreamImpl = ClientDuplexStreamImpl;\n//# sourceMappingURL=call.js.map"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}