{"ast":null,"code":"\"use strict\";\n\n/**\n * Copyright 2019 Google LLC. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nrequire(\"core-js/modules/esnext.typed-array.to-reversed.js\");\nrequire(\"core-js/modules/esnext.typed-array.to-sorted.js\");\nrequire(\"core-js/modules/esnext.typed-array.with.js\");\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function step(result) {\n      result.done ? resolve(result.value) : new P(function (resolve) {\n        resolve(result.value);\n      }).then(fulfilled, rejected);\n    }\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n// This file implements crypto functions we need using in-browser\n// SubtleCrypto interface `window.crypto.subtle`.\nconst base64js = require(\"base64-js\");\nconst isbrowser_1 = require(\"../../isbrowser\");\n// Not all browsers support `TextEncoder`. The following `require` will\n// provide a fast UTF8-only replacement for those browsers that don't support\n// text encoding natively.\nif (isbrowser_1.isBrowser() && typeof TextEncoder === 'undefined') {\n  require('fast-text-encoding');\n}\nclass BrowserCrypto {\n  constructor() {\n    if (typeof window === 'undefined' || window.crypto === undefined || window.crypto.subtle === undefined) {\n      throw new Error('SubtleCrypto not found. Make sure it\\'s an https:// website.');\n    }\n  }\n  sha256DigestBase64(str) {\n    return __awaiter(this, void 0, void 0, function* () {\n      // SubtleCrypto digest() method is async, so we must make\n      // this method async as well.\n      // To calculate SHA256 digest using SubtleCrypto, we first\n      // need to convert an input string to an ArrayBuffer:\n      const inputBuffer = new TextEncoder().encode(str);\n      // Result is ArrayBuffer as well.\n      const outputBuffer = yield window.crypto.subtle.digest('SHA-256', inputBuffer);\n      return base64js.fromByteArray(new Uint8Array(outputBuffer));\n    });\n  }\n  randomBytesBase64(count) {\n    const array = new Uint8Array(count);\n    window.crypto.getRandomValues(array);\n    return base64js.fromByteArray(array);\n  }\n  verify(pubkey, data, signature) {\n    return __awaiter(this, void 0, void 0, function* () {\n      const algo = {\n        name: 'RSASSA-PKCS1-v1_5',\n        hash: {\n          name: 'SHA-256'\n        }\n      };\n      const dataArray = new TextEncoder().encode(data);\n      // base64js requires padding, so let's add some '='\n      while (signature.length % 4 !== 0) {\n        signature += '=';\n      }\n      const signatureArray = base64js.toByteArray(signature);\n      const cryptoKey = yield window.crypto.subtle.importKey('jwk', pubkey, algo, true, ['verify']);\n      // SubtleCrypto's verify method is async so we must make\n      // this method async as well.\n      const result = yield window.crypto.subtle.verify(algo, cryptoKey, signatureArray, dataArray);\n      return result;\n    });\n  }\n  createSign(algorithm) {\n    throw new Error('createSign is not implemented in BrowserCrypto');\n  }\n  decodeBase64StringUtf8(base64) {\n    const uint8array = base64js.toByteArray(base64);\n    const result = new TextDecoder().decode(uint8array);\n    return result;\n  }\n  encodeBase64StringUtf8(text) {\n    const uint8array = new TextEncoder().encode(text);\n    const result = base64js.fromByteArray(uint8array);\n    return result;\n  }\n}\nexports.BrowserCrypto = BrowserCrypto;","map":{"version":3,"names":["require","__awaiter","thisArg","_arguments","P","generator","Promise","resolve","reject","fulfilled","value","step","next","e","rejected","result","done","then","apply","Object","defineProperty","exports","base64js","isbrowser_1","isBrowser","TextEncoder","BrowserCrypto","constructor","window","crypto","undefined","subtle","Error","sha256DigestBase64","str","inputBuffer","encode","outputBuffer","digest","fromByteArray","Uint8Array","randomBytesBase64","count","array","getRandomValues","verify","pubkey","data","signature","algo","name","hash","dataArray","length","signatureArray","toByteArray","cryptoKey","importKey","createSign","algorithm","decodeBase64StringUtf8","base64","uint8array","TextDecoder","decode","encodeBase64StringUtf8","text"],"sources":["/var/www/html/project/Dash_Vuexy-master/node_modules/google-auth-library/build/src/crypto/browser/crypto.js"],"sourcesContent":["\"use strict\";\n/**\n * Copyright 2019 Google LLC. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n// This file implements crypto functions we need using in-browser\n// SubtleCrypto interface `window.crypto.subtle`.\nconst base64js = require(\"base64-js\");\nconst isbrowser_1 = require(\"../../isbrowser\");\n// Not all browsers support `TextEncoder`. The following `require` will\n// provide a fast UTF8-only replacement for those browsers that don't support\n// text encoding natively.\nif (isbrowser_1.isBrowser() && typeof TextEncoder === 'undefined') {\n    require('fast-text-encoding');\n}\nclass BrowserCrypto {\n    constructor() {\n        if (typeof (window) === 'undefined' || window.crypto === undefined ||\n            window.crypto.subtle === undefined) {\n            throw new Error('SubtleCrypto not found. Make sure it\\'s an https:// website.');\n        }\n    }\n    sha256DigestBase64(str) {\n        return __awaiter(this, void 0, void 0, function* () {\n            // SubtleCrypto digest() method is async, so we must make\n            // this method async as well.\n            // To calculate SHA256 digest using SubtleCrypto, we first\n            // need to convert an input string to an ArrayBuffer:\n            const inputBuffer = new TextEncoder().encode(str);\n            // Result is ArrayBuffer as well.\n            const outputBuffer = yield window.crypto.subtle.digest('SHA-256', inputBuffer);\n            return base64js.fromByteArray(new Uint8Array(outputBuffer));\n        });\n    }\n    randomBytesBase64(count) {\n        const array = new Uint8Array(count);\n        window.crypto.getRandomValues(array);\n        return base64js.fromByteArray(array);\n    }\n    verify(pubkey, data, signature) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const algo = {\n                name: 'RSASSA-PKCS1-v1_5',\n                hash: { name: 'SHA-256' },\n            };\n            const dataArray = new TextEncoder().encode(data);\n            // base64js requires padding, so let's add some '='\n            while (signature.length % 4 !== 0) {\n                signature += '=';\n            }\n            const signatureArray = base64js.toByteArray(signature);\n            const cryptoKey = yield window.crypto.subtle.importKey('jwk', pubkey, algo, true, ['verify']);\n            // SubtleCrypto's verify method is async so we must make\n            // this method async as well.\n            const result = yield window.crypto.subtle.verify(algo, cryptoKey, signatureArray, dataArray);\n            return result;\n        });\n    }\n    createSign(algorithm) {\n        throw new Error('createSign is not implemented in BrowserCrypto');\n    }\n    decodeBase64StringUtf8(base64) {\n        const uint8array = base64js.toByteArray(base64);\n        const result = new TextDecoder().decode(uint8array);\n        return result;\n    }\n    encodeBase64StringUtf8(text) {\n        const uint8array = new TextEncoder().encode(text);\n        const result = base64js.fromByteArray(uint8array);\n        return result;\n    }\n}\nexports.BrowserCrypto = BrowserCrypto;\n//# sourceMappingURL=crypto.js.map"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}