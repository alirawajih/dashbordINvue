/*
 Highcharts JS v11.1.0 (2023-09-05)

 (c) 2009-2022

 License: www.highcharts.com/license
*/
'use strict';(function(a){"object"===typeof module&&module.exports?(a["default"]=a,module.exports=a):"function"===typeof define&&define.amd?define("highcharts/modules/geoheatmap",["highcharts"],function(d){a(d);a.Highcharts=d;return a}):a("undefined"!==typeof Highcharts?Highcharts:void 0)})(function(a){function d(a,b,f,l){a.hasOwnProperty(b)||(a[b]=l.apply(null,f),"function"===typeof CustomEvent&&window.dispatchEvent(new CustomEvent("HighchartsModuleLoaded",{detail:{path:b,module:a[b]}})))}a=a?a._modules:
{};d(a,"Series/GeoHeatmap/GeoHeatmapPoint.js",[a["Core/Utilities.js"],a["Core/Series/SeriesRegistry.js"]],function(a,b){({map:{prototype:{pointClass:b}}}=b.seriesTypes);const {isNumber:f}=a;class l extends b{constructor(){super(...arguments);this.series=this.options=this.lon=this.lat=void 0}applyOptions(a,p){a=super.applyOptions.call(this,a,p);const {lat:r,lon:m}=a.options;if(f(m)&&f(r)){const {colsize:b=1,rowsize:l=1}=this.series.options;p=m-b/2;const f=r-l/2;a.geometry=a.options.geometry={type:"Polygon",
coordinates:[[[p,f],[p+b,f],[p+b,f+l],[p,f+l],[p,f]]]}}return a}}return l});d(a,"Series/InterpolationUtilities.js",[a["Core/Globals.js"],a["Core/Utilities.js"]],function(a,b){const {doc:f}=a,{defined:l,pick:d}=b;return{colorFromPoint:function(a,b){var m=b.series.colorAxis;return m?(m=m.toColor(a||0,b).split(")")[0].split("(")[1].split(",").map(a=>d(parseFloat(a),parseInt(a,10))),m[3]=255*d(m[3],1),l(a)&&b.visible||(m[3]=0),m):[0,0,0,0]},getContext:function(a){const {canvas:b,context:m}=a;if(b&&m)m.clearRect(0,
0,b.width,b.height);else return a.canvas=f.createElement("canvas"),a.context=a.canvas.getContext("2d",{willReadFrequently:!0})||void 0,a.context;return m}}});d(a,"Series/GeoHeatmap/GeoHeatmapSeries.js",[a["Core/Animation/AnimationUtilities.js"],a["Series/GeoHeatmap/GeoHeatmapPoint.js"],a["Core/Globals.js"],a["Series/InterpolationUtilities.js"],a["Core/Series/SeriesRegistry.js"],a["Core/Utilities.js"]],function(a,b,f,l,d,p){function r(a){return a-360*Math.floor((a+180)/360)}const {animObject:m,stop:y}=
a;({noop:a}=f);const {colorFromPoint:z,getContext:A}=l;({seriesTypes:{map:l}}=d);const {addEvent:B,extend:C,isNumber:w,isObject:D,merge:t,pick:v}=p;class u extends l{constructor(){super(...arguments);this.context=this.canvas=this.points=this.data=this.options=void 0;this.isDirtyCanvas=!0}update(){this.options=t(this.options,arguments[0]);this.getInterpolation().enabled&&(this.isDirtyCanvas=!0,this.points.forEach(a=>{a.graphic&&(a.graphic.destroy(),delete a.graphic)}));super.update.apply(this,arguments)}translate(){this.getInterpolation().enabled&&
this.image&&!this.isDirty&&!this.isDirtyData||super.translate.apply(this,arguments)}getInterpolation(){return D(this.options.interpolation)?this.options.interpolation:{blur:1,enabled:this.options.interpolation}}drawPoints(){var a=this.chart.mapView,b=this.options;if(this.getInterpolation().enabled&&a&&this.bounds){var c=this.context||A(this);const {canvas:g,colorAxis:n,image:d,chart:p,points:k}=this,[q,x]=[v(b.colsize,1),v(b.rowsize,1)];b=a.projectedUnitsToPixels({x:this.bounds.x1,y:this.bounds.y2});
var e=a.projectedUnitsToPixels({x:this.bounds.x2,y:this.bounds.y1});if(g&&c&&n&&b&&e){const n={x:b.x,y:b.y,width:e.x-b.x,height:e.y-b.y};if(this.isDirtyCanvas||this.isDirtyData||"Orthographic"===a.projection.options.name){this.isDirtyCanvas=!0;b=g.width=~~(360/q)+1;e=g.height=~~(180/x)+1;const d=new Uint8ClampedArray(b*e*4);this.directTouch=!1;for(var h=0;h<k.length;h++){var f=k[h],l=new Uint8ClampedArray(z(f.value,f));const {lon:a,lat:c}=f.options;w(a)&&w(c)&&d.set(l,4*Math.ceil(b*(e-1-(c+90)/x)+
(a+180)/q))}h=this.getInterpolation().blur;h=0===h?1:11*h;l=~~(b*h);const m=~~(e*h);h=~~n.width;f=~~n.height;b=new ImageData(d,b,e);g.width=l;g.height=m;c.putImageData(b,0,0);c.globalCompositeOperation="copy";c.drawImage(g,0,0,b.width,b.height,0,0,g.width,g.height);b=c.getImageData(0,0,g.width,g.height);a=this.getProjectedImageData(a,h,f,b,g,n.x,n.y);a=new ImageData(a,h,f);c.globalCompositeOperation="copy";g.width=h;g.height=f;c.putImageData(a,0,0)}if(d)if(p.renderer.globalAnimation&&p.hasRendered){const a=
Number(d.attr("x")),b=Number(d.attr("y")),h=Number(d.attr("width")),f=Number(d.attr("height")),k=(c,e)=>{d.attr({x:a+(n.x-a)*e.pos,y:b+(n.y-b)*e.pos,width:h+(n.width-h)*e.pos,height:f+(n.height-f)*e.pos})};c=t(m(p.renderer.globalAnimation));const e=c.step;c.step=function(){e&&e.apply(this,arguments);k.apply(this,arguments)};d.attr(t({animator:0},this.isDirtyCanvas?{href:g.toDataURL("image/png",1)}:void 0)).animate({animator:1},c)}else y(d),d.attr(t(n,this.isDirtyCanvas?{href:g.toDataURL("image/png",
1)}:void 0));else this.image=p.renderer.image(g.toDataURL("image/png",1)).attr(n).add(this.group);this.isDirtyCanvas=!1}}else super.drawPoints.apply(this,arguments)}getProjectedImageData(a,b,c,e,h,d,f){var n;c=new Uint8ClampedArray(b*c*4);const l=v(null===(n=a.projection.options.rotation)||void 0===n?void 0:n[0],0);n=h.width/360;const m=-1*h.height/180;let p=-1;for(let g=0;g<c.length;g+=4){var k=g/4%b;0===k&&p++;if(k=a.pixelsToLonLat({x:d+k,y:f+p})){k.lon>-180-l&&k.lon<180-l&&(k.lon=r(k.lon));var q=
[k.lon,k.lat];k=q[0]*n+h.width/2;q=q[1]*m+h.height/2;0<=k&&k<=h.width&&0<=q&&q<=h.height&&(k=Math.floor(q)*h.width*4+4*Math.round(k),c[g]=e.data[k],c[g+1]=e.data[k+1],c[g+2]=e.data[k+2],c[g+3]=e.data[k+3])}}return c}searchPoint(a,b){const c=this.chart;var e=c.mapView;if(e&&this.bounds&&this.image&&c.tooltip&&c.tooltip.options.enabled)if(!1===c.pointer.hasDragged&&(.01>=+this.image.attr("animator")||.99<=+this.image.attr("animator"))){const d=e.projectedUnitsToPixels({x:this.bounds.x1,y:this.bounds.y2});
e=e.projectedUnitsToPixels({x:this.bounds.x2,y:this.bounds.y1});c.pointer.normalize(a);if(a.lon&&a.lat&&d&&e&&a.chartX-c.plotLeft>d.x&&a.chartX-c.plotLeft<e.x&&a.chartY-c.plotTop>d.y&&a.chartY-c.plotTop<e.y)return this.searchKDTree({clientX:a.chartX,lon:r(a.lon),lat:a.lat},b,a)}else c.tooltip.destroy()}}u.defaultOptions=t(l.defaultOptions,{nullColor:"transparent",tooltip:{pointFormat:"Lat: {point.lat}, Lon: {point.lon}, Value: {point.value}<br/>"},borderWidth:0,colsize:1,rowsize:1,stickyTracking:!0,
interpolation:{enabled:!1,blur:1}});B(u,"afterDataClassLegendClick",function(){this.isDirtyCanvas=!0;this.drawPoints()});C(u.prototype,{type:"geoheatmap",applyJitter:a,pointClass:b,pointArrayMap:["lon","lat","value"],kdAxisArray:["lon","lat"]});d.registerSeriesType("geoheatmap",u);"";return u});d(a,"masters/modules/geoheatmap.src.js",[],function(){})});
//# sourceMappingURL=geoheatmap.js.map