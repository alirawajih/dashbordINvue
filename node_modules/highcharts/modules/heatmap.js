/*
 Highmaps JS v11.1.0 (2023-09-05)

 (c) 2009-2021 Torstein Honsi

 License: www.highcharts.com/license
*/
'use strict';(function(a){"object"===typeof module&&module.exports?(a["default"]=a,module.exports=a):"function"===typeof define&&define.amd?define("highcharts/modules/heatmap",["highcharts"],function(l){a(l);a.Highcharts=l;return a}):a("undefined"!==typeof Highcharts?Highcharts:void 0)})(function(a){function l(a,g,A,v){a.hasOwnProperty(g)||(a[g]=v.apply(null,A),"function"===typeof CustomEvent&&window.dispatchEvent(new CustomEvent("HighchartsModuleLoaded",{detail:{path:g,module:a[g]}})))}a=a?a._modules:
{};l(a,"Core/Axis/Color/ColorAxisComposition.js",[a["Core/Color/Color.js"],a["Core/Utilities.js"]],function(a,g){const {parse:n}=a,{addEvent:v,extend:w,merge:z,pick:r,splat:f}=g;var p;(function(a){function p(){const c=this.options;this.colorAxis=[];c.colorAxis&&(c.colorAxis=f(c.colorAxis),c.colorAxis.forEach(c=>{new k(this,c)}))}function E(c){const h=b=>{b=c.allItems.indexOf(b);-1!==b&&(this.destroyItem(c.allItems[b]),c.allItems.splice(b,1))};let b=[],d,e;(this.chart.colorAxis||[]).forEach(function(c){(d=
c.options)&&d.showInLegend&&(d.dataClasses&&d.visible?b=b.concat(c.getDataClassLegendSymbols()):d.visible&&b.push(c),c.series.forEach(function(c){if(!c.options.showInLegend||d.dataClasses)"point"===c.options.legendType?c.points.forEach(function(c){h(c)}):h(c)}))});for(e=b.length;e--;)c.allItems.unshift(b[e])}function A(c){c.visible&&c.item.legendColor&&c.item.legendItem.symbol.attr({fill:c.item.legendColor})}function l(){const c=this.chart.colorAxis;c&&c.forEach(function(c,b,h){c.update({},h)})}function u(){(this.chart.colorAxis&&
this.chart.colorAxis.length||this.colorAttribs)&&this.translateColors()}function m(){const c=this.axisTypes;c?-1===c.indexOf("colorAxis")&&c.push("colorAxis"):this.axisTypes=["colorAxis"]}function d(c){const b=this,h=c?"show":"hide";b.visible=b.options.visible=!!c;["graphic","dataLabel"].forEach(function(c){if(b[c])b[c][h]()});this.series.buildKDTree()}function b(){const c=this,b=this.options.nullColor,h=this.colorAxis,d=this.colorKey;(this.data.length?this.data:this.points).forEach(e=>{var k=e.getNestedProperty(d);
(k=e.options.color||(e.isNull||null===e.value?b:h&&"undefined"!==typeof k?h.toColor(k,e):e.color||c.color))&&e.color!==k&&(e.color=k,"point"===c.options.legendType&&e.legendItem&&e.legendItem.label&&c.chart.legend.colorizeItem(e,e.visible))})}function B(c){const b=c.prototype.createAxis;c.prototype.createAxis=function(c,h){if("colorAxis"!==c)return b.apply(this,arguments);const d=new k(this,z(h.axis,{index:this[c].length,isX:!1}));this.isDirtyLegend=!0;this.axes.forEach(function(c){c.series=[]});
this.series.forEach(function(c){c.bindAxes();c.isDirtyData=!0});r(h.redraw,!0)&&this.redraw(h.animation);return d}}function e(){this.elem.attr("fill",n(this.start).tweenTo(n(this.end),this.pos),void 0,!0)}function y(){this.elem.attr("stroke",n(this.start).tweenTo(n(this.end),this.pos),void 0,!0)}const h=[];let k;a.compose=function(c,q,a,f,x){k||(k=c);g.pushUnique(h,q)&&(c=q.prototype,c.collectionsWithUpdate.push("colorAxis"),c.collectionsWithInit.colorAxis=[c.addColorAxis],v(q,"afterGetAxes",p),B(q));
g.pushUnique(h,a)&&(q=a.prototype,q.fillSetter=e,q.strokeSetter=y);g.pushUnique(h,f)&&(v(f,"afterGetAllItems",E),v(f,"afterColorizeItem",A),v(f,"afterUpdate",l));g.pushUnique(h,x)&&(w(x.prototype,{optionalAxis:"colorAxis",translateColors:b}),w(x.prototype.pointClass.prototype,{setVisible:d}),v(x,"afterTranslate",u,{order:1}),v(x,"bindAxes",m))};a.pointSetVisible=d})(p||(p={}));return p});l(a,"Core/Axis/Color/ColorAxisDefaults.js",[],function(){return{lineWidth:0,minPadding:0,maxPadding:0,gridLineColor:"#ffffff",
gridLineWidth:1,tickPixelInterval:72,startOnTick:!0,endOnTick:!0,offset:0,marker:{animation:{duration:50},width:.01,color:"#999999"},labels:{distance:8,overflow:"justify",rotation:0},minColor:"#e6e9ff",maxColor:"#0022ff",tickLength:5,showInLegend:!0}});l(a,"Core/Axis/Color/ColorAxis.js",[a["Core/Axis/Axis.js"],a["Core/Color/Color.js"],a["Core/Axis/Color/ColorAxisComposition.js"],a["Core/Axis/Color/ColorAxisDefaults.js"],a["Core/Legend/LegendSymbol.js"],a["Core/Series/SeriesRegistry.js"],a["Core/Utilities.js"]],
function(a,g,A,v,w,z,r){const {parse:f}=g,{series:p}=z,{extend:E,fireEvent:n,isArray:t,isNumber:l,merge:D,pick:u}=r;class m extends a{static compose(d,b,B,e){A.compose(m,d,b,B,e)}constructor(d,b){super(d,b);this.beforePadding=!1;this.chart=void 0;this.coll="colorAxis";this.stops=this.options=this.dataClasses=void 0;this.visible=!0;this.init(d,b)}init(d,b){var B=d.options.legend||{};const e=b.layout?"vertical"!==b.layout:"vertical"!==B.layout,a=b.visible;B=D(m.defaultColorAxisOptions,b,{showEmpty:!1,
title:null,visible:B.enabled&&!1!==a});this.side=b.side||e?2:1;this.reversed=b.reversed||!e;this.opposite=!e;super.init(d,B,"colorAxis");this.userOptions=b;t(d.userOptions.colorAxis)&&(d.userOptions.colorAxis[this.index]=b);b.dataClasses&&this.initDataClasses(b);this.initStops();this.horiz=e;this.zoomEnabled=!1}initDataClasses(d){const b=this.chart,a=this.legendItem=this.legendItem||{},e=d.dataClasses.length,y=this.options;let h,k=0,c=b.options.chart.colorCount;this.dataClasses=h=[];a.labels=[];(d.dataClasses||
[]).forEach(function(d,a){d=D(d);h.push(d);if(b.styledMode||!d.color)"category"===y.dataClassColor?(b.styledMode||(a=b.options.colors,c=a.length,d.color=a[k]),d.colorIndex=k,k++,k===c&&(k=0)):d.color=f(y.minColor).tweenTo(f(y.maxColor),2>e?.5:a/(e-1))})}hasData(){return!!(this.tickPositions||[]).length}setTickPositions(){if(!this.dataClasses)return super.setTickPositions()}initStops(){this.stops=this.options.stops||[[0,this.options.minColor],[1,this.options.maxColor]];this.stops.forEach(function(d){d.color=
f(d[1])})}setOptions(d){super.setOptions(d);this.options.crosshair=this.options.marker}setAxisSize(){var d=this.legendItem&&this.legendItem.symbol;const b=this.chart;var a=b.options.legend||{};let e,f;d?(this.left=a=d.attr("x"),this.top=e=d.attr("y"),this.width=f=d.attr("width"),this.height=d=d.attr("height"),this.right=b.chartWidth-a-f,this.bottom=b.chartHeight-e-d,this.len=this.horiz?f:d,this.pos=this.horiz?a:e):this.len=(this.horiz?a.symbolWidth:a.symbolHeight)||m.defaultLegendLength}normalizedValue(d){this.logarithmic&&
(d=this.logarithmic.log2lin(d));return 1-(this.max-d)/(this.max-this.min||1)}toColor(d,b){const a=this.dataClasses;var e=this.stops;let f,h,k,c;if(a)for(c=a.length;c--;){if(k=a[c],f=k.from,e=k.to,("undefined"===typeof f||d>=f)&&("undefined"===typeof e||d<=e)){h=k.color;b&&(b.dataClass=c,b.colorIndex=k.colorIndex);break}}else{d=this.normalizedValue(d);for(c=e.length;c--&&!(d>e[c][0]););f=e[c]||e[c+1];e=e[c+1]||f;d=1-(e[0]-d)/(e[0]-f[0]||1);h=f.color.tweenTo(e.color,d)}return h}getOffset(){const d=
this.legendItem&&this.legendItem.group,b=this.chart.axisOffset[this.side];if(d){this.axisParent=d;super.getOffset();const a=this.chart.legend;a.allItems.forEach(function(b){b instanceof m&&b.drawLegendSymbol(a,b)});a.render();this.chart.getMargins(!0);this.added||(this.added=!0,this.labelLeft=0,this.labelRight=this.width);this.chart.axisOffset[this.side]=b}}setLegendColor(){var d=this.reversed,b=d?1:0;d=d?0:1;b=this.horiz?[b,0,d,0]:[0,d,0,b];this.legendColor={linearGradient:{x1:b[0],y1:b[1],x2:b[2],
y2:b[3]},stops:this.stops}}drawLegendSymbol(d,b){var a;b=b.legendItem||{};const e=d.padding,f=d.options,h=this.options.labels,k=u(f.itemDistance,10),c=this.horiz,q=u(f.symbolWidth,c?m.defaultLegendLength:12),p=u(f.symbolHeight,c?12:m.defaultLegendLength),C=u(f.labelPadding,c?16:30);this.setLegendColor();b.symbol||(b.symbol=this.chart.renderer.symbol("roundedRect",0,d.baseline-11,q,p,{r:null!==(a=f.symbolRadius)&&void 0!==a?a:3}).attr({zIndex:1}).add(b.group));b.labelWidth=q+e+(c?k:u(h.x,h.distance)+
this.maxLabelLength);b.labelHeight=p+e+(c?C:0)}setState(d){this.series.forEach(function(b){b.setState(d)})}setVisible(){}getSeriesExtremes(){const d=this.series;let b;let a,e,f=d.length,h,k;this.dataMin=Infinity;for(this.dataMax=-Infinity;f--;){e=d[f];b=e.colorKey=u(e.options.colorKey,e.colorKey,e.pointValKey,e.zoneAxis,"y");var c=e.pointArrayMap;a=e[b+"Min"]&&e[b+"Max"];if(e[b+"Data"])var q=e[b+"Data"];else if(c){if(q=[],c=c.indexOf(b),h=e.yData,0<=c&&h)for(k=0;k<h.length;k++)q.push(u(h[k][c],h[k]))}else q=
e.yData;a?(e.minColorValue=e[b+"Min"],e.maxColorValue=e[b+"Max"]):(q=p.prototype.getExtremes.call(e,q),e.minColorValue=q.dataMin,e.maxColorValue=q.dataMax);"undefined"!==typeof e.minColorValue&&(this.dataMin=Math.min(this.dataMin,e.minColorValue),this.dataMax=Math.max(this.dataMax,e.maxColorValue));a||p.prototype.applyExtremes.call(e)}}drawCrosshair(d,b){const a=this.legendItem||{},e=b&&b.plotX,f=b&&b.plotY,h=this.pos,k=this.len;let c;b&&(c=this.toPixels(b.getNestedProperty(b.series.colorKey)),c<
h?c=h-2:c>h+k&&(c=h+k+2),b.plotX=c,b.plotY=this.len-c,super.drawCrosshair(d,b),b.plotX=e,b.plotY=f,this.cross&&!this.cross.addedToColorAxis&&a.group&&(this.cross.addClass("highcharts-coloraxis-marker").add(a.group),this.cross.addedToColorAxis=!0,this.chart.styledMode||"object"!==typeof this.crosshair||this.cross.attr({fill:this.crosshair.color})))}getPlotLinePath(d){const b=this.left,a=d.translatedValue,e=this.top;return l(a)?this.horiz?[["M",a-4,e-6],["L",a+4,e-6],["L",a,e],["Z"]]:[["M",b,a],["L",
b-6,a+6],["L",b-6,a-6],["Z"]]:super.getPlotLinePath(d)}update(d,b){const a=this.chart.legend;this.series.forEach(b=>{b.isDirtyData=!0});(d.dataClasses&&a.allItems||this.dataClasses)&&this.destroyItems();super.update(d,b);this.legendItem&&this.legendItem.label&&(this.setLegendColor(),a.colorizeItem(this,!0))}destroyItems(){const d=this.chart,b=this.legendItem||{};if(b.label)d.legend.destroyItem(this);else if(b.labels)for(const a of b.labels)d.legend.destroyItem(a);d.isDirtyLegend=!0}destroy(){this.chart.isDirtyLegend=
!0;this.destroyItems();super.destroy(...[].slice.call(arguments))}remove(d){this.destroyItems();super.remove(d)}getDataClassLegendSymbols(){const d=this,b=d.chart,a=d.legendItem&&d.legendItem.labels||[],e=b.options.legend,f=u(e.valueDecimals,-1),h=u(e.valueSuffix,""),k=c=>d.series.reduce((b,d)=>{b.push(...d.points.filter(b=>b.dataClass===c));return b},[]);let c;a.length||d.dataClasses.forEach((e,p)=>{const q=e.from,x=e.to,{numberFormatter:m}=b;let g=!0;c="";"undefined"===typeof q?c="< ":"undefined"===
typeof x&&(c="> ");"undefined"!==typeof q&&(c+=m(q,f)+h);"undefined"!==typeof q&&"undefined"!==typeof x&&(c+=" - ");"undefined"!==typeof x&&(c+=m(x,f)+h);a.push(E({chart:b,name:c,options:{},drawLegendSymbol:w.rectangle,visible:!0,isDataClass:!0,setState:c=>{for(const b of k(p))b.setState(c)},setVisible:function(){this.visible=g=d.visible=!g;const c=[];for(const b of k(p))b.setVisible(g),-1===c.indexOf(b.series)&&c.push(b.series);b.legend.colorizeItem(this,g);c.forEach(c=>{n(c,"afterDataClassLegendClick")})}},
e))});return a}}m.defaultColorAxisOptions=v;m.defaultLegendLength=200;m.keepProps=["legendItem"];Array.prototype.push.apply(a.keepProps,m.keepProps);"";return m});l(a,"Series/ColorMapComposition.js",[a["Core/Series/SeriesRegistry.js"],a["Core/Utilities.js"]],function(a,g){const {column:{prototype:n}}=a.seriesTypes,{addEvent:v,defined:l}=g;var z;(function(a){function f(a){this.moveToTopOnHover&&this.graphic&&this.graphic.attr({zIndex:a&&"hover"===a.state?1:0})}const p=[];a.pointMembers={dataLabelOnNull:!0,
moveToTopOnHover:!0,isValid:function(){return null!==this.value&&Infinity!==this.value&&-Infinity!==this.value&&(void 0===this.value||!isNaN(this.value))}};a.seriesMembers={colorKey:"value",axisTypes:["xAxis","yAxis","colorAxis"],parallelArrays:["x","y","value"],pointArrayMap:["value"],trackerGroups:["group","markerGroup","dataLabelsGroup"],colorAttribs:function(a){const f={};!l(a.color)||a.state&&"normal"!==a.state||(f[this.colorProp||"fill"]=a.color);return f},pointAttribs:n.pointAttribs};a.compose=
function(a){const n=a.prototype.pointClass;g.pushUnique(p,n)&&v(n,"afterSetState",f);return a}})(z||(z={}));return z});l(a,"Series/Heatmap/HeatmapPoint.js",[a["Core/Series/SeriesRegistry.js"],a["Core/Utilities.js"]],function(a,g){({seriesTypes:{scatter:{prototype:{pointClass:a}}}}=a);const {clamp:n,defined:v,extend:l,pick:z}=g;class r extends a{constructor(){super(...arguments);this.y=this.x=this.value=this.series=this.options=void 0}applyOptions(a,p){(this.isNull||null===this.value)&&delete this.color;
super.applyOptions(a,p);this.formatPrefix=this.isNull||null===this.value?"null":"point";return this}getCellAttributes(){var a=this.series;const p=a.options,g=(p.colsize||1)/2,l=(p.rowsize||1)/2,t=a.xAxis,r=a.yAxis,w=this.options.marker||a.options.marker;a=a.pointPlacementToXValue();const u=z(this.pointPadding,p.pointPadding,0),m={x1:n(Math.round(t.len-t.translate(this.x-g,!1,!0,!1,!0,-a)),-t.len,2*t.len),x2:n(Math.round(t.len-t.translate(this.x+g,!1,!0,!1,!0,-a)),-t.len,2*t.len),y1:n(Math.round(r.translate(this.y-
l,!1,!0,!1,!0)),-r.len,2*r.len),y2:n(Math.round(r.translate(this.y+l,!1,!0,!1,!0)),-r.len,2*r.len)};[["width","x"],["height","y"]].forEach(function(a){var b=a[0];a=a[1];let d=a+"1",e=a+"2";const f=Math.abs(m[d]-m[e]),h=w&&w.lineWidth||0,k=Math.abs(m[d]+m[e])/2;b=w&&w[b];v(b)&&b<f&&(b=b/2+h/2,m[d]=k-b,m[e]=k+b);if(u){if("x"===a&&t.reversed||"y"===a&&!r.reversed)d=e,e=a+"1";m[d]+=u;m[e]-=u}});return m}haloPath(a){if(!a)return[];const {x:f=0,y:g=0,width:n=0,height:r=0}=this.shapeArgs||{};return[["M",
f-a,g-a],["L",f-a,g+r+a],["L",f+n+a,g+r+a],["L",f+n+a,g-a],["Z"]]}isValid(){return Infinity!==this.value&&-Infinity!==this.value}}l(r.prototype,{dataLabelOnNull:!0,moveToTopOnHover:!0,ttBelow:!1});return r});l(a,"Series/InterpolationUtilities.js",[a["Core/Globals.js"],a["Core/Utilities.js"]],function(a,g){const {doc:n}=a,{defined:l,pick:w}=g;return{colorFromPoint:function(a,g){var f=g.series.colorAxis;return f?(f=f.toColor(a||0,g).split(")")[0].split("(")[1].split(",").map(a=>w(parseFloat(a),parseInt(a,
10))),f[3]=255*w(f[3],1),l(a)&&g.visible||(f[3]=0),f):[0,0,0,0]},getContext:function(a){const {canvas:g,context:f}=a;if(g&&f)f.clearRect(0,0,g.width,g.height);else return a.canvas=n.createElement("canvas"),a.context=a.canvas.getContext("2d",{willReadFrequently:!0})||void 0,a.context;return f}}});l(a,"Series/Heatmap/HeatmapSeries.js",[a["Core/Color/Color.js"],a["Series/ColorMapComposition.js"],a["Core/Globals.js"],a["Series/Heatmap/HeatmapPoint.js"],a["Core/Series/SeriesRegistry.js"],a["Core/Renderer/SVG/SVGRenderer.js"],
a["Core/Utilities.js"],a["Series/InterpolationUtilities.js"]],function(a,g,l,v,w,z,r,f){const {series:p,seriesTypes:{column:n,scatter:A}}=w,{prototype:{symbols:t}}=z,{addEvent:G,extend:D,fireEvent:u,isNumber:m,merge:d,pick:b}=r,{colorFromPoint:B,getContext:e}=f;class y extends A{constructor(){super(...arguments);this.points=this.options=this.data=this.context=this.colorAxis=this.canvas=void 0;this.valueMin=this.valueMax=NaN;this.isDirtyCanvas=!0}drawPoints(){const a=this;var b=a.options,c=b.marker||
{};if(b.interpolation){const {image:h,chart:k,xAxis:q,yAxis:n}=a,{reversed:p=!1,len:l}=q,{reversed:r=!1,len:C}=n;b={width:l,height:C};if(!h||a.isDirtyData||a.isDirtyCanvas){c=e(a);const {canvas:l,options:{colsize:C=1,rowsize:u=1},points:v,points:{length:t}}=a;var d=t-1,f=k.colorAxis&&k.colorAxis[0];if(l&&c&&f){const {min:e,max:t}=q.getExtremes(),{min:w,max:F}=n.getExtremes();f=t-e;var g=F-w,x=Math.round(f/C/8*8),m=Math.round(g/u/8*8);const [y,z]=[[x,x/f,p,"ceil"],[m,m/g,!r,"floor"]].map(([a,b,c,d])=>
c?c=>Math[d](a-b*c):a=>Math[d](b*a)),A=l.width=x+1;f=l.height=m+1;f*=A;d/=f;g=new Uint8ClampedArray(4*f);x=(a,b)=>4*Math.ceil(A*z(b-w)+y(a-e));a.buildKDTree();for(m=0;m<f;m++){const a=v[Math.ceil(d*m)],{x:b,y:c}=a;g.set(B(a.value,a),x(b,c))}c.putImageData(new ImageData(g,A),0,0);h?h.attr(Object.assign(Object.assign({},b),{href:l.toDataURL("image/png",1)})):(a.directTouch=!1,a.image=k.renderer.image(l.toDataURL("image/png",1)).attr(b).add(a.group))}a.isDirtyCanvas=!1}else h.width===l&&h.height===C||
h.attr(b)}else if(c.enabled||a._hasPointMarkers)p.prototype.drawPoints.call(a),a.points.forEach(b=>{b.graphic&&(b.graphic[a.chart.styledMode?"css":"animate"](a.colorAttribs(b)),null===b.value&&b.graphic.addClass("highcharts-null-point"))})}getExtremes(){const {dataMin:a,dataMax:b}=p.prototype.getExtremes.call(this,this.valueData);m(a)&&(this.valueMin=a);m(b)&&(this.valueMax=b);return p.prototype.getExtremes.call(this)}getValidPoints(a,b){return p.prototype.getValidPoints.call(this,a,b,!0)}hasData(){return!!this.processedXData.length}init(){super.init.apply(this,
arguments);const a=this.options;a.pointRange=b(a.pointRange,a.colsize||1);this.yAxis.axisPointRange=a.rowsize||1;t.ellipse=t.circle;a.marker&&m(a.borderRadius)&&(a.marker.r=a.borderRadius)}markerAttribs(a,b){const c=a.shapeArgs||{};if(a.hasImage)return{x:a.plotX,y:a.plotY};if(b&&"normal"!==b){var d=a.options.marker||{};a=this.options.marker||{};a=a.states&&a.states[b]||{};d=d.states&&d.states[b]||{};b=(d.width||a.width||c.width||0)+(d.widthPlus||a.widthPlus||0);a=(d.height||a.height||c.height||0)+
(d.heightPlus||a.heightPlus||0);return{x:(c.x||0)+((c.width||0)-b)/2,y:(c.y||0)+((c.height||0)-a)/2,width:b,height:a}}return c}pointAttribs(b,e){const c=p.prototype.pointAttribs.call(this,b,e),f=this.options||{};var g=this.chart.options.plotOptions||{},h=g.series||{};const k=g.heatmap||{};g=b&&b.options.borderColor||f.borderColor||k.borderColor||h.borderColor;h=b&&b.options.borderWidth||f.borderWidth||k.borderWidth||h.borderWidth||c["stroke-width"];c.stroke=b&&b.marker&&b.marker.lineColor||f.marker&&
f.marker.lineColor||g||this.color;c["stroke-width"]=h;e&&"normal"!==e&&(b=d(f.states&&f.states[e],f.marker&&f.marker.states&&f.marker.states[e],b&&b.options.states&&b.options.states[e]||{}),c.fill=b.color||a.parse(c.fill).brighten(b.brightness||0).get(),c.stroke=b.lineColor||c.stroke);return c}translate(){const {borderRadius:a,marker:b}=this.options,c=b&&b.symbol||"rect",e=t[c]?c:"rect",f=-1!==["circle","square"].indexOf(e);this.generatePoints();this.points.forEach(function(b){const g=b.getCellAttributes();
let h=Math.min(g.x1,g.x2);var k=Math.min(g.y1,g.y2);let l=Math.max(Math.abs(g.x2-g.x1),0),n=Math.max(Math.abs(g.y2-g.y1),0);b.hasImage=0===(b.marker&&b.marker.symbol||c||"").indexOf("url");f&&(k=Math.abs(l-n),h=Math.min(g.x1,g.x2)+(l<n?0:k/2),k=Math.min(g.y1,g.y2)+(l<n?k/2:0),l=n=Math.min(l,n));b.hasImage&&(b.marker={width:l,height:n});b.plotX=b.clientX=(g.x1+g.x2)/2;b.plotY=(g.y1+g.y2)/2;b.shapeType="path";b.shapeArgs=d(!0,{x:h,y:k,width:l,height:n},{d:t[e](h,k,l,n,{r:m(a)?a:0})})});u(this,"afterTranslate")}}
y.defaultOptions=d(A.defaultOptions,{animation:!1,borderRadius:0,borderWidth:0,interpolation:!1,nullColor:"#f7f7f7",dataLabels:{formatter:function(){const {numberFormatter:a}=this.series.chart,{value:b}=this.point;return m(b)?a(b,-1):""},inside:!0,verticalAlign:"middle",crop:!1,overflow:"allow",padding:0},marker:{symbol:"rect",radius:0,lineColor:void 0,states:{hover:{lineWidthPlus:0},select:{}}},clip:!0,pointRange:null,tooltip:{pointFormat:"{point.x}, {point.y}: {point.value}<br/>"},states:{hover:{halo:!1,
brightness:.2}},legendSymbol:"rectangle"});G(y,"afterDataClassLegendClick",function(){this.isDirtyCanvas=!0;this.drawPoints()});D(y.prototype,{axisTypes:g.seriesMembers.axisTypes,colorKey:g.seriesMembers.colorKey,directTouch:!0,getExtremesFromAll:!0,parallelArrays:g.seriesMembers.parallelArrays,pointArrayMap:["y","value"],pointClass:v,specialGroup:"group",trackerGroups:g.seriesMembers.trackerGroups,alignDataLabel:n.prototype.alignDataLabel,colorAttribs:g.seriesMembers.colorAttribs,getSymbol:p.prototype.getSymbol});
g.compose(y);w.registerSeriesType("heatmap",y);"";"";return y});l(a,"masters/modules/heatmap.src.js",[a["Core/Globals.js"],a["Core/Axis/Color/ColorAxis.js"]],function(a,g){a.ColorAxis=g;g.compose(a.Chart,a.Fx,a.Legend,a.Series)})});
//# sourceMappingURL=heatmap.js.map